// ==UserScript==
// @name [VOT] - Voice Over Translation
// @name:de [VOT] - Voice-Over-Video-Übersetzung
// @name:es [VOT] - Traducción de vídeo en off
// @name:fr [VOT] - Traduction vidéo voix-off
// @name:it [VOT] - Traduzione Video fuori campo
// @name:ru [VOT] - Закадровый перевод видео
// @name:zh [VOT] - 画外音视频翻译
// @description A small extension that adds a Yandex Browser video translation to other browsers
// @description:de Eine kleine Erweiterung, die eine Voice-over-Übersetzung von Videos aus dem Yandex-Browser zu anderen Browsern hinzufügt
// @description:es Una pequeña extensión que agrega una traducción de voz en off de un video de Yandex Browser a otros navegadores
// @description:fr Une petite extension qui ajoute la traduction vocale de la vidéo du Navigateur Yandex à d'autres navigateurs
// @description:it Una piccola estensione che aggiunge la traduzione vocale del video dal browser Yandex ad altri browser
// @description:ru Небольшое расширение, которое добавляет закадровый перевод видео из Яндекс Браузера в другие браузеры
// @description:zh 一个小扩展，它增加了视频从Yandex浏览器到其他浏览器的画外音翻译
// @version 1.3.4-testing-build.1
// @author sodapng, mynovelhost, Toil, SashaXser
// @supportURL https://github.com/ilyhalight/voice-over-translation/issues
// @match *://*.youtube.com/*
// @match *://*.youtube-nocookie.com/*
// @match *://*.twitch.tv/*
// @match *://*.xvideos.com/*
// @match *://*.pornhub.com/*
// @match *://*.vk.com/*
// @match *://*.vk.ru/*
// @match *://invidious.snopyta.org/*
// @match *://invidious.kavin.rocks/*
// @match *://vid.puffyan.us/*
// @match *://invidious.namazso.eu/*
// @match *://inv.riverside.rocks/*
// @match *://yt.artemislena.eu/*
// @match *://invidious.flokinet.to/*
// @match *://invidious.esmailelbob.xyz/*
// @match *://invidious.nerdvpn.de/*
// @match *://invidious.slipfox.xyz/*
// @match *://invidio.xamh.de/*
// @match *://invidious.dhusch.de/*
// @match *://*.piped.video/*
// @match *://piped.tokhmi.xyz/*
// @match *://piped.moomoo.me/*
// @match *://piped.syncpundit.io/*
// @match *://piped.mha.fi/*
// @match *://watch.whatever.social/*
// @match *://piped.garudalinux.org/*
// @match *://efy.piped.pages.dev/*
// @match *://watch.leptons.xyz/*
// @match *://piped.lunar.icu/*
// @match *://yt.dc09.ru/*
// @match *://piped.mint.lgbt/*
// @match *://*.il.ax/*
// @match *://piped.privacy.com.de/*
// @match *://piped.esmailelbob.xyz/*
// @match *://piped.projectsegfau.lt/*
// @match *://piped.in.projectsegfau.lt/*
// @match *://piped.us.projectsegfau.lt/*
// @match *://piped.privacydev.net/*
// @match *://piped.palveluntarjoaja.eu/*
// @match *://piped.smnz.de/*
// @match *://piped.adminforge.de/*
// @match *://piped.qdi.fi/*
// @match *://piped.hostux.net/*
// @match *://piped.chauvet.pro/*
// @match *://piped.jotoma.de/*
// @match *://piped.pfcd.me/*
// @match *://piped.frontendfriendly.xyz/*
// @match *://*.yewtu.be/*
// @match *://inv.vern.cc/*
// @match *://*.vimeo.com/*
// @match *://*.9gag.com/*
// @match *://*.twitter.com/*
// @match *://*.facebook.com/*
// @match *://*.rutube.ru/*
// @match *://*.bilibili.com/*
// @match *://my.mail.ru/*
// @connect api.browser.yandex.ru
// @downloadURL https://raw.githubusercontent.com/ilyhalight/voice-over-translation/master/dist/vot.user.js
// @grant GM_xmlhttpRequest
// @grant GM_info
// @homepageURL https://github.com/ilyhalight/voice-over-translation/issues
// @icon https://translate.yandex.ru/icons/favicon.ico
// @namespace vot
// @require https://cdnjs.cloudflare.com/ajax/libs/protobufjs/7.2.3/light/protobuf.min.js
// @updateURL https://raw.githubusercontent.com/ilyhalight/voice-over-translation/master/dist/vot.user.js
// ==/UserScript==

/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/css-loader/dist/cjs.js!./src/styles/main.css":
/*!*******************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./src/styles/main.css ***!
  \*******************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/noSourceMaps.js */ \"./node_modules/css-loader/dist/runtime/noSourceMaps.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".translationBlock {\\r\\n  padding: 0.45rem !important;\\r\\n  width: max-content;\\r\\n  position: absolute;\\r\\n  background: #2e2f34;\\r\\n  border-radius: 0.5rem !important;\\r\\n  left: 50%;\\r\\n  top: 5rem;\\r\\n  transform: translate(-50%);\\r\\n  text-align: center;\\r\\n  opacity: 0;\\r\\n  transition: opacity 1s;\\r\\n  -webkit-user-select: none;\\r\\n  -moz-user-select: none;\\r\\n  -ms-user-select: none;\\r\\n  user-select: none;\\r\\n  z-index: 100;\\r\\n}\\r\\n\\r\\n.translationBtn {\\r\\n  position: relative;\\r\\n  display: inline-block;\\r\\n  vertical-align: middle;\\r\\n  color: #fff;\\r\\n  padding-right: 0.25rem !important;\\r\\n  cursor: pointer;\\r\\n  font: 600 12px / 14px \\\"Segoe UI\\\", BlinkMacSystemFont, Arial, sans-serif;\\r\\n}\\r\\n\\r\\n.translationBlock:hover {\\r\\n  opacity: 1;\\r\\n}\\r\\n\\r\\n.translationMenu {\\r\\n  display: inline-block;\\r\\n  vertical-align: middle;\\r\\n  border-left: 1px solid #424348;\\r\\n  max-height: 16px;\\r\\n  max-width: 24px;\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n.translationMenuIcon {\\r\\n  padding: 0 10px !important;\\r\\n  width: 24px;\\r\\n}\\r\\n\\r\\n.translationIAlice {\\r\\n  display: inline-block;\\r\\n  vertical-align: middle;\\r\\n  max-height: 26px;\\r\\n  max-width: 50px;\\r\\n}\\r\\n\\r\\n.translationIconAlice {\\r\\n  height: 24px !important;\\r\\n  width: 24px !important;\\r\\n}\\r\\n\\r\\n.translationITranslate {\\r\\n  display: inline-block;\\r\\n  vertical-align: middle;\\r\\n  max-height: 20px;\\r\\n  max-width: 20px;\\r\\n}\\r\\n\\r\\n.translationMenuContent {\\r\\n  position: absolute;\\r\\n  background: #2e2f34;\\r\\n  color: #fff;\\r\\n  display: none;\\r\\n  border-radius: 1rem !important;\\r\\n  left: 50%;\\r\\n  top: 10rem;\\r\\n  transform: translate(-50%);\\r\\n  text-align: left;\\r\\n  font: 600 14px / 16px \\\"Segoe UI\\\", BlinkMacSystemFont, Arial, sans-serif !important;\\r\\n\\r\\n  width: 300px;\\r\\n  /* height: 375px; */\\r\\n  opacity: 0;\\r\\n  z-index: 100;\\r\\n  transition: opacity 0.5s ease;\\r\\n}\\r\\n\\r\\n.VOTMenuSlider {\\r\\n  -webkit-appearance: none !important;\\r\\n  appearance: none !important;\\r\\n  width: 268px !important;\\r\\n  height: 8px !important;\\r\\n  outline: none !important;\\r\\n  margin-top: 0.5rem;\\r\\n  opacity: 0.7;\\r\\n  /* background: #3C3F4D !important; */\\r\\n  background: rgb(253, 222, 85, 0.6) !important;\\r\\n  border: none !important;\\r\\n  border-radius: 2rem !important;\\r\\n  -webkit-transition: 0.2s !important;\\r\\n  transition: opacity 0.2s ease !important;\\r\\n}\\r\\n\\r\\n.VOTMenuSlider:hover {\\r\\n  opacity: 1;\\r\\n}\\r\\n\\r\\n.VOTMenuSlider::-webkit-slider-thumb {\\r\\n  -webkit-appearance: none !important;\\r\\n  appearance: none !important;\\r\\n  width: 10px !important;\\r\\n  height: 10px !important;\\r\\n  border-radius: 50% !important;\\r\\n  border: none !important;\\r\\n  background: #fff !important;\\r\\n  cursor: pointer !important;\\r\\n}\\r\\n\\r\\n.VOTMenuSlider::-moz-range-thumb {\\r\\n  width: 10px !important;\\r\\n  height: 10px !important;\\r\\n  border-radius: 50% !important;\\r\\n  border: none !important;\\r\\n  background: #fff !important;\\r\\n  cursor: pointer !important;\\r\\n}\\r\\n\\r\\n.VOTMenuSlider::-ms-thumb {\\r\\n  width: 10px !important;\\r\\n  height: 10px !important;\\r\\n  border-radius: 50% !important;\\r\\n  border: none !important;\\r\\n  background: #fff !important;\\r\\n  cursor: pointer !important;\\r\\n}\\r\\n\\r\\n.VOTMenuSlider::-ms-fill-lower {\\r\\n  height: 8px !important;\\r\\n  border-radius: 2rem !important;\\r\\n  background: linear-gradient(\\r\\n    90.1deg,\\r\\n    rgba(186, 153, 244, 0.85) -5.78%,\\r\\n    rgba(236, 138, 202, 0.7) 56.46%,\\r\\n    rgba(239, 168, 117, 0.6) 108.93%\\r\\n  ) !important;\\r\\n}\\r\\n\\r\\n.VOTMenuSlider::-moz-range-progress {\\r\\n  height: 8px !important;\\r\\n  border-radius: 2rem !important;\\r\\n  background: linear-gradient(\\r\\n    90.1deg,\\r\\n    rgba(186, 153, 244, 0.85) -5.78%,\\r\\n    rgba(236, 138, 202, 0.7) 56.46%,\\r\\n    rgba(239, 168, 117, 0.6) 108.93%\\r\\n  ) !important;\\r\\n}\\r\\n\\r\\n.translationHeader {\\r\\n  padding-bottom: 0.5rem !important;\\r\\n}\\r\\n\\r\\n.translationMainHeader {\\r\\n  margin: 16px !important;\\r\\n  color: #fff;\\r\\n  font: 900 14px / 16px \\\"Segoe UI\\\", BlinkMacSystemFont, Arial, sans-serif !important;\\r\\n}\\r\\n\\r\\n.translationMenuOptions {\\r\\n  display: flex;\\r\\n  flex-flow: column wrap;\\r\\n}\\r\\n\\r\\n.translationMenuContainer {\\r\\n  /* width: 100%; */\\r\\n  padding-left: 16px !important;\\r\\n  padding-top: 5px !important;\\r\\n  display: inline-block !important;\\r\\n}\\r\\n\\r\\n.translationMenuContainer > input {\\r\\n  appearance: auto !important;\\r\\n  vertical-align: text-bottom;\\r\\n}\\r\\n\\r\\n.translationMenuText {\\r\\n  color: #fff;\\r\\n  display: inline-flex;\\r\\n  width: 80%;\\r\\n}\\r\\n\\r\\n.translationVolumeBox,\\r\\n.translationVideoVolumeBox {\\r\\n  padding-top: 0.5rem !important;\\r\\n}\\r\\n\\r\\n.translationDropDB {\\r\\n  border: none !important;\\r\\n  border-radius: 4px !important;\\r\\n  background: #5426ff !important;\\r\\n  color: #fff !important;\\r\\n  padding: 6px 16px !important;\\r\\n  margin-left: auto !important;\\r\\n  cursor: pointer !important;\\r\\n}\\r\\n\\r\\n.translationDownload {\\r\\n  background: #5426ff !important;\\r\\n  color: #fff !important;\\r\\n  padding: 2px 10px !important;\\r\\n  border-radius: 4px !important;\\r\\n  cursor: pointer;\\r\\n  display: none;\\r\\n}\\r\\n\\r\\n.translationMenuFunctional {\\r\\n  display: flex;\\r\\n  margin: 16px !important;\\r\\n}\\r\\n\\r\\n.VOTMenuSelect {\\r\\n  width: 110px;\\r\\n  border-radius: 5px !important;\\r\\n  border: 1px solid #dadce0 !important;\\r\\n  box-shadow: 0 1px 3px -2px #9098a9;\\r\\n  box-sizing: border-box !important;\\r\\n  color: #2e2f34 !important;\\r\\n  background: #fff !important;\\r\\n  padding: 5px !important;\\r\\n}\\r\\n\\r\\n.VOTMenuSelect:focus {\\r\\n  outline: none;\\r\\n}\\r\\n\\r\\n.VOTMenuSelect:focus {\\r\\n  outline: none;\\r\\n  border-color: #0077ff;\\r\\n  box-shadow: 0 0 0 2px rgba(#0077ff, 0.2);\\r\\n}\\r\\n\\r\\n#VOTSelectLanguages {\\r\\n  display: flex !important;\\r\\n  margin-left: 5px;\\r\\n}\\r\\n\\r\\n#VOTSelectLanguages svg {\\r\\n  margin: 0 5px;\\r\\n}\\r\\n\\r\\n#VOTSubtitlesLangContainer {\\r\\n  display: flex !important;\\r\\n  justify-content: space-between;\\r\\n  align-items: center;\\r\\n  margin-left: 5px;\\r\\n}\\r\\n\\r\\n#VOTSubtitlesLang {\\r\\n  margin-right: 25px;\\r\\n}\\r\\n\\r\\n.VOTSubtitlesWidget {\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n  align-items: center;\\r\\n  position: absolute;\\r\\n  width: 50%;\\r\\n  max-height: 100%;\\r\\n  min-height: 20%;\\r\\n  z-index: 100;\\r\\n  left: 25%;\\r\\n  top: 75%;\\r\\n  pointer-events: none;\\r\\n}\\r\\n\\r\\n.VOTSubtitlesWidget > div {\\r\\n  position: relative;\\r\\n  max-width: 100%;\\r\\n  max-height: 100%;\\r\\n  width: max-content;\\r\\n  background: #2e2f34cc;\\r\\n  border-radius: 1rem;\\r\\n  pointer-events: all;\\r\\n  padding: 1rem;\\r\\n  font-size: 2rem;\\r\\n  box-sizing: border-box;\\r\\n  -webkit-user-select: none;\\r\\n  -moz-user-select: none;\\r\\n  -ms-user-select: none;\\r\\n  user-select: none;\\r\\n}\\r\\n\", \"\"]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n\n\n//# sourceURL=webpack://voice-over-translation/./src/styles/main.css?./node_modules/css-loader/dist/cjs.js");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/api.js":
/*!*****************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/api.js ***!
  \*****************************************************/
/***/ ((module) => {

eval("\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};\n\n//# sourceURL=webpack://voice-over-translation/./node_modules/css-loader/dist/runtime/api.js?");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/noSourceMaps.js":
/*!**************************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/noSourceMaps.js ***!
  \**************************************************************/
/***/ ((module) => {

eval("\n\nmodule.exports = function (i) {\n  return i[1];\n};\n\n//# sourceURL=webpack://voice-over-translation/./node_modules/css-loader/dist/runtime/noSourceMaps.js?");

/***/ }),

/***/ "./src/styles/main.css":
/*!*****************************!*\
  !*** ./src/styles/main.css ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../../node_modules/style-loader/dist/runtime/styleDomAPI.js */ \"./node_modules/style-loader/dist/runtime/styleDomAPI.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../../node_modules/style-loader/dist/runtime/insertBySelector.js */ \"./node_modules/style-loader/dist/runtime/insertBySelector.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js */ \"./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../../node_modules/style-loader/dist/runtime/insertStyleElement.js */ \"./node_modules/style-loader/dist/runtime/insertStyleElement.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../../node_modules/style-loader/dist/runtime/styleTagTransform.js */ \"./node_modules/style-loader/dist/runtime/styleTagTransform.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _node_modules_css_loader_dist_cjs_js_main_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../../node_modules/css-loader/dist/cjs.js!./main.css */ \"./node_modules/css-loader/dist/cjs.js!./src/styles/main.css\");\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = (_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());\noptions.setAttributes = (_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());\n\n      options.insert = _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, \"head\");\n    \noptions.domAPI = (_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());\noptions.insertStyleElement = (_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());\n\nvar update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_main_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"], options);\n\n\n\n\n       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_css_loader_dist_cjs_js_main_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"] && _node_modules_css_loader_dist_cjs_js_main_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals ? _node_modules_css_loader_dist_cjs_js_main_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals : undefined);\n\n\n//# sourceURL=webpack://voice-over-translation/./src/styles/main.css?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":
/*!****************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js ***!
  \****************************************************************************/
/***/ ((module) => {

eval("\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};\n\n//# sourceURL=webpack://voice-over-translation/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/insertBySelector.js":
/*!********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/insertBySelector.js ***!
  \********************************************************************/
/***/ ((module) => {

eval("\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;\n\n//# sourceURL=webpack://voice-over-translation/./node_modules/style-loader/dist/runtime/insertBySelector.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/insertStyleElement.js":
/*!**********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/insertStyleElement.js ***!
  \**********************************************************************/
/***/ ((module) => {

eval("\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;\n\n//# sourceURL=webpack://voice-over-translation/./node_modules/style-loader/dist/runtime/insertStyleElement.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js ***!
  \**********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce =  true ? __webpack_require__.nc : 0;\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;\n\n//# sourceURL=webpack://voice-over-translation/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/styleDomAPI.js":
/*!***************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/styleDomAPI.js ***!
  \***************************************************************/
/***/ ((module) => {

eval("\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n  var needLayer = typeof obj.layer !== \"undefined\";\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += \"}\";\n  }\n  if (obj.media) {\n    css += \"}\";\n  }\n  if (obj.supports) {\n    css += \"}\";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === \"undefined\") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;\n\n//# sourceURL=webpack://voice-over-translation/./node_modules/style-loader/dist/runtime/styleDomAPI.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/styleTagTransform.js":
/*!*********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/styleTagTransform.js ***!
  \*********************************************************************/
/***/ ((module) => {

eval("\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;\n\n//# sourceURL=webpack://voice-over-translation/./node_modules/style-loader/dist/runtime/styleTagTransform.js?");

/***/ }),

/***/ "./src/config/alternativeUrls.js":
/*!***************************************!*\
  !*** ./src/config/alternativeUrls.js ***!
  \***************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"sitesInvidious\": () => (/* binding */ sitesInvidious),\n/* harmony export */   \"sitesPiped\": () => (/* binding */ sitesPiped)\n/* harmony export */ });\n// Sites host Invidious. I tested the performance only on invidious.kevin.rocks, youtu.be and inv.vern.cc\r\nconst sitesInvidious = [\r\n  \"invidious.snopyta.org\",\r\n  \"yewtu.be\",\r\n  \"invidious.kavin.rocks\",\r\n  \"vid.puffyan.us\",\r\n  \"invidious.namazso.eu\",\r\n  \"inv.riverside.rocks\",\r\n  \"yt.artemislena.eu\",\r\n  \"invidious.flokinet.to\",\r\n  \"invidious.esmailelbob.xyz\",\r\n  \"y.com.sb\",\r\n  \"invidious.nerdvpn.de\",\r\n  \"inv.vern.cc\",\r\n  \"invidious.slipfox.xyz\",\r\n  \"invidio.xamh.de\",\r\n  \"invidious.dhusch.de\",\r\n];\r\n\r\n// Sites host Piped. I tested the performance only on piped.video\r\nconst sitesPiped = [\r\n  \"piped.video\",\r\n  \"piped.tokhmi.xyz\",\r\n  \"piped.moomoo.me\",\r\n  \"piped.syncpundit.io\",\r\n  \"piped.mha.fi\",\r\n  \"watch.whatever.social\",\r\n  \"piped.garudalinux.org\",\r\n  \"efy.piped.pages.dev\",\r\n  \"watch.leptons.xyz\",\r\n  \"piped.lunar.icu\",\r\n  \"yt.dc09.ru\",\r\n  \"piped.mint.lgbt\",\r\n  \"il.ax\",\r\n  \"piped.privacy.com.de\",\r\n  \"piped.esmailelbob.xyz\",\r\n  \"piped.projectsegfau.lt\",\r\n  \"piped.in.projectsegfau.lt\",\r\n  \"piped.us.projectsegfau.lt\",\r\n  \"piped.privacydev.net\",\r\n  \"piped.palveluntarjoaja.eu\",\r\n  \"piped.smnz.de\",\r\n  \"piped.adminforge.de\",\r\n  \"piped.qdi.fi\",\r\n  \"piped.hostux.net\",\r\n  \"piped.chauvet.pro\",\r\n  \"piped.jotoma.de\",\r\n  \"piped.pfcd.me\",\r\n  \"piped.frontendfriendly.xyz\",\r\n];\r\n\r\n\r\n\n\n//# sourceURL=webpack://voice-over-translation/./src/config/alternativeUrls.js?");

/***/ }),

/***/ "./src/config/config-cloudflare.js":
/*!*****************************************!*\
  !*** ./src/config/config-cloudflare.js ***!
  \*****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"workerHost\": () => (/* binding */ workerHost),\n/* harmony export */   \"yandexHmacKey\": () => (/* binding */ yandexHmacKey)\n/* harmony export */ });\n// CLOUDFLARE CONFIGURATION\r\nconst workerHost = \"vot.toil-dump.workers.dev\";\r\nconst yandexHmacKey = \"xtGCyGdTY2Jy6OMEKdTuXev3Twhkamgm\";\r\n\r\n\r\n\n\n//# sourceURL=webpack://voice-over-translation/./src/config/config-cloudflare.js?");

/***/ }),

/***/ "./src/config/config.js":
/*!******************************!*\
  !*** ./src/config/config.js ***!
  \******************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"autoVolume\": () => (/* binding */ autoVolume),\n/* harmony export */   \"workerHost\": () => (/* binding */ workerHost),\n/* harmony export */   \"yandexHmacKey\": () => (/* binding */ yandexHmacKey),\n/* harmony export */   \"yandexUserAgent\": () => (/* binding */ yandexUserAgent)\n/* harmony export */ });\n// CONFIGURATION\r\nconst workerHost = \"api.browser.yandex.ru\";\r\nconst yandexHmacKey = \"xtGCyGdTY2Jy6OMEKdTuXev3Twhkamgm\";\r\nconst yandexUserAgent = \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 YaBrowser/23.7.1.1140 Yowser/2.5 Safari/537.36\";\r\nconst autoVolume = 0.15; // 0.0 - 1.0 (0% - 100%) - default volume of the video with the translation\r\n\r\n\r\n\n\n//# sourceURL=webpack://voice-over-translation/./src/config/config.js?");

/***/ }),

/***/ "./src/config/constants.js":
/*!*********************************!*\
  !*** ./src/config/constants.js ***!
  \*********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"availableLangs\": () => (/* binding */ availableLangs),\n/* harmony export */   \"siteTranslates\": () => (/* binding */ siteTranslates),\n/* harmony export */   \"translations\": () => (/* binding */ translations)\n/* harmony export */ });\nconst availableLangs = {\r\n  ru: \"Russian\",\r\n  en: \"English\",\r\n  zh: \"Chinese\",\r\n  ko: \"Korean\",\r\n  ar: \"Arabic\",\r\n  fr: \"French\",\r\n  it: \"Italian\",\r\n  es: \"Spanish\",\r\n  de: \"German\",\r\n  ja: \"Japanese\",\r\n}; // available languages for translation\r\nconst siteTranslates = {\r\n  youtube: \"https://youtu.be/\",\r\n  twitch: \"https://twitch.tv/\",\r\n  vimeo: \"https://vimeo.com/\",\r\n  \"9gag\": \"https://9gag.com/gag/\",\r\n  vk: \"https://vk.com/video?z=\",\r\n  xvideos: \"https://www.xvideos.com/\",\r\n  pornhub: \"https://rt.pornhub.com/view_video.php?viewkey=\",\r\n  udemy: \"https://www.udemy.com\",\r\n  twitter: \"https://twitter.com/i/status/\",\r\n  facebook: \"https://www.facebook.com/\",\r\n  rutube: \"https://rutube.ru/video/\",\r\n  \"bilibili.com\": \"https://www.bilibili.com/video/\",\r\n  \"mail.ru\": \"https://my.mail.ru/\",\r\n  coub: \"https://coub.com/view/\",\r\n};\r\nconst translations = {\r\n  ru: {\r\n    recommended: \"рекомендуется\",\r\n    translateVideo: \"Перевести видео\",\r\n    disableTranslate: \"Выключить\",\r\n    translationSettings: \"Настройки перевода\",\r\n    resetSettings: \"Сбросить настройки\",\r\n    videoBeingTranslated: \"Видео переводится\",\r\n    videoLanguage: \"Язык видео\",\r\n    translationLanguage: \"Язык перевода\",\r\n    translationTake: \"Перевод займёт\",\r\n    translationTakeMoreThanHour: \"Перевод займёт больше часа\",\r\n    translationTakeAboutMinute: \"Перевод займёт около минуты\",\r\n    translationTakeFewMinutes: \"Перевод займёт несколько минут\",\r\n    translationTakeApproximatelyMinutes: \"Перевод займёт примерно {0} минут\",\r\n    translationTakeApproximatelyMinute: \"Перевод займёт примерно {0} минуты\",\r\n    unSupportedExtensionError:\r\n      `Ошибка! ${GM_info.scriptHandler} не поддерживается этой версией расширения!\\n\\nПожалуйста, используйте cloudflare-версию расширения VOT.`,\r\n    requestTranslationFailed: \"Не удалось запросить перевод видео\",\r\n    audioNotReceived: \"Не получена ссылка на аудио\",\r\n    grantPermissionToAutoPlay: \"Предоставьте разрешение на автовоспроизведение\",\r\n    neededAdditionalExtension:\r\n      \"Для поддержки этого сайта необходимо дополнительное расширение\",\r\n    audioFormatNotSupported: \"Формат аудио не поддерживается\",\r\n    VOTAutoTranslate: \"Переводить при открытии\",\r\n    VOTDontTranslateYourLang: \"Не переводить с родного языка\",\r\n    VOTVolume: \"Громкость видео\",\r\n    VOTVolumeTranslation: \"Громкость перевода\",\r\n    VOTAutoSetVolume: \"Уменьшать громкость видео до \",\r\n    VOTShowVideoSlider: \"Слайдер громкости видео\",\r\n    VOTSyncVolume: \"Связать громкость перевода и видео\",\r\n    VOTAudioProxy: \"Проксировать полученное аудио\",\r\n    VOTDisableFromYourLang: \"Вы отключили перевод видео на вашем языке\",\r\n    VOTLiveNotSupported: \"Не поддерживается перевод трансляций в прямом эфире\",\r\n    VOTPremiere: \"Дождитесь окончания премьеры перед переводом\",\r\n    VOTVideoIsTooLong: \"Видео слишком длинное\",\r\n    VOTNoVideoIDFound: \"Не найдено ID видео\",\r\n    VOTFailedInitDB: \"Не удалось инициализовать базу данных\",\r\n    VOTDBNeedUpdate:\r\n      \"Базе данных нужно обновление, пожалуйста, перезагрузите страницу\",\r\n    VOTDisabledForDBUpdating:\r\n      `VOT отключен из-за ошибки при обновление Базы Данных. Закройте все открытые вкладки с ${window.location.hostname} и попробуйте снова`,\r\n    VOTFailedWriteToDB: \"Не удалось записать данные в базу данных\",\r\n    VOTFailedReadFromDB: \"Не удалось получить данные из базы данных\",\r\n    Russian: \"Русский\",\r\n    English: \"Английский\",\r\n    Chinese: \"Китайский\",\r\n    French: \"Французский\",\r\n    Italian: \"Итальянский\",\r\n    Spanish: \"Испанский\",\r\n    German: \"Немецкий\",\r\n    Korean: \"Корейский\",\r\n    Japanese: \"Японский\",\r\n    Arabic: \"Арабский\",\r\n  },\r\n  en: {\r\n    recommended: \"recommended\",\r\n    translateVideo: \"Translate video\",\r\n    disableTranslate: \"Turn off\",\r\n    translationSettings: \"Translation settings\",\r\n    resetSettings: \"Reset settings\",\r\n    videoBeingTranslated: \"The video is being translated\",\r\n    videoLanguage: \"Video language\",\r\n    translationLanguage: \"Translation language\",\r\n    translationTake: \"The translation will take\",\r\n    translationTakeMoreThanHour: \"The translation will take more than an hour\",\r\n    translationTakeAboutMinute: \"The translation will take about a minute\",\r\n    translationTakeFewMinutes: \"The translation will take a few minutes\",\r\n    translationTakeApproximatelyMinutes:\r\n      \"The translation will take approximately {0} minutes\",\r\n    translationTakeApproximatelyMinute:\r\n      \"The translation will take approximately {0} minutes\",\r\n    unSupportedExtensionError:\r\n      `Error! ${GM_info.scriptHandler} is not supported by this version of the extension!\\n\\nPlease use the cloudflare version of the VOT extension.`,\r\n    requestTranslationFailed: \"Failed to request video translation\",\r\n    audioNotReceived: \"Audio link not received\",\r\n    grantPermissionToAutoPlay: \"Grant permission to autoplay\",\r\n    neededAdditionalExtension:\r\n      \"An additional extension is needed to support this site\",\r\n    audioFormatNotSupported: \"The audio format is not supported\",\r\n    VOTAutoTranslate: \"Translate on open\",\r\n    VOTDontTranslateYourLang: \"Do not translate from my language\",\r\n    VOTVolume: \"Video volume\",\r\n    VOTVolumeTranslation: \"Translation Volume\",\r\n    VOTAutoSetVolume: \"Reduce video volume to \",\r\n    VOTShowVideoSlider: \"Video volume slider\",\r\n    VOTSyncVolume: \"Link translation and video volume\",\r\n    VOTAudioProxy: \"Proxy received audio\",\r\n    VOTDisableFromYourLang:\r\n      \"You have disabled the translation of the video in your language\",\r\n    VOTLiveNotSupported: \"Translation of live streams is not supported\",\r\n    VOTPremiere: \"Wait for the premiere to end before translating\",\r\n    VOTVideoIsTooLong: \"Video is too long\",\r\n    VOTNoVideoIDFound: \"No video ID found\",\r\n    VOTFailedInitDB: \"Failed to initialize database\",\r\n    VOTDBNeedUpdate: \"The database needs an update, please reload the page\",\r\n    VOTDisabledForDBUpdating:\r\n      `VOT is disabled due to an error when updating the Database. Close all open tabs with ${window.location.hostname} and try again`,\r\n    VOTFailedWriteToDB: \"Data could not be written to the database\",\r\n    VOTFailedReadFromDB: \"Data could not be retrieved from the database\",\r\n    Russian: \"Russian\",\r\n    English: \"English\",\r\n    Chinese: \"Chinese\",\r\n    French: \"French\",\r\n    Italian: \"Italian\",\r\n    Spanish: \"Spanish\",\r\n    German: \"German\",\r\n    Korean: \"Korean\",\r\n    Japanese: \"Japanese\",\r\n    Arabic: \"Arabic\",\r\n  },\r\n  zh: {\r\n    recommended: \"推荐使用\",\r\n    translateVideo: \"翻译视频\",\r\n    disableTranslate: \"关掉\",\r\n    translationSettings: \"翻译需要一个多小时\",\r\n    resetSettings: \"重置设置\",\r\n    videoBeingTranslated: \"视频正在翻译中\",\r\n    videoLanguage: \"视频语言\",\r\n    translationLanguage: \"翻译语言\",\r\n    translationTake: \"翻译将采取\",\r\n    translationTakeMoreThanHour: \"翻译将采取一个多小时\",\r\n    translationTakeAboutMinute: \"翻译将采取一分钟\",\r\n    translationTakeFewMinutes: \"翻译将采取几分钟\",\r\n    translationTakeApproximatelyMinutes: \"翻译将采取大约需要{0}分钟\",\r\n    translationTakeApproximatelyMinute: \"翻译将采取大约需要{0}分钟\",\r\n    unSupportedExtensionError:\r\n      `错误! 此版本的扩展不支持 ${GM_info.scriptHandler}!\\n\\n请使用cloudflare版本的VOT扩展.`,\r\n    requestTranslationFailed: \"请求视频翻译失败\",\r\n    audioNotReceived: \"未收到音频链接\",\r\n    grantPermissionToAutoPlay: \"授予自动播放权限\",\r\n    neededAdditionalExtension: \"需要一个额外的扩展来支持这个网站\",\r\n    audioFormatNotSupported: \"不支持音频格式\",\r\n    VOTAutoTranslate: \"打开时翻译\",\r\n    VOTDontTranslateYourLang: \"不要从你的语言翻译过来\",\r\n    VOTVolume: \"视频量\",\r\n    VOTVolumeTranslation: \"翻译量\",\r\n    VOTAutoSetVolume: \"将视频音量降低到\",\r\n    VOTShowVideoSlider: \"视频音量滑块\",\r\n    VOTSyncVolume: \"链接翻译和视频音量\",\r\n    VOTAudioProxy: \"代理接收的音频\",\r\n    VOTDisableFromYourLang: \"你已经禁用了你的语言的视频翻译\",\r\n    VOTLiveNotSupported: \"不支持直播流的翻译\",\r\n    VOTPremiere: \"等待首映结束后再翻译\",\r\n    VOTVideoIsTooLong: \"视频太长\",\r\n    VOTNoVideoIDFound: \"没有找到视频ID\",\r\n    VOTFailedInitDB: \"初始化数据库失败\",\r\n    VOTDBNeedUpdate: \"数据库需要更新,请重新加载页面\",\r\n    VOTDisabledForDBUpdating:\r\n      `VOT由于更新数据库时出错而被禁用。 关闭所有打开的选项卡${window.location.hostname} 再试一次`,\r\n    VOTFailedWriteToDB: \"无法将数据写入数据库\",\r\n    VOTFailedReadFromDB: \"无法从数据库中检索数据\",\r\n    Russian: \"俄语\",\r\n    English: \"英语\",\r\n    Chinese: \"中文\",\r\n    French: \"法语\",\r\n    Italian: \"意大利语\",\r\n    Spanish: \"西班牙语\",\r\n    German: \"德语\",\r\n    Korean: \"韩语\",\r\n    Japanese: \"日语\",\r\n    Arabic: \"阿拉伯语\",\r\n  },\r\n  ar: {\r\n    recommended: \"موصى به\",\r\n    translateVideo: \"ترجمة الفيديو\",\r\n    disableTranslate: \"إيقاف التشغيل\",\r\n    translationSettings: \"إعدادات الترجمة\",\r\n    resetSettings: \"إعادة تعيين الإعدادات\",\r\n    videoBeingTranslated: \"يتم ترجمة الفيديو\",\r\n    videoLanguage: \"لغة الفيديو\",\r\n    translationLanguage: \"لغة الترجمة\",\r\n    translationTake: \"ستستغرق الترجمة\",\r\n    translationTakeMoreThanHour: \"ستستغرق الترجمة أكثر من ساعة\",\r\n    translationTakeAboutMinute: \"ستستغرق الترجمة حوالي دقيقة\",\r\n    translationTakeFewMinutes: \"ستستغرق الترجمة بضع دقائق\",\r\n    translationTakeApproximatelyMinutes:\r\n      \"ستستغرق الترجمة تقريبا {0} دقائق\",\r\n    translationTakeApproximatelyMinute:\r\n      \"ستستغرق الترجمة تقريبا {0} دقيقة\",\r\n    unSupportedExtensionError:\r\n      `خطأ! ${GM_info.scriptHandler} غير مدعوم من قبل هذه النسخة من الامتداد!\\n\\nيرجى استخدام نسخة cloudflare من امتداد VOT.`,\r\n    requestTranslationFailed: \"فشل طلب ترجمة الفيديو\",\r\n    audioNotReceived: \"لم يتم استلام رابط الصوت\",\r\n    grantPermissionToAutoPlay: \"السماح بالتشغيل التلقائي\",\r\n    neededAdditionalExtension:\r\n      \"هناك حاجة إلى امتداد إضافي لدعم هذا الموقع\",\r\n    audioFormatNotSupported: \"تنسيق الصوت غير مدعوم\",\r\n    VOTAutoTranslate: \"الترجمة عند الفتح\",\r\n    VOTDontTranslateYourLang: \"لا تترجم من لغتي\",\r\n    VOTVolume: \"حجم الفيديو\",\r\n    VOTVolumeTranslation: \"حجم الترجمة\",\r\n    VOTAutoSetVolume: \"خفض حجم الفيديو إلى \",\r\n    VOTShowVideoSlider: \"شريط تحكم حجم الفيديو\",\r\n    VOTSyncVolume: \"اربط حجم الترجمة والفيديو\",\r\n    VOTAudioProxy: \"الصوت المستلم عبر وكيل\",\r\n    VOTDisableFromYourLang: \"لقد قمت بتعطيل ترجمة الفيديو بلغتك\",\r\n    VOTLiveNotSupported: \"لا يتم دعم ترجمة البث المباشر\",\r\n    VOTPremiere: \"انتظر حتى ينتهي العرض الأول قبل الترجمة\",\r\n    VOTVideoIsTooLong: \"الفيديو طويل جداً\",\r\n    VOTNoVideoIDFound: \"لم يتم العثور على معرف الفيديو\",\r\n    VOTFailedInitDB: \"فشل في تهيئة قاعدة البيانات\",\r\n    VOTDBNeedUpdate:\r\n      \"تحتاج قاعدة البيانات إلى تحديث، يرجى إعادة تحميل الصفحة\",\r\n    VOTDisabledForDBUpdating:\r\n      `VOT معطل بسبب خطأ عند تحديث قاعدة البيانات. أغلق جميع علامات التبويب المفتوحة مع ${window.location.hostname} وحاول مرة أخرى`,\r\n    VOTFailedWriteToDB: \"لم يتمكن من كتابة البيانات إلى قاعدة البيانات\",\r\n    VOTFailedReadFromDB: \"لم يتمكن من استرداد البيانات من قاعدة البيانات\",\r\n    Russian: \"الروسية\",\r\n    English: \"الإنجليزية\",\r\n    Chinese: \"الصينية\",\r\n    French: \"الفرنسية\",\r\n    Italian: \"الإيطالية\",\r\n    Spanish: \"الإسبانية\",\r\n    German: \"الألمانية\",\r\n    Korean: \"الكورية\",\r\n    Japanese: \"اليابانية\",\r\n    Arabic: \"العربية\",\r\n  },\r\n  ko: {\r\n    recommended: \"추천\",\r\n    translateVideo: \"비디오 번역\",\r\n    disableTranslate: \"끄기\",\r\n    translationSettings: \"번역 설정\",\r\n    resetSettings: \"설정 초기화\",\r\n    videoBeingTranslated: \"비디오가 번역되고 있습니다\",\r\n    videoLanguage: \"비디오 언어\",\r\n    translationLanguage: \"번역 언어\",\r\n    translationTake: \"번역에 걸리는 시간\",\r\n    translationTakeMoreThanHour: \"번역에 1시간 이상 걸립니다\",\r\n    translationTakeAboutMinute: \"번역에 약 1분 걸립니다\",\r\n    translationTakeFewMinutes: \"번역에 몇 분 걸립니다\",\r\n    translationTakeApproximatelyMinutes:\r\n      \"번역에 약 {0}분 걸립니다\",\r\n    translationTakeApproximatelyMinute:\r\n      \"번역에 약 {0}분 걸립니다\",\r\n    unSupportedExtensionError:\r\n      `오류! ${GM_info.scriptHandler}는 이 버전의 확장 프로그램에서 지원되지 않습니다!\\n\\nVOT 확장 프로그램의 클라우드플레어 버전을 사용하십시오.`,\r\n    requestTranslationFailed: \"비디오 번역 요청 실패\",\r\n    audioNotReceived: \"오디오 링크를 받지 못했습니다\",\r\n    grantPermissionToAutoPlay: \"자동 재생 권한 부여\",\r\n    neededAdditionalExtension:\r\n      \"이 사이트를 지원하기 위해 추가 확장 프로그램이 필요합니다\",\r\n    audioFormatNotSupported: \"오디오 형식이 지원되지 않습니다\",\r\n    VOTAutoTranslate: \"열 때 번역하기\",\r\n    VOTDontTranslateYourLang: \"내 언어에서 번역하지 않기\",\r\n    VOTVolume: \"비디오 볼륨\",\r\n    VOTVolumeTranslation: \"번역 볼륨\",\r\n    VOTAutoSetVolume: \"비디오 볼륨을 줄입니다 \",\r\n    VOTShowVideoSlider: \"비디오 볼륨 슬라이더\",\r\n    VOTSyncVolume: \"번역과 비디오 볼륨 연동하기\",\r\n    VOTAudioProxy: \"프록시로 오디오 받기\",\r\n    VOTDisableFromYourLang: \"내 언어로 된 비디오의 번역을 비활성화했습니다\",\r\n    VOTLiveNotSupported: \"라이브 스트림의 번역은 지원되지 않습니다\",\r\n    VOTPremiere: \"번역하기 전에 프리미어가 끝날 때까지 기다리십시오\",\r\n    VOTVideoIsTooLong: \"비디오가 너무 깁니다\",\r\n    VOTNoVideoIDFound: \"비디오 ID를 찾을 수 없습니다\",\r\n    VOTFailedInitDB: \"데이터베이스 초기화 실패\",\r\n    VOTDBNeedUpdate:\r\n      \"데이터베이스가 업데이트가 필요합니다. 페이지를 새로고침하십시오\",\r\n    VOTDisabledForDBUpdating:\r\n      `데이터베이스 업데이트 오류로 인해 VOT가 비활성화되었습니다. ${window.location.hostname}와 열려 있는 모든 탭을 닫고 다시 시도하십시오`,\r\n    VOTFailedWriteToDB: \"데이터베이스에 데이터를 쓸 수 없습니다\",\r\n    VOTFailedReadFromDB: \"데이터베이스에서 데이터를 읽을 수 없습니다\",\r\n    Russian: \"러시아어\",\r\n    English: \"영어\",\r\n    Chinese: \"중국어\",\r\n    French: \"프랑스어\",\r\n    Italian: \"이탈리아어\",\r\n    Spanish: \"스페인어\",\r\n    German: \"독일어\",\r\n    Korean: \"한국어\",\r\n    Japanese: \"일본어\",\r\n    Arabic: \"아랍어\",\r\n  },\r\n  de: {\r\n    recommended: \"es wird empfohlen\",\r\n    translateVideo: \"Video übersetzen\",\r\n    disableTranslate: \"Ausschalten\",\r\n    translationSettings: \"Übersetzungseinstellungen\",\r\n    resetSettings: \"Einstellungen zurücksetzen\",\r\n    videoBeingTranslated: \"Das Video wird übersetzt\",\r\n    videoLanguage: \"Sprache Video\",\r\n    translationLanguage: \"Zielsprache\",\r\n    translationTake: \"Die Übersetzung dauert\",\r\n    translationTakeMoreThanHour: \"Die Übersetzung dauert mehr als eine Stunde\",\r\n    translationTakeAboutMinute: \"Die Übersetzung dauert ungefähr eine Minute\",\r\n    translationTakeFewMinutes: \"Die Übersetzung dauert einige Minuten\",\r\n    translationTakeApproximatelyMinutes:\r\n      \"Die Übersetzung dauert ungefähr {0} Minuten\",\r\n    translationTakeApproximatelyMinute:\r\n      \"Die Übersetzung dauert ungefähr {0} Minuten\",\r\n    unSupportedExtensionError:\r\n      `Fehler! ${GM_info.scriptHandler} wird von dieser Version der Erweiterung nicht unterstützt!\\n\\nBitte verwenden Sie die Cloudflare-Version der VOT-Erweiterung.`,\r\n    requestTranslationFailed:\r\n      \"Videoübersetzung konnte nicht angefordert werden\",\r\n    audioNotReceived: \"Audiolink nicht empfangen\",\r\n    grantPermissionToAutoPlay:\r\n      \"Erteilen Sie die Berechtigung zur automatischen Wiedergabe\",\r\n    neededAdditionalExtension:\r\n      \"Eine zusätzliche Erweiterung ist erforderlich, um diese Website zu unterstützen\",\r\n    audioFormatNotSupported: \"Das Audioformat wird nicht unterstützt\",\r\n    VOTAutoTranslate: \"Beim Öffnen übersetzen\",\r\n    VOTDontTranslateYourLang: \"Nicht aus Ihrer Sprache übersetzen\",\r\n    VOTVolume: \"Video Lautstärke\",\r\n    VOTVolumeTranslation: \"Übersetzungsvolumen\",\r\n    VOTAutoSetVolume: \"Video-Lautstärke auf reduzieren \",\r\n    VOTShowVideoSlider: \"Video-Lautstärkeregler\",\r\n    VOTSyncVolume: \"Übersetzungs- und Videolautstärke verknüpfen\",\r\n    VOTAudioProxy: \"Empfangenes Audio proxyen\",\r\n    VOTDisableFromYourLang:\r\n      \"Sie haben die Übersetzung des Videos in Ihrer Sprache deaktiviert\",\r\n    VOTLiveNotSupported: \"Übersetzung von Live-Streams wird nicht unterstützt\",\r\n    VOTPremiere:\r\n      \"Warten Sie, bis die Premiere beendet ist, bevor Sie übersetzen\",\r\n    VOTVideoIsTooLong: \"Video ist zu lang\",\r\n    VOTNoVideoIDFound: \"Keine Video-ID gefunden\",\r\n    VOTFailedInitDB: \"Datenbank konnte nicht initialisiert werden\",\r\n    VOTDBNeedUpdate:\r\n      \"Die Datenbank muss aktualisiert werden, bitte laden Sie die Seite neu\",\r\n    VOTDisabledForDBUpdating:\r\n      `VOT wurde aufgrund eines Fehlers beim Aktualisieren der Datenbank deaktiviert. Schließen Sie alle geöffneten Tabs mit ${window.location.hostname} und versuchen Sie es erneut`,\r\n    VOTFailedWriteToDB:\r\n      \"Daten konnten nicht in die Datenbank geschrieben werden\",\r\n    VOTFailedReadFromDB: \"Konnte keine Daten aus der Datenbank abrufen\",\r\n    Russian: \"Russisch\",\r\n    English: \"Englisch\",\r\n    Chinese: \"Chinesisch\",\r\n    French: \"Französisch\",\r\n    Italian: \"Italienisch\",\r\n    Spanish: \"Spanisch\",\r\n    German: \"Deutsch\",\r\n    Korean: \"Koreanisch\",\r\n    Japanese: \"Japanisch\",\r\n    Arabic: \"Arabisch\",\r\n  },\r\n  es: {\r\n    recommended: \"es recomendable\",\r\n    translateVideo: \"Traducir video\",\r\n    disableTranslate: \"Apagar\",\r\n    translationSettings: \"Ajustes de traducción\",\r\n    resetSettings: \"Restablecer ajustes\",\r\n    videoBeingTranslated: \"El video está siendo traducido\",\r\n    videoLanguage: \"Idioma del video\",\r\n    translationLanguage: \"Idioma de la traducción\",\r\n    translationTake: \"La traducción tardará\",\r\n    translationTakeMoreThanHour: \"La traducción tardará más de una hora\",\r\n    translationTakeAboutMinute:\r\n      \"La traducción tardará aproximadamente un minuto\",\r\n    translationTakeFewMinutes: \"La traducción tardará unos minutos\",\r\n    translationTakeApproximatelyMinutes:\r\n      \"La traducción tardará aproximadamente {0} minutos\",\r\n    translationTakeApproximatelyMinute:\r\n      \"La traducción tardará aproximadamente {0} minutos\",\r\n    unSupportedExtensionError:\r\n      `Error! ${GM_info.scriptHandler} no es compatible con esta versión de la extensión!\\n\\nUtilice la versión cloudflare de la extensión VOT.`,\r\n    requestTranslationFailed: \"Error al solicitar la traducción de vídeo\",\r\n    audioNotReceived: \"Audiolink nicht empfangen\",\r\n    grantPermissionToAutoPlay: \"Conceder permiso de reproducción automática\",\r\n    neededAdditionalExtension:\r\n      \"Se necesita una extensión adicional para admitir este sitio\",\r\n    audioFormatNotSupported: \"El formato de audio no es compatible\",\r\n    VOTAutoTranslate: \"Traducir al abrir\",\r\n    VOTDontTranslateYourLang: \"No traduzca de su lengua\",\r\n    VOTVolume: \"Volumen de vídeo\",\r\n    VOTVolumeTranslation: \"Volumen de traducción\",\r\n    VOTAutoSetVolume: \"Reducir el volumen del video al \",\r\n    VOTShowVideoSlider: \"Deslizador de volumen de video\",\r\n    VOTSyncVolume: \"Vincular el volumen de traducción y video\",\r\n    VOTAudioProxy: \"Proxificar el audio recibido\",\r\n    VOTDisableFromYourLang:\r\n      \"Ha desactivado la traducción del vídeo en su idioma\",\r\n    VOTLiveNotSupported: \"No se admite la traducción de transmisiones en vivo\",\r\n    VOTPremiere: \"Espere a que termine el estreno antes de traducir\",\r\n    VOTVideoIsTooLong: \"El video es demasiado largo\",\r\n    VOTNoVideoIDFound: \"No se encontró id de video\",\r\n    VOTFailedInitDB: \"No se pudo inicializar la base de datos\",\r\n    VOTDBNeedUpdate:\r\n      \"la Base de datos necesita una actualización, por favor vuelva a cargar la página\",\r\n    VOTDisabledForDBUpdating:\r\n      `VOT está deshabilitado debido a un error al actualizar la Base de Datos. Cierre todas las pestañas abiertas con ${window.location.hostname} y vuelve a intentarlo`,\r\n    VOTFailedWriteToDB: \"No se pudo escribir datos en la base de datos\",\r\n    VOTFailedReadFromDB: \"No se pudo recuperar datos de la base de datos\",\r\n    Russian: \"Ruso\",\r\n    English: \"Inglés\",\r\n    Chinese: \"Chino\",\r\n    French: \"Francés\",\r\n    Italian: \"Italiano\",\r\n    Spanish: \"Español\",\r\n    German: \"Alemán\",\r\n    Korean: \"Coreano\",\r\n    Japanese: \"Japonés\",\r\n    Arabic: \"Árabe\",\r\n  },\r\n  fr: {\r\n    recommended: \"recommande\",\r\n    translateVideo: \"Traduire la vidéo\",\r\n    disableTranslate: \"Désactiver\",\r\n    translationSettings: \"Paramètres de traduction\",\r\n    resetSettings: \"Réinitialiser les paramètres\",\r\n    videoBeingTranslated: \"La vidéo est en cours de traduction\",\r\n    videoLanguage: \"Langue vidéo\",\r\n    translationLanguage: \"Langue cible\",\r\n    translationTake: \"La traduction prendra\",\r\n    translationTakeMoreThanHour: \"La traduction prendra plus d'une heure\",\r\n    translationTakeAboutMinute: \"La traduction prendra environ une minute\",\r\n    translationTakeFewMinutes: \"La traduction prendra quelques minutes\",\r\n    translationTakeApproximatelyMinutes:\r\n      \"La traduction prendra environ {0} minutes\",\r\n    translationTakeApproximatelyMinute:\r\n      \"La traduction prendra environ {0} minutes\",\r\n    unSupportedExtensionError:\r\n      `Erreur! ${GM_info.scriptHandler} n'est pas supporté par cette version de l'extension!!\\n\\nVeuillez utiliser la version cloudflare de l'extension VOT.`,\r\n    requestTranslationFailed:\r\n      \"Impossible de demander la traduction de la vidéo\",\r\n    audioNotReceived: \"Lien audio non reçu\",\r\n    grantPermissionToAutoPlay: \"Accorder l'autorisation de lecture automatique\",\r\n    neededAdditionalExtension:\r\n      \"Une extension supplémentaire est nécessaire pour prendre en charge ce site\",\r\n    audioFormatNotSupported: \"Format audio non pris en charge\",\r\n    VOTAutoTranslate: \"Traduire à l'ouverture\",\r\n    VOTDontTranslateYourLang: \"Ne pas traduire à partir de votre langue\",\r\n    VOTVolume: \"Volume de la vidéo\",\r\n    VOTVolumeTranslation: \"Volume de traduction\",\r\n    VOTAutoSetVolume: \"Réduire le volume de la vidéo à \",\r\n    VOTShowVideoSlider: \"Curseur de volume vidéo\",\r\n    VOTSyncVolume: \"Lier le volume de la traduction et de la vidéo\",\r\n    VOTAudioProxy: \"Proxy audio reçu\",\r\n    VOTDisableFromYourLang:\r\n      \"Vous avez désactivé la traduction de la vidéo dans votre langue\",\r\n    VOTLiveNotSupported:\r\n      \"La traduction des flux en direct n'est pas prise en charge\",\r\n    VOTPremiere: \"Attendez la fin de la première avant de traduire\",\r\n    VOTVideoIsTooLong: \"La vidéo est trop longue\",\r\n    VOTNoVideoIDFound: \"ID vidéo introuvable\",\r\n    VOTFailedInitDB: \"Impossible d'initialiser la base de données\",\r\n    VOTDBNeedUpdate:\r\n      \"la Base de données a besoin d'une mise à jour, veuillez recharger la page\",\r\n    VOTDisabledForDBUpdating:\r\n      `VOT est désactivé en raison d'une erreur lors de la mise à jour de la Base de Données. Fermez tous les onglets ouverts avec ${window.location.hostname} et essayez à nouveau`,\r\n    VOTFailedWriteToDB:\r\n      \"Impossible d'écrire les données dans la base de données\",\r\n    VOTFailedReadFromDB:\r\n      \"Impossible de récupérer les données de la base de données\",\r\n    Russian: \"Russe\",\r\n    English: \"Anglais\",\r\n    Chinese: \"Chinois\",\r\n    French: \"Français\",\r\n    Italian: \"Italien\",\r\n    Spanish: \"Espagnol\",\r\n    German: \"Allemand\",\r\n    Korean: \"Coréen\",\r\n    Japanese: \"Japonais\",\r\n    Arabic: \"Arabe\",\r\n  },\r\n  it: {\r\n    recommended: \"è consigliabile\",\r\n    translateVideo: \"Traduci il video\",\r\n    disableTranslate: \"Spegnere\",\r\n    translationSettings: \"Impostazioni di traduzione\",\r\n    resetSettings: \"Ripristina impostazioni\",\r\n    videoBeingTranslated: \"Il video è in fase di traduzione\",\r\n    videoLanguage: \"Lingua Video\",\r\n    translationLanguage: \"Lingua di traduzione\",\r\n    translationTake: \"La traduzione richiederà\",\r\n    translationTakeMoreThanHour: \"La traduzione richiederà più di un'ora\",\r\n    translationTakeAboutMinute: \"La traduzione richiederà circa un minuto\",\r\n    translationTakeFewMinutes: \"La traduzione richiederà alcuni minuti\",\r\n    translationTakeApproximatelyMinutes:\r\n      \"La traduzione richiederà circa {0} minuti\",\r\n    translationTakeApproximatelyMinute:\r\n      \"La traduzione richiederà circa {0} minuti\",\r\n    unSupportedExtensionError:\r\n      `Errore! ${GM_info.scriptHandler} non è supportato da questa versione dell'estensione!\\n\\nUtilizzare la versione cloudflare dell'estensione VOT.`,\r\n    requestTranslationFailed: \"Richiesta di traduzione video non riuscita\",\r\n    audioNotReceived: \"Collegamento audio non ricevuto\",\r\n    grantPermissionToAutoPlay:\r\n      \"Concedere l'Autorizzazione per la riproduzione automatica\",\r\n    neededAdditionalExtension:\r\n      \"Per supportare questo sito è necessaria un'estensione aggiuntiva\",\r\n    audioFormatNotSupported: \"Il formato audio non è supportato\",\r\n    VOTAutoTranslate: \"Traduci all'apertura\",\r\n    VOTDontTranslateYourLang: \"Non traducete dalla vostra lingua\",\r\n    VOTVolume: \"Volume video\",\r\n    VOTVolumeTranslation: \"Volume di traduzione\",\r\n    VOTAutoSetVolume: \"Riduci il volume del video al \",\r\n    VOTShowVideoSlider: \"Cursore del volume del video\",\r\n    VOTSyncVolume: \"Collega il volume della traduzione e del video\",\r\n    VOTAudioProxy: \"Proxy audio ricevuto\",\r\n    VOTDisableFromYourLang:\r\n      \"Avete disabilitato la traduzione del video nella vostra lingua\",\r\n    VOTLiveNotSupported: \"La traduzione dei flussi dal vivo non è supportata\",\r\n    VOTPremiere: \"Aspetta che la prima finisca prima di tradurre\",\r\n    VOTVideoIsTooLong: \"Il video è troppo lungo\",\r\n    VOTNoVideoIDFound: \"ID video non trovato\",\r\n    VOTFailedInitDB: \"Impossibile inizializzare il database\",\r\n    VOTDBNeedUpdate:\r\n      \"Il database ha bisogno di aggiornamento, si prega di ricaricare la pagina\",\r\n    VOTDisabledForDBUpdating:\r\n      `VOT è disabilitato a causa di un errore durante l'aggiornamento del database. CHIUDI tutte le schede aperte con ${window.location.hostname} e riprova`,\r\n    VOTFailedWriteToDB: \"Impossibile scrivere dati nel database\",\r\n    VOTFailedReadFromDB: \"Impossibile recuperare i dati dal database\",\r\n    Russian: \"Russo\",\r\n    English: \"Inglese\",\r\n    Chinese: \"Cinese\",\r\n    French: \"Francese\",\r\n    Italian: \"Italiano\",\r\n    Spanish: \"Spagnolo\",\r\n    German: \"Tedesco\",\r\n    Korean: \"Coreano\",\r\n    Japanese: \"Giapponese\",\r\n    Arabic: \"Arabo\",\r\n  },\r\n  ja: {\r\n    recommended: \"おすすめ\",\r\n    translateVideo: \"動画を翻訳する\",\r\n    disableTranslate: \"オフにする\",\r\n    translationSettings: \"翻訳設定\",\r\n    resetSettings: \"設定をリセットする\",\r\n    videoBeingTranslated: \"動画が翻訳されています\",\r\n    videoLanguage: \"動画の言語\",\r\n    translationLanguage: \"翻訳言語\",\r\n    translationTake: \"翻訳にかかる時間は\",\r\n    translationTakeMoreThanHour: \"翻訳には1時間以上かかります\",\r\n    translationTakeAboutMinute: \"翻訳には約1分かかります\",\r\n    translationTakeFewMinutes: \"翻訳には数分かかります\",\r\n    translationTakeApproximatelyMinutes:\r\n      \"翻訳には約{0}分かかります\",\r\n    translationTakeApproximatelyMinute:\r\n      \"翻訳には約{0}分かかります\",\r\n    unSupportedExtensionError:\r\n      `エラー！ ${GM_info.scriptHandler} はこのバージョンの拡張機能ではサポートされていません！\\n\\nVOT拡張機能のcloudflareバージョンを使用してください。`,\r\n    requestTranslationFailed: \"動画の翻訳リクエストに失敗しました\",\r\n    audioNotReceived: \"音声リンクが受信されませんでした\",\r\n    grantPermissionToAutoPlay: \"自動再生の権限を付与する\",\r\n    neededAdditionalExtension:\r\n      \"このサイトをサポートするために追加の拡張機能が必要です\",\r\n    audioFormatNotSupported: \"音声形式がサポートされていません\",\r\n    VOTAutoTranslate: \"開いたときに翻訳する\",\r\n    VOTDontTranslateYourLang: \"自分の言語からは翻訳しない\",\r\n    VOTVolume: \"動画の音量\",\r\n    VOTVolumeTranslation: \"翻訳の音量\",\r\n    VOTAutoSetVolume: \"動画の音量を \",\r\n    VOTShowVideoSlider: \"動画の音量スライダー\",\r\n    VOTSyncVolume: \"バインド翻訳とビデオボリューム\",\r\n    VOTAudioProxy: \"プロキシで受信した音声\",\r\n    VOTDisableFromYourLang: \"あなたの言語での動画の翻訳を無効にしました\",\r\n    VOTLiveNotSupported: \"ライブストリームの翻訳はサポートされていません\",\r\n    VOTPremiere: \"プレミアが終わるまで待ってから翻訳してください\",\r\n    VOTVideoIsTooLong: \"動画が長すぎます\",\r\n    VOTNoVideoIDFound: \"動画IDが見つかりませんでした\",\r\n    VOTFailedInitDB: \"データベースの初期化に失敗しました\",\r\n    VOTDBNeedUpdate:\r\n      \"データベースを更新する必要があります。ページを再読み込みしてください。\",\r\n    VOTDisabledForDBUpdating:\r\n      `データベース更新時のエラーのため、VOTは無効になっています。${window.location.hostname} を開いているすべてのタブを閉じて、もう一度お試しください。`,\r\n    VOTFailedWriteToDB: \"データベースにデータを書き込めませんでした。\",\r\n    VOTFailedReadFromDB: \"データベースからデータを取得できませんでした。\",\r\n    Russian: \"ロシア語\",\r\n    English: \"英語\",\r\n    Chinese: \"中国語\",\r\n    French: \"フランス語\",\r\n    Italian: \"イタリア語\",\r\n    Spanish: \"スペイン語\",\r\n    German: \"ドイツ語\",\r\n    Korean: \"韓国語\",\r\n    Japanese: \"日本語\",\r\n    Arabic: \"アラビア語\",\r\n  },\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://voice-over-translation/./src/config/constants.js?");

/***/ }),

/***/ "./src/config/regexes.js":
/*!*******************************!*\
  !*** ./src/config/regexes.js ***!
  \*******************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nconst regexes = () => {\r\n  return {\r\n    youtubeRegex: /^(www.|m.)?youtube(-nocookie)?.com$/,\r\n  };\r\n};\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (regexes());\r\n\n\n//# sourceURL=webpack://voice-over-translation/./src/config/regexes.js?");

/***/ }),

/***/ "./src/config/selectors.js":
/*!*********************************!*\
  !*** ./src/config/selectors.js ***!
  \*********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nconst selectors = () => {\r\n  return {\r\n    youtubeSelector: \".html5-video-container\",\r\n    twitchSelector: \".video-ref\",\r\n    twitchMobileSelector: \"main > div > section > div > div > div\",\r\n    pipedSelector: \".shaka-video-container\",\r\n    vkSelector: \".videoplayer_media\",\r\n    twitterSelector:\r\n      'div[data-testid=\"videoComponent\"] > div:nth-child(1) > div',\r\n    vimeoSelector: \".player\",\r\n    gagSelector: \".video-post\",\r\n    bilibilicomSelector: \".bpx-player-video-wrap\",\r\n    mailSelector: \"#b-video-wrapper\",\r\n  };\r\n};\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (selectors());\r\n\n\n//# sourceURL=webpack://voice-over-translation/./src/config/selectors.js?");

/***/ }),

/***/ "./src/getSignature.js":
/*!*****************************!*\
  !*** ./src/getSignature.js ***!
  \*****************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getSignature\": () => (/* binding */ getSignature)\n/* harmony export */ });\n/* harmony import */ var _config_config_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./config/config.js */ \"./src/config/config.js\");\n/* harmony import */ var _config_config_cloudflare_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./config/config-cloudflare.js */ \"./src/config/config-cloudflare.js\");\n\r\n\r\n\r\nasync function getSignature(body) {\r\n  // Create a key from the HMAC secret\r\n  const utf8Encoder = new TextEncoder(\"utf-8\");\r\n  const key = await window.crypto.subtle.importKey(\r\n    \"raw\",\r\n    utf8Encoder.encode( false ? 0 : _config_config_js__WEBPACK_IMPORTED_MODULE_0__.yandexHmacKey),\r\n    { name: \"HMAC\", hash: { name: \"SHA-256\" } },\r\n    false,\r\n    [\"sign\", \"verify\"]\r\n  );\r\n  // Sign the body with the key\r\n  const signature = await window.crypto.subtle.sign(\"HMAC\", key, body);\r\n  // Convert the signature to a hex string\r\n  return Array.from(new Uint8Array(signature), (x) =>\r\n    x.toString(16).padStart(2, \"0\")\r\n  ).join(\"\");\r\n}\r\n\r\n\r\n\n\n//# sourceURL=webpack://voice-over-translation/./src/getSignature.js?");

/***/ }),

/***/ "./src/getUUID.js":
/*!************************!*\
  !*** ./src/getUUID.js ***!
  \************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getUUID\": () => (/* binding */ getUUID)\n/* harmony export */ });\nfunction getUUID(isLower) {\r\n  const uuid = ([1e7] + 1e3 + 4e3 + 8e3 + 1e11).replace(/[018]/g, (c) =>\r\n    (\r\n      c ^\r\n      (crypto.getRandomValues(new Uint8Array(1))[0] & (15 >> (c / 4)))\r\n    ).toString(16)\r\n  );\r\n  return isLower ? uuid : uuid.toUpperCase();\r\n}\r\n\r\n\r\n\n\n//# sourceURL=webpack://voice-over-translation/./src/getUUID.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _styles_main_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./styles/main.css */ \"./src/styles/main.css\");\n/* harmony import */ var _utils_youtubeUtils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/youtubeUtils.js */ \"./src/utils/youtubeUtils.js\");\n/* harmony import */ var _yandexProtobuf_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./yandexProtobuf.js */ \"./src/yandexProtobuf.js\");\n/* harmony import */ var _utils_utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/utils.js */ \"./src/utils/utils.js\");\n/* harmony import */ var _config_config_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./config/config.js */ \"./src/config/config.js\");\n/* harmony import */ var _config_alternativeUrls_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./config/alternativeUrls.js */ \"./src/config/alternativeUrls.js\");\n/* harmony import */ var _config_constants_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./config/constants.js */ \"./src/config/constants.js\");\n/* harmony import */ var _indexedDB_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./indexedDB.js */ \"./src/indexedDB.js\");\n/* harmony import */ var _menu_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./menu.js */ \"./src/menu.js\");\n/* harmony import */ var _utils_volume_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./utils/volume.js */ \"./src/utils/volume.js\");\n/* harmony import */ var _config_config_cloudflare_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./config/config-cloudflare.js */ \"./src/config/config-cloudflare.js\");\n/* harmony import */ var _config_regexes_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./config/regexes.js */ \"./src/config/regexes.js\");\n/* harmony import */ var _config_selectors_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./config/selectors.js */ \"./src/config/selectors.js\");\n/* harmony import */ var _utils_debug_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./utils/debug.js */ \"./src/utils/debug.js\");\n/* harmony import */ var _rvt_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./rvt.js */ \"./src/rvt.js\");\n/* harmony import */ var _subtitles_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./subtitles.js */ \"./src/subtitles.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst sitesChromiumBlocked = [..._config_alternativeUrls_js__WEBPACK_IMPORTED_MODULE_5__.sitesInvidious, ..._config_alternativeUrls_js__WEBPACK_IMPORTED_MODULE_5__.sitesPiped];\r\n\r\n// translate properties\r\nlet translateFromLang = \"en\"; // default language of video\r\n\r\nlet translateToLang = _menu_js__WEBPACK_IMPORTED_MODULE_8__.lang; // default language of audio response\r\n\r\nlet ytData = \"\";\r\nlet subtitlesList = [];\r\nlet subtitlesListVideoId = null;\r\n\r\nasync function main() {\r\n  _utils_debug_js__WEBPACK_IMPORTED_MODULE_13__[\"default\"].log(\"Loading extension...\");\r\n  _utils_debug_js__WEBPACK_IMPORTED_MODULE_13__[\"default\"].log(`Selected menu language: ${_menu_js__WEBPACK_IMPORTED_MODULE_8__.lang}`);\r\n  // test all translations in console\r\n  // debug.translations('ru');\r\n  // debug.translations('en');\r\n  // debug.translations('de');\r\n  // debug.translations('zh');\r\n  // debug.translations('es');\r\n  // debug.translations('fr');\r\n  // debug.translations('it');\r\n\r\n  if (\r\n     true &&\r\n    GM_info?.scriptHandler &&\r\n    [\"Violentmonkey\", \"FireMonkey\", \"Greasemonkey\", \"AdGuard\"].includes(\r\n      GM_info.scriptHandler\r\n    )\r\n  ) {\r\n    const errorText = `[VOT] ${_config_constants_js__WEBPACK_IMPORTED_MODULE_6__.translations[_menu_js__WEBPACK_IMPORTED_MODULE_8__.lang].unSupportedExtensionError}`;\r\n    console.error(errorText);\r\n    return alert(errorText);\r\n  }\r\n\r\n  _utils_debug_js__WEBPACK_IMPORTED_MODULE_13__[\"default\"].log(\"Extension compatibility passed...\");\r\n\r\n  let timer;\r\n  const audio = new Audio();\r\n  let opacityRatio = 0.9;\r\n  let openedMenu = false;\r\n\r\n  if (false) { var translationPanding; }\r\n\r\n  function logout(n) {\r\n    if (openedMenu) return;\r\n\r\n    document.querySelector(\".translationBlock\").style.opacity = n;\r\n  }\r\n\r\n  function resetTimer() {\r\n    clearTimeout(timer);\r\n    logout(1);\r\n    timer = setTimeout(() => {\r\n      logout(0);\r\n    }, 2000);\r\n  }\r\n\r\n  function changeOpacityOnEvent(event, timer, opacityRatio) {\r\n    clearTimeout(timer);\r\n    logout(opacityRatio);\r\n    event.stopPropagation();\r\n  }\r\n\r\n  const deleteAudioSrc = async () => {\r\n    audio.src = \"\";\r\n    audio.removeAttribute(\"src\");\r\n  };\r\n\r\n  // Add menu container\r\n  function addTranslationMenu(element) {\r\n    if (element.querySelector(\".translationMenuContent\")) return;\r\n\r\n    const container = (0,_menu_js__WEBPACK_IMPORTED_MODULE_8__.createTranslationMenu)();\r\n    element.appendChild(container);\r\n\r\n    // click to translation menu icon\r\n    document\r\n      .querySelector(\".translationMenu\")\r\n      ?.addEventListener(\"click\", (event) => {\r\n        event.stopPropagation();\r\n        const content = document.querySelector(\".translationMenuContent\");\r\n        content.style.display = openedMenu ? \"none\" : \"block\";\r\n        content.style.opacity = opacityRatio;\r\n        openedMenu = !openedMenu;\r\n      });\r\n\r\n    document\r\n      .querySelector(\".translationDropDB\")\r\n      .addEventListener(\"click\", (event) => {\r\n        event.stopPropagation();\r\n        (0,_indexedDB_js__WEBPACK_IMPORTED_MODULE_7__.deleteDB)();\r\n        location.reload();\r\n      });\r\n\r\n    _utils_debug_js__WEBPACK_IMPORTED_MODULE_13__[\"default\"].log(\"Added translation menu to \", element);\r\n  }\r\n\r\n  function translateVideo(url, duration, requestLang, responseLang, callback) {\r\n    _utils_debug_js__WEBPACK_IMPORTED_MODULE_13__[\"default\"].log(\r\n      `Translate video (url: ${url}, duration: ${duration}, requestLang: ${requestLang}, responseLang: ${responseLang})`\r\n    );\r\n\r\n    if (false) {}\r\n\r\n    translationPanding = true;\r\n\r\n    (0,_rvt_js__WEBPACK_IMPORTED_MODULE_14__[\"default\"])(\r\n      url,\r\n      duration,\r\n      requestLang,\r\n      responseLang,\r\n      (success, response) => {\r\n        translationPanding = false;\r\n\r\n        _utils_debug_js__WEBPACK_IMPORTED_MODULE_13__[\"default\"].log(\"[exec callback] Requesting video translation\");\r\n        if (!success) {\r\n          callback(false, _config_constants_js__WEBPACK_IMPORTED_MODULE_6__.translations[_menu_js__WEBPACK_IMPORTED_MODULE_8__.lang].requestTranslationFailed);\r\n          return;\r\n        }\r\n\r\n        const translateResponse = _yandexProtobuf_js__WEBPACK_IMPORTED_MODULE_2__.yandexProtobuf.decodeTranslationResponse(response);\r\n        console.log(\"[VOT] Translation response: \", translateResponse);\r\n\r\n        switch (translateResponse.status) {\r\n          case 0:\r\n            callback(false, translateResponse.message);\r\n            break;\r\n          case 1:\r\n            callback(\r\n              !!translateResponse.url,\r\n              translateResponse.url || _config_constants_js__WEBPACK_IMPORTED_MODULE_6__.translations[_menu_js__WEBPACK_IMPORTED_MODULE_8__.lang].audioNotReceived\r\n            );\r\n            break;\r\n          case 2:\r\n            callback(\r\n              false,\r\n              translateResponse.remainingTime\r\n                ? (0,_utils_utils_js__WEBPACK_IMPORTED_MODULE_3__.secsToStrTime)(translateResponse.remainingTime)\r\n                : _config_constants_js__WEBPACK_IMPORTED_MODULE_6__.translations[_menu_js__WEBPACK_IMPORTED_MODULE_8__.lang].translationTakeFewMinutes\r\n            );\r\n            break;\r\n          case 3:\r\n            /*\r\n              Иногда, в ответе приходит статус код 3, но видео всё, так же, ожидает перевода.\r\n              В конечном итоге, это занимает слишком много времени,\r\n              как-будто сервер не понимает, что данное видео уже недавно было переведено\r\n              и заместо возвращения готовой ссылки на перевод начинает переводить видео заново\r\n              при чём у него это получается за очень длительное время.\r\n            */\r\n            callback(false, _config_constants_js__WEBPACK_IMPORTED_MODULE_6__.translations[_menu_js__WEBPACK_IMPORTED_MODULE_8__.lang].videoBeingTranslated);\r\n            break;\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  async function translateProccessor(videoContainer, siteHostname, siteEvent) {\r\n    _utils_debug_js__WEBPACK_IMPORTED_MODULE_13__[\"default\"].log(\"[translateProccessor] execute on element: \", videoContainer);\r\n\r\n    let video;\r\n    let autoRetry;\r\n    let volumeOnStart;\r\n    let tempOriginalVolume;\r\n    let tempVolume;\r\n    let dbHighlightWords;\r\n    let dbAutoTranslate;\r\n    let dbDefaultVolume;\r\n    let dbShowVideoSlider;\r\n    let dbAutoSetVolumeYandexStyle;\r\n    let dontTranslateYourLang;\r\n    let dbSyncVolume;\r\n    let dbAudioProxy; // cf version only\r\n    let firstPlay = true;\r\n    let isDBInited;\r\n    let videoData = \"\";\r\n\r\n    _utils_debug_js__WEBPACK_IMPORTED_MODULE_13__[\"default\"].log(\"videoContainer\", videoContainer);\r\n\r\n    video =\r\n      siteHostname === \"vimeo\"\r\n        ? videoContainer.querySelector(\r\n            \".vp-video-wrapper > .vp-video > .vp-telecine > video\"\r\n          )\r\n        : videoContainer.querySelector(\"video\");\r\n\r\n    _utils_debug_js__WEBPACK_IMPORTED_MODULE_13__[\"default\"].log(\"video\", video);\r\n\r\n    const container =\r\n      siteHostname === \"pornhub\" &&\r\n      window.location.pathname.includes(\"view_video.php\")\r\n        ? document.querySelector(\".original.mainPlayerDiv\")\r\n        : siteHostname === \"pornhub\" &&\r\n          window.location.pathname.includes(\"embed/\")\r\n        ? document.querySelector(\"body\")\r\n        : window.location.hostname.includes(\"m.youtube.com\")\r\n        ? document.querySelector(\"#player-control-container\")\r\n        : videoContainer;\r\n\r\n    (0,_menu_js__WEBPACK_IMPORTED_MODULE_8__.addTranslationBlock)(container);\r\n    addTranslationMenu(container);\r\n    if (\r\n      window.location.hostname.includes(\"youtube.com\") &&\r\n      !window.location.hostname.includes(\"m.youtube.com\")\r\n    ) {\r\n      (0,_subtitles_js__WEBPACK_IMPORTED_MODULE_15__.addSubtitlesWidget)(container.parentElement);\r\n    } else {\r\n      (0,_subtitles_js__WEBPACK_IMPORTED_MODULE_15__.addSubtitlesWidget)(container);\r\n    }\r\n    await changeSubtitlesLang(\"disabled\");\r\n\r\n\r\n    try {\r\n      isDBInited = await (0,_indexedDB_js__WEBPACK_IMPORTED_MODULE_7__.initDB)();\r\n    } catch (err) {\r\n      console.error(\r\n        \"[VOT] Failed to initialize database settings. All changes made will not be saved\",\r\n        err\r\n      );\r\n    }\r\n\r\n    const menuOptions = document.querySelector(\".translationMenuOptions\");\r\n    if (menuOptions && !menuOptions.querySelector(\"#VOTTranslateFromLang\")) {\r\n      const selectFromLangOptions = [\r\n        {\r\n          label: _config_constants_js__WEBPACK_IMPORTED_MODULE_6__.translations[_menu_js__WEBPACK_IMPORTED_MODULE_8__.lang].videoLanguage,\r\n          value: \"default\",\r\n          disabled: true,\r\n        },\r\n        ...Object.entries(_config_constants_js__WEBPACK_IMPORTED_MODULE_6__.availableLangs).map(([key, value]) => ({\r\n          label: _config_constants_js__WEBPACK_IMPORTED_MODULE_6__.translations[_menu_js__WEBPACK_IMPORTED_MODULE_8__.lang][value],\r\n          value: key,\r\n          selected: videoData.detectedLanguage === key,\r\n        })),\r\n      ];\r\n\r\n      const selectToLangOptions = [\r\n        {\r\n          label: _config_constants_js__WEBPACK_IMPORTED_MODULE_6__.translations[_menu_js__WEBPACK_IMPORTED_MODULE_8__.lang].translationLanguage,\r\n          value: \"default\",\r\n          disabled: true,\r\n        },\r\n        ...Object.entries(_config_constants_js__WEBPACK_IMPORTED_MODULE_6__.availableLangs).map(([key, value]) => ({\r\n          label: _config_constants_js__WEBPACK_IMPORTED_MODULE_6__.translations[_menu_js__WEBPACK_IMPORTED_MODULE_8__.lang][value],\r\n          value: key,\r\n          selected: videoData.responseLanguage === key,\r\n        })),\r\n      ];\r\n\r\n      const selectFromLang = (0,_menu_js__WEBPACK_IMPORTED_MODULE_8__.createMenuSelect)(\r\n        \"VOTTranslateFromLang\",\r\n        selectFromLangOptions\r\n      );\r\n\r\n      const selectToLang = (0,_menu_js__WEBPACK_IMPORTED_MODULE_8__.createMenuSelect)(\r\n        \"VOTTranslateToLang\",\r\n        selectToLangOptions\r\n      ).firstElementChild;\r\n\r\n      selectFromLang.id = \"VOTSelectLanguages\";\r\n      selectFromLang.innerHTML += `\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\r\n          <path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 12h16m0 0l-6 6m6-6l-6-6\"/>\r\n        </svg>\r\n      `;\r\n\r\n      selectFromLang.appendChild(selectToLang);\r\n      menuOptions.appendChild(selectFromLang);\r\n\r\n      menuOptions\r\n        .querySelector(\"#VOTTranslateFromLang\")\r\n        .addEventListener(\"change\", async (event) => {\r\n          _utils_debug_js__WEBPACK_IMPORTED_MODULE_13__[\"default\"].log(\"[onchange] select from language\", event.target.value);\r\n          videoData = await getVideoData()\r\n          await setSelectMenuValues(event.target.value, videoData.responseLanguage);\r\n        });\r\n\r\n      menuOptions\r\n        .querySelector(\"#VOTTranslateToLang\")\r\n        .addEventListener(\"change\", async (event) => {\r\n          _utils_debug_js__WEBPACK_IMPORTED_MODULE_13__[\"default\"].log(\"[onchange] select to language\", event.target.value);\r\n          videoData = await getVideoData()\r\n          await setSelectMenuValues(videoData.detectedLanguage, event.target.value);\r\n        });\r\n    }\r\n\r\n    async function changeSubtitlesLang(subs) {\r\n      _utils_debug_js__WEBPACK_IMPORTED_MODULE_13__[\"default\"].log(\"[onchange] subtitles\", subs);\r\n      const select = document.querySelector(\".translationMenuOptions\")?.querySelector(\"#VOTSubtitlesLang\");\r\n      select && (select.value = subs);\r\n      if (!video) {\r\n        console.error(\"[VOT] video not found\");\r\n        select && (select.value = \"disabled\");\r\n        return;\r\n      }\r\n      if (subs === \"disabled\") {\r\n        (0,_subtitles_js__WEBPACK_IMPORTED_MODULE_15__.setSubtitlesWidgetContent)(video, null);\r\n      } else {\r\n        (0,_subtitles_js__WEBPACK_IMPORTED_MODULE_15__.setSubtitlesWidgetContent)(\r\n          video,\r\n          await (0,_subtitles_js__WEBPACK_IMPORTED_MODULE_15__.fetchSubtitles)(subtitlesList.at(parseInt(subs))));\r\n      }\r\n    }\r\n\r\n    async function updateSubtitlesLangSelect() {\r\n      const select = document.querySelector(\".translationMenuOptions\")?.querySelector(\"#VOTSubtitlesLang\");\r\n\r\n      if (!select) {\r\n        console.error(\"[VOT] #VOTSubtitlesLang not found\");\r\n        return;\r\n      }\r\n\r\n      const oldValue = select.value;\r\n      select.innerHTML = \"\";\r\n\r\n      const disabledOption = document.createElement(\"option\");\r\n      disabledOption.value = \"disabled\";\r\n      disabledOption.innerHTML = \"Disabled\"; // TODO: add localization\r\n      select.append(disabledOption);\r\n\r\n      for (let i = 0; i < subtitlesList.length; i++) {\r\n        const s = subtitlesList[i];\r\n        const option = document.createElement(\"option\");\r\n        option.value = i;\r\n        option.innerHTML = \r\n          (_config_constants_js__WEBPACK_IMPORTED_MODULE_6__.translations[_menu_js__WEBPACK_IMPORTED_MODULE_8__.lang][_config_constants_js__WEBPACK_IMPORTED_MODULE_6__.availableLangs[s.language]] ?? s.language) +\r\n          (s.translatedFromLanguage ? \r\n            ` translated from ${_config_constants_js__WEBPACK_IMPORTED_MODULE_6__.translations[_menu_js__WEBPACK_IMPORTED_MODULE_8__.lang][_config_constants_js__WEBPACK_IMPORTED_MODULE_6__.availableLangs[s.translatedFromLanguage]] ?? s.translatedFromLanguage}` : \"\") +\r\n          (s.source !== \"yandex\" ? ` ${s.source}` : \"\") +\r\n          (s.isAutoGenerated ? \" (autogenerated)\" : \"\"); // TODO: add localization\r\n        select.append(option);\r\n      }\r\n\r\n      await changeSubtitlesLang(oldValue);\r\n    }\r\n\r\n    if (menuOptions && !menuOptions.querySelector(\"#VOTSubtitlesLang\")) {\r\n      const options = [\r\n        {\r\n          label: \"Disabled\", // TODO: add localization\r\n          value: \"disabled\",\r\n          disabled: false,\r\n        },\r\n      ];\r\n\r\n      const select = (0,_menu_js__WEBPACK_IMPORTED_MODULE_8__.createMenuSelect)(\r\n        \"VOTSubtitlesLang\",\r\n        options\r\n      );\r\n\r\n      select.id = \"VOTSubtitlesLangContainer\";\r\n      const span = document.createElement(\"span\");\r\n      span.textContent = \"Subtitles\"; // TODO: add localization\r\n      select.prepend(span);\r\n\r\n      menuOptions.appendChild(select);\r\n\r\n      menuOptions\r\n        .querySelector(\"#VOTSubtitlesLang\")\r\n        .addEventListener(\"change\", async (event) => {\r\n          await changeSubtitlesLang(event.target.value);\r\n        });\r\n    }\r\n\r\n    if (isDBInited) {\r\n      const dbData = await (0,_indexedDB_js__WEBPACK_IMPORTED_MODULE_7__.readDB)();\r\n      if (dbData) {\r\n        dbHighlightWords = false; // TODO\r\n        dbAutoTranslate = dbData.autoTranslate;\r\n        dbDefaultVolume = dbData.defaultVolume;\r\n        dbShowVideoSlider = dbData.showVideoSlider;\r\n        dbAutoSetVolumeYandexStyle = dbData.autoSetVolumeYandexStyle;\r\n        dontTranslateYourLang = dbData.dontTranslateYourLang;\r\n        dbAudioProxy = dbData.audioProxy; // cf version only\r\n        dbSyncVolume = dbData.syncVolume; // youtube only\r\n\r\n        _utils_debug_js__WEBPACK_IMPORTED_MODULE_13__[\"default\"].log(\"[db] data from db: \", dbData);\r\n\r\n        // if (\r\n        //   dbHighlightWords !== undefined &&\r\n        //   menuOptions &&\r\n        //   !menuOptions.querySelector(\"#VOTHighlightWords\")\r\n        // ) {\r\n        //   const checkbox = createMenuCheckbox(\r\n        //     \"VOTHighlightWords\",\r\n        //     dbHighlightWords,\r\n        //     \"Highlight words\"\r\n        //   );\r\n\r\n        //   checkbox.querySelector(\"#VOTHighlightWords\").onclick = async (\r\n        //     event\r\n        //   ) => {\r\n        //     event.stopPropagation();\r\n        //     const value = Number(event.target.checked);\r\n        //     // await updateDB({ highlightWords: value }); // TODO\r\n        //     dbHighlightWords = value;\r\n        //     debug.log(\r\n        //       \"highlightWords value changed. New value: \",\r\n        //       dbHighlightWords\r\n        //     );\r\n        //   };\r\n\r\n        //   menuOptions.appendChild(checkbox);\r\n        // }\r\n\r\n        if (\r\n          dbAutoTranslate !== undefined &&\r\n          menuOptions &&\r\n          !menuOptions.querySelector(\"#VOTAutoTranslate\")\r\n        ) {\r\n          const checkbox = (0,_menu_js__WEBPACK_IMPORTED_MODULE_8__.createMenuCheckbox)(\r\n            \"VOTAutoTranslate\",\r\n            dbAutoTranslate,\r\n            _config_constants_js__WEBPACK_IMPORTED_MODULE_6__.translations[_menu_js__WEBPACK_IMPORTED_MODULE_8__.lang].VOTAutoTranslate +\r\n              (siteHostname === \"vk\" ||\r\n              window.location.hostname.includes(\"m.twitch.tv\")\r\n                ? ` <strong>(${_config_constants_js__WEBPACK_IMPORTED_MODULE_6__.translations[_menu_js__WEBPACK_IMPORTED_MODULE_8__.lang].recommended})</strong>`\r\n                : \"\")\r\n          );\r\n\r\n          checkbox.querySelector(\"#VOTAutoTranslate\").onclick = async (\r\n            event\r\n          ) => {\r\n            event.stopPropagation();\r\n            const value = Number(event.target.checked);\r\n            await (0,_indexedDB_js__WEBPACK_IMPORTED_MODULE_7__.updateDB)({ autoTranslate: value });\r\n            dbAutoTranslate = value;\r\n            _utils_debug_js__WEBPACK_IMPORTED_MODULE_13__[\"default\"].log(\r\n              \"autoTranslate value changed. New value: \",\r\n              dbAutoTranslate\r\n            );\r\n          };\r\n\r\n          menuOptions.appendChild(checkbox);\r\n        }\r\n\r\n        if (\r\n          window.location.hostname.includes(\"youtube.com\") &&\r\n          dontTranslateYourLang !== undefined &&\r\n          menuOptions &&\r\n          !menuOptions.querySelector(\"#VOTDontTranslateYourLang\")\r\n        ) {\r\n          const checkbox = (0,_menu_js__WEBPACK_IMPORTED_MODULE_8__.createMenuCheckbox)(\r\n            \"VOTDontTranslateYourLang\",\r\n            dontTranslateYourLang,\r\n            _config_constants_js__WEBPACK_IMPORTED_MODULE_6__.translations[_menu_js__WEBPACK_IMPORTED_MODULE_8__.lang].VOTDontTranslateYourLang\r\n          );\r\n\r\n          checkbox.querySelector(\"#VOTDontTranslateYourLang\").onclick = async (\r\n            event\r\n          ) => {\r\n            event.stopPropagation();\r\n            const value = Number(event.target.checked);\r\n            await (0,_indexedDB_js__WEBPACK_IMPORTED_MODULE_7__.updateDB)({ dontTranslateYourLang: value });\r\n            dontTranslateYourLang = value;\r\n            _utils_debug_js__WEBPACK_IMPORTED_MODULE_13__[\"default\"].log(\r\n              \"dontTranslateYourLang value changed. New value: \",\r\n              dontTranslateYourLang\r\n            );\r\n          };\r\n\r\n          menuOptions.appendChild(checkbox);\r\n        }\r\n\r\n        if (\r\n          dbAutoSetVolumeYandexStyle !== undefined &&\r\n          menuOptions &&\r\n          !menuOptions.querySelector(\"#VOTAutoSetVolume\")\r\n        ) {\r\n          const checkbox = (0,_menu_js__WEBPACK_IMPORTED_MODULE_8__.createMenuCheckbox)(\r\n            \"VOTAutoSetVolume\",\r\n            dbAutoSetVolumeYandexStyle,\r\n            _config_constants_js__WEBPACK_IMPORTED_MODULE_6__.translations[_menu_js__WEBPACK_IMPORTED_MODULE_8__.lang].VOTAutoSetVolume + `${_config_config_js__WEBPACK_IMPORTED_MODULE_4__.autoVolume * 100}%`\r\n          );\r\n\r\n          checkbox.querySelector(\"#VOTAutoSetVolume\").onclick = async (\r\n            event\r\n          ) => {\r\n            event.stopPropagation();\r\n            const value = Number(event.target.checked);\r\n            await (0,_indexedDB_js__WEBPACK_IMPORTED_MODULE_7__.updateDB)({ autoSetVolumeYandexStyle: value });\r\n            dbAutoSetVolumeYandexStyle = value;\r\n            _utils_debug_js__WEBPACK_IMPORTED_MODULE_13__[\"default\"].log(\r\n              \"autoSetVolumeYandexStyle value changed. New value: \",\r\n              dbAutoSetVolumeYandexStyle\r\n            );\r\n          };\r\n\r\n          menuOptions.appendChild(checkbox);\r\n        }\r\n\r\n        if (\r\n          dbShowVideoSlider !== undefined &&\r\n          menuOptions &&\r\n          !menuOptions.querySelector(\"#VOTShowVideoSlider\")\r\n        ) {\r\n          const checkbox = (0,_menu_js__WEBPACK_IMPORTED_MODULE_8__.createMenuCheckbox)(\r\n            \"VOTShowVideoSlider\",\r\n            dbShowVideoSlider,\r\n            _config_constants_js__WEBPACK_IMPORTED_MODULE_6__.translations[_menu_js__WEBPACK_IMPORTED_MODULE_8__.lang].VOTShowVideoSlider\r\n          );\r\n\r\n          checkbox.querySelector(\"#VOTShowVideoSlider\").onclick = async (\r\n            event\r\n          ) => {\r\n            event.stopPropagation();\r\n            const value = Number(event.target.checked);\r\n            await (0,_indexedDB_js__WEBPACK_IMPORTED_MODULE_7__.updateDB)({ showVideoSlider: value });\r\n            dbShowVideoSlider = value;\r\n            _utils_debug_js__WEBPACK_IMPORTED_MODULE_13__[\"default\"].log(\r\n              \"showVideoSlider value changed. New value: \",\r\n              dbShowVideoSlider\r\n            );\r\n            if (\r\n              dbShowVideoSlider === 1 &&\r\n              document.querySelector(\".translationBtn\").dataset.state ===\r\n                \"success\"\r\n            ) {\r\n              addVideoSlider();\r\n            } else {\r\n              document.querySelector(\"#VOTVideoSlider\")?.parentElement.remove();\r\n            }\r\n          };\r\n\r\n          menuOptions.appendChild(checkbox);\r\n        }\r\n\r\n        if (\r\n          window.location.hostname.includes(\"youtube.com\") &&\r\n          !window.location.hostname.includes(\"m.youtube.com\") &&\r\n          dbSyncVolume !== undefined &&\r\n          menuOptions &&\r\n          !menuOptions.querySelector(\"#VOTSyncVolume\")\r\n        ) {\r\n          const checkbox = (0,_menu_js__WEBPACK_IMPORTED_MODULE_8__.createMenuCheckbox)(\r\n            \"VOTSyncVolume\",\r\n            dbSyncVolume,\r\n            _config_constants_js__WEBPACK_IMPORTED_MODULE_6__.translations[_menu_js__WEBPACK_IMPORTED_MODULE_8__.lang].VOTSyncVolume\r\n          );\r\n\r\n          checkbox.querySelector(\"#VOTSyncVolume\").onclick = async (event) => {\r\n            event.stopPropagation();\r\n            const value = Number(event.target.checked);\r\n            await (0,_indexedDB_js__WEBPACK_IMPORTED_MODULE_7__.updateDB)({ syncVolume: value });\r\n            dbSyncVolume = value;\r\n            _utils_debug_js__WEBPACK_IMPORTED_MODULE_13__[\"default\"].log(\"syncVolume value changed. New value: \", dbSyncVolume);\r\n          };\r\n\r\n          menuOptions.appendChild(checkbox);\r\n        }\r\n\r\n        // cf version only\r\n        if (\r\n          false\r\n        ) {}\r\n      }\r\n    }\r\n\r\n    (0,_menu_js__WEBPACK_IMPORTED_MODULE_8__.transformBtn)(\"none\", _config_constants_js__WEBPACK_IMPORTED_MODULE_6__.translations[_menu_js__WEBPACK_IMPORTED_MODULE_8__.lang].translateVideo);\r\n\r\n    if (\r\n      window.location.hostname.includes(\"youtube.com\") &&\r\n      !window.location.hostname.includes(\"m.youtube.com\")\r\n    ) {\r\n      const syncVolumeObserver = new MutationObserver(async function (\r\n        mutations\r\n      ) {\r\n        mutations.forEach(async function (mutation) {\r\n          if (\r\n            mutation.type === \"attributes\" &&\r\n            mutation.attributeName === \"aria-valuenow\" &&\r\n            document.querySelector(\"#VOTVideoSlider\")\r\n          ) {\r\n            syncVideoVolumeSlider();\r\n          }\r\n        });\r\n      });\r\n\r\n      syncVolumeObserver.observe(document.querySelector(\".ytp-volume-panel\"), {\r\n        attributes: true,\r\n        childList: false,\r\n        subtree: true,\r\n        attributeOldValue: true,\r\n      });\r\n    }\r\n\r\n    async function setSelectMenuValues(from, to) {\r\n      if (!document.querySelector(\"#VOTSelectLanguages\")) {\r\n        return;\r\n      }\r\n      document.querySelector(\"#VOTTranslateFromLang\").value = from;\r\n      document.querySelector(\"#VOTTranslateToLang\").value = to;\r\n      console.log(`[VOT] Set translation from ${from} to ${to}`);\r\n      videoData.detectedLanguage = from\r\n      videoData.responseLanguage = to\r\n    }\r\n\r\n    // data - ytData or VideoData\r\n    // async function setDetectedLangauge(data, videolang) {\r\n    //   switch (videolang) {\r\n    //     case \"en\":\r\n    //       data.detectedLanguage = videolang;\r\n    //       data.responseLanguage = lang;\r\n    //       break;\r\n    //     case \"ru\":\r\n    //       data.detectedLanguage = videolang;\r\n    //       data.responseLanguage = lang;\r\n    //       if (lang == \"ru\") data.responseLanguage = \"en\";\r\n    //       break;\r\n    //     default:\r\n    //       if (!Object.keys(availableLangs).includes(videolang)) {\r\n    //         return setDetectedLangauge(data, \"en\");\r\n    //       }\r\n\r\n    //       data.detectedLanguage = videolang;\r\n    //   }\r\n\r\n    //   setSelectMenuValues(data.detectedLanguage, data.responseLanguage);\r\n\r\n    //   return data;\r\n    // }\r\n\r\n    // data - ytData or VideoData\r\n    // async function setResponseLangauge(data, videolang) {\r\n    //   switch (videolang) {\r\n    //     case \"en\":\r\n    //       data.responseLanguage = videolang;\r\n    //       data.detectedLanguage = \"ru\";\r\n    //       break;\r\n    //     default:\r\n    //       if (!Object.keys(availableLangs).includes(videolang)) {\r\n    //         return setResponseLangauge(data, \"ru\");\r\n    //       }\r\n\r\n    //       if (data.detectedLanguage && data.responseLanguage === lang) {\r\n    //         data.detectedLanguage = \"en\";\r\n    //       }\r\n\r\n    //       data.responseLanguage = videolang;\r\n    //   }\r\n\r\n    //   setSelectMenuValues(data.detectedLanguage, data.responseLanguage);\r\n\r\n    //   return data;\r\n    // }\r\n\r\n    async function stopTraslate() {\r\n      // Default actions on stop translate\r\n      audio.pause();\r\n      video.removeEventListener(\".translate\", stopTraslate, false);\r\n      await deleteAudioSrc();\r\n      document.querySelector(\"#VOTVideoSlider\")?.parentElement.remove();\r\n      document.querySelector(\"#VOTTranslationSlider\")?.parentElement.remove();\r\n      const downloadBtn = document.querySelector(\".translationDownload\");\r\n      downloadBtn.href = \"\";\r\n      downloadBtn.style.display = \"none\";\r\n      (0,_menu_js__WEBPACK_IMPORTED_MODULE_8__.transformBtn)(\"none\", _config_constants_js__WEBPACK_IMPORTED_MODULE_6__.translations[_menu_js__WEBPACK_IMPORTED_MODULE_8__.lang].translateVideo);\r\n      if (volumeOnStart) {\r\n        video.volume = volumeOnStart;\r\n      }\r\n    }\r\n\r\n    async function syncVideoVolumeSlider() {\r\n      // Sync volume slider with original video (youtube only)\r\n      const newSlidersVolume = document\r\n        .querySelector(\".ytp-volume-panel\")\r\n        .getAttribute(\"aria-valuenow\");\r\n\r\n      const videoSlider = document.querySelector(\"#VOTVideoSlider\");\r\n\r\n      if (!videoSlider) {\r\n        return;\r\n      }\r\n      videoSlider.value = newSlidersVolume;\r\n\r\n      const videoVolumeLabel = document.querySelector(\"#VOTVideoVolume\");\r\n\r\n      if (videoVolumeLabel) {\r\n        videoVolumeLabel.innerText = `${newSlidersVolume}%`;\r\n      }\r\n\r\n      if (dbSyncVolume === 1) {\r\n        tempOriginalVolume = Number(newSlidersVolume);\r\n      }\r\n    }\r\n\r\n    async function getVideoData() {\r\n      const videoData = {};\r\n\r\n      videoData.duration = video?.duration || 0;\r\n\r\n      videoData.videoId = (0,_utils_utils_js__WEBPACK_IMPORTED_MODULE_3__.getVideoId)(siteHostname);\r\n\r\n      videoData.detectedLanguage = translateFromLang;\r\n\r\n      videoData.responseLanguage = translateToLang;\r\n\r\n      if (window.location.hostname.includes(\"youtube.com\")) {\r\n        ytData = await _utils_youtubeUtils_js__WEBPACK_IMPORTED_MODULE_1__.youtubeUtils.getVideoData();\r\n        if (ytData.author !== \"\") {\r\n          videoData.detectedLanguage = ytData.detectedLanguage;\r\n          videoData.responseLanguage = _menu_js__WEBPACK_IMPORTED_MODULE_8__.lang;\r\n        }\r\n      } else if (\r\n        window.location.hostname.includes(\"rutube\") ||\r\n        window.location.hostname.includes(\"my.mail.ru\")\r\n      ) {\r\n        videoData.detectedLanguage = \"ru\";\r\n        videoData.responseLanguage = \"en\";\r\n      } else if (window.location.hostname.includes(\"bilibili.com\")) {\r\n        videoData.detectedLanguage = \"zh\";\r\n      }\r\n\r\n      return videoData;\r\n    }\r\n\r\n    const lipSync = async (mode = false) => {\r\n      _utils_debug_js__WEBPACK_IMPORTED_MODULE_13__[\"default\"].log(\"lipsync video\", video);\r\n      if (!video) {\r\n        return;\r\n      }\r\n      audio.currentTime = video.currentTime;\r\n      audio.playbackRate = video.playbackRate;\r\n\r\n      if (!mode) {\r\n        _utils_debug_js__WEBPACK_IMPORTED_MODULE_13__[\"default\"].log(\"lipsync mode is not set\");\r\n        return;\r\n      }\r\n\r\n      if (mode === \"play\") {\r\n        _utils_debug_js__WEBPACK_IMPORTED_MODULE_13__[\"default\"].log(\"lipsync mode is play\");\r\n        const audioPromise = audio.play();\r\n        if (audioPromise !== undefined) {\r\n          audioPromise.catch((e) => {\r\n            console.error(\"[VOT]\", e);\r\n            if (e.name === \"NotAllowedError\") {\r\n              const errorMessage = _config_constants_js__WEBPACK_IMPORTED_MODULE_6__.translations[_menu_js__WEBPACK_IMPORTED_MODULE_8__.lang].grantPermissionToAutoPlay;\r\n              (0,_menu_js__WEBPACK_IMPORTED_MODULE_8__.transformBtn)(\"error\", errorMessage);\r\n              throw `[VOT] ${errorMessage}`;\r\n            } else if (e.name === \"NotSupportedError\") {\r\n              const errorMessage = sitesChromiumBlocked.includes(\r\n                window.location.hostname\r\n              )\r\n                ? _config_constants_js__WEBPACK_IMPORTED_MODULE_6__.translations[_menu_js__WEBPACK_IMPORTED_MODULE_8__.lang].neededAdditionalExtension\r\n                : _config_constants_js__WEBPACK_IMPORTED_MODULE_6__.translations[_menu_js__WEBPACK_IMPORTED_MODULE_8__.lang].audioFormatNotSupported;\r\n              (0,_menu_js__WEBPACK_IMPORTED_MODULE_8__.transformBtn)(\"error\", errorMessage);\r\n              throw `[VOT] ${errorMessage}`;\r\n            }\r\n          });\r\n        }\r\n        return;\r\n      }\r\n      if (mode === \"pause\") {\r\n        _utils_debug_js__WEBPACK_IMPORTED_MODULE_13__[\"default\"].log(\"lipsync mode is pause\");\r\n        audio.pause();\r\n      }\r\n      if (mode === \"stop\") {\r\n        _utils_debug_js__WEBPACK_IMPORTED_MODULE_13__[\"default\"].log(\"lipsync mode is stop\");\r\n        audio.pause();\r\n      }\r\n      if (mode === \"waiting\") {\r\n        _utils_debug_js__WEBPACK_IMPORTED_MODULE_13__[\"default\"].log(\"lipsync mode is waiting\");\r\n        audio.pause();\r\n      }\r\n      if (mode === \"playing\") {\r\n        _utils_debug_js__WEBPACK_IMPORTED_MODULE_13__[\"default\"].log(\"lipsync mode is playing\");\r\n        audio.play();\r\n      }\r\n    };\r\n\r\n    async function addVideoSlider() {\r\n      if (\r\n        dbShowVideoSlider !== 1 ||\r\n        document.querySelector(\"#VOTVideoSlider\") ||\r\n        document.querySelector(\".translationBtn\").dataset.state !== \"success\"\r\n      ) {\r\n        return;\r\n      }\r\n\r\n      const newVolume =\r\n        window.location.hostname.includes(\"youtube.com\") &&\r\n        !dbAutoSetVolumeYandexStyle\r\n          ? document\r\n              .querySelector(\".ytp-volume-panel\")\r\n              ?.getAttribute(\"aria-valuenow\")\r\n          : Math.round(video.volume * 100);\r\n      tempOriginalVolume = newVolume;\r\n\r\n      const slider = (0,_menu_js__WEBPACK_IMPORTED_MODULE_8__.createMenuSlider)(\r\n        \"VOTVideoSlider\",\r\n        newVolume,\r\n        `${_config_constants_js__WEBPACK_IMPORTED_MODULE_6__.translations[_menu_js__WEBPACK_IMPORTED_MODULE_8__.lang].VOTVolume}: <b class = \"volumePercent\" id=\"VOTOriginalVolume\">${newVolume}%</b>`\r\n      );\r\n\r\n      slider.querySelector(\"#VOTVideoSlider\").oninput = async (event) => {\r\n        const { value } = event.target;\r\n        video.volume = value / 100;\r\n        slider.querySelector(\"#VOTOriginalVolume\").innerText = `${value}%`;\r\n\r\n        if (dbSyncVolume !== 1) {\r\n          return;\r\n        }\r\n\r\n        // Sync translation volume slider with video volume slider\r\n        const translateVolumeSlider = document.querySelector(\r\n          \"#VOTTranslationSlider\"\r\n        );\r\n\r\n        if (!translateVolumeSlider) {\r\n          return;\r\n        }\r\n        const translateVolume = Number(translateVolumeSlider.value);\r\n        const finalValue = (0,_utils_volume_js__WEBPACK_IMPORTED_MODULE_9__.syncVolume)(\r\n          audio,\r\n          value,\r\n          translateVolume,\r\n          tempOriginalVolume\r\n        );\r\n\r\n        translateVolumeSlider.value = finalValue;\r\n\r\n        const translateVolumeLabel = document.querySelector(\r\n          \"#VOTTranslationVolume\"\r\n        );\r\n\r\n        if (translateVolumeLabel) {\r\n          translateVolumeLabel.innerText = `${finalValue}%`;\r\n        }\r\n\r\n        tempVolume = finalValue;\r\n        tempOriginalVolume = value;\r\n      };\r\n\r\n      const menuOptions = document.querySelector(\".translationMenuOptions\");\r\n      menuOptions.appendChild(slider);\r\n    }\r\n\r\n    async function addTranslationSlider() {\r\n      // Return early if slider already exists or translation is not successful\r\n      if (\r\n        document.querySelector(\"#VOTTranslationSlider\") ||\r\n        document.querySelector(\".translationBtn\").dataset.state !== \"success\"\r\n      ) {\r\n        return;\r\n      }\r\n\r\n      // Use dbDefaultVolume or 100 as the default translation volume\r\n      const defaultTranslateVolume =\r\n        typeof dbDefaultVolume === \"number\" ? dbDefaultVolume : 100;\r\n      tempOriginalVolume = defaultTranslateVolume;\r\n\r\n      // Create a slider element with the default volume and label\r\n      const slider = (0,_menu_js__WEBPACK_IMPORTED_MODULE_8__.createMenuSlider)(\r\n        \"VOTTranslationSlider\",\r\n        defaultTranslateVolume,\r\n        `${_config_constants_js__WEBPACK_IMPORTED_MODULE_6__.translations[_menu_js__WEBPACK_IMPORTED_MODULE_8__.lang].VOTVolumeTranslation}: <b class = \"volumePercent\" id=\"VOTTranslationVolume\">${defaultTranslateVolume}%</b>`\r\n      );\r\n\r\n      // Add an input event listener to the slider\r\n      slider.querySelector(\"#VOTTranslationSlider\").oninput = async ({\r\n        target: { value },\r\n      }) => {\r\n        // Set the audio volume to the slider value\r\n        audio.volume = value / 100;\r\n\r\n        // Update the volume label\r\n        document.querySelector(\"#VOTTranslationVolume\").innerText = `${value}%`;\r\n\r\n        // Update the database with the new volume value\r\n        await (0,_indexedDB_js__WEBPACK_IMPORTED_MODULE_7__.updateDB)({ defaultVolume: Number(value) });\r\n        dbDefaultVolume = Number(value);\r\n\r\n        // Sync translation volume with video volume if dbSyncVolume is 1\r\n        if (dbSyncVolume === 1) {\r\n          syncTranslationWithVideo(value);\r\n        }\r\n      };\r\n\r\n      // Append the slider to the menu options\r\n      const menuOptions = document.querySelector(\".translationMenuOptions\");\r\n      menuOptions.appendChild(slider);\r\n    }\r\n\r\n    // A helper function to sync translation volume with video volume\r\n    function syncTranslationWithVideo(translationValue) {\r\n      // Get the video volume slider element\r\n      const videoVolumeSlider = document.querySelector(\"#VOTVideoSlider\");\r\n\r\n      if (!videoVolumeSlider) {\r\n        return;\r\n      }\r\n      // Get the video volume value\r\n      const videoVolume = Number(videoVolumeSlider.value);\r\n\r\n      // Calculate the synced video volume based on the translation volume\r\n      const finalValue = (0,_utils_volume_js__WEBPACK_IMPORTED_MODULE_9__.syncVolume)(\r\n        video,\r\n        translationValue,\r\n        videoVolume,\r\n        tempVolume\r\n      );\r\n\r\n      // Set the video volume slider value to the synced value\r\n      videoVolumeSlider.value = finalValue;\r\n\r\n      // Update the video volume label\r\n      const videoVolumeLabel = document.querySelector(\"#VOTOriginalVolume\");\r\n      if (videoVolumeLabel) videoVolumeLabel.innerText = `${finalValue}%`;\r\n\r\n      // Update the temp variables for future syncing\r\n      tempOriginalVolume = finalValue;\r\n      tempVolume = translationValue;\r\n    }\r\n\r\n    async function videoValidator() {\r\n      if (window.location.hostname.includes(\"youtube.com\")) {\r\n        _utils_debug_js__WEBPACK_IMPORTED_MODULE_13__[\"default\"].log(\"VideoValidator videoData: \", videoData);\r\n        if (\r\n          dontTranslateYourLang === 1 &&\r\n          videoData.detectedLanguage === _menu_js__WEBPACK_IMPORTED_MODULE_8__.lang &&\r\n          videoData.responseLanguage === _menu_js__WEBPACK_IMPORTED_MODULE_8__.lang\r\n        ) {\r\n          throw `[VOT] ${_config_constants_js__WEBPACK_IMPORTED_MODULE_6__.translations[_menu_js__WEBPACK_IMPORTED_MODULE_8__.lang].VOTDisableFromYourLang}`;\r\n        }\r\n        if (ytData.isPremiere) {\r\n          throw `[VOT] ${_config_constants_js__WEBPACK_IMPORTED_MODULE_6__.translations[_menu_js__WEBPACK_IMPORTED_MODULE_8__.lang].VOTPremiere}`;\r\n        }\r\n        if (ytData.isLive) {\r\n          throw `[VOT] ${_config_constants_js__WEBPACK_IMPORTED_MODULE_6__.translations[_menu_js__WEBPACK_IMPORTED_MODULE_8__.lang].VOTLiveNotSupported}`;\r\n        }\r\n        if (videoData.duration > 14_400) {\r\n          throw `[VOT] ${_config_constants_js__WEBPACK_IMPORTED_MODULE_6__.translations[_menu_js__WEBPACK_IMPORTED_MODULE_8__.lang].VOTVideoIsTooLong}`;\r\n        }\r\n      }\r\n      return true;\r\n    }\r\n\r\n    const translateExecutor = async (VIDEO_ID) => {\r\n      if (!videoData.detectedLanguage) {\r\n        videoData = await getVideoData()\r\n        await setSelectMenuValues(videoData.detectedLanguage, videoData.responseLanguage);\r\n      }\r\n      _utils_debug_js__WEBPACK_IMPORTED_MODULE_13__[\"default\"].log(\"Run videoValidator\");\r\n      await videoValidator();\r\n      _utils_debug_js__WEBPACK_IMPORTED_MODULE_13__[\"default\"].log(\"Run translateFunc\");\r\n      await translateFunc(\r\n        VIDEO_ID,\r\n        videoData.detectedLanguage,\r\n        videoData.responseLanguage\r\n      );\r\n    };\r\n\r\n    // Define a function to handle common events\r\n    async function handleVideoEvent(event) {\r\n      _utils_debug_js__WEBPACK_IMPORTED_MODULE_13__[\"default\"].log(`video ${event.type}`);\r\n      await lipSync(event.type);\r\n    }\r\n\r\n    // Define a function to stop translation and clean up\r\n    async function stopTranslation() {\r\n      await stopTraslate();\r\n      await syncVideoVolumeSlider();\r\n    }\r\n\r\n    // Define a function to translate a video and handle the callback\r\n    async function translateFunc(VIDEO_ID, requestLang, responseLang) {\r\n      console.log(\"[VOT] Video Data: \", videoData);\r\n      const videoURL = `${_config_constants_js__WEBPACK_IMPORTED_MODULE_6__.siteTranslates[siteHostname]}${VIDEO_ID}`;\r\n      translateVideo(\r\n        videoURL,\r\n        videoData.duration,\r\n        requestLang,\r\n        responseLang,\r\n        async (success, urlOrError) => {\r\n          _utils_debug_js__WEBPACK_IMPORTED_MODULE_13__[\"default\"].log(\"[exec callback] translateVideo\");\r\n          if ((0,_utils_utils_js__WEBPACK_IMPORTED_MODULE_3__.getVideoId)(siteHostname) !== VIDEO_ID) return;\r\n          if (!success) {\r\n            (0,_menu_js__WEBPACK_IMPORTED_MODULE_8__.transformBtn)(\"error\", urlOrError);\r\n            // if the error line contains information that the translation is being performed, then we wait\r\n            if (urlOrError.includes(_config_constants_js__WEBPACK_IMPORTED_MODULE_6__.translations[_menu_js__WEBPACK_IMPORTED_MODULE_8__.lang].translationTake)) {\r\n              clearTimeout(autoRetry);\r\n              autoRetry = setTimeout(\r\n                () => translateFunc(VIDEO_ID, requestLang, responseLang),\r\n                60_000\r\n              );\r\n            }\r\n            throw `[VOT] ${urlOrError}`;\r\n          }\r\n\r\n          audio.src = urlOrError;\r\n\r\n          // cf version only\r\n          if (\r\n            false\r\n          ) {}\r\n\r\n          volumeOnStart = video?.volume;\r\n          if (typeof dbDefaultVolume === \"number\") {\r\n            audio.volume = dbDefaultVolume / 100;\r\n          }\r\n          if (\r\n            typeof dbAutoSetVolumeYandexStyle === \"number\" &&\r\n            dbAutoSetVolumeYandexStyle\r\n          ) {\r\n            video.volume = _config_config_js__WEBPACK_IMPORTED_MODULE_4__.autoVolume;\r\n          }\r\n\r\n          switch (siteHostname) {\r\n            case \"twitter\":\r\n              document\r\n                .querySelector('div[data-testid=\"app-bar-back\"][role=\"button\"]')\r\n                .addEventListener(\"click\", stopTranslation);\r\n              break;\r\n            case \"invidious\":\r\n            case \"piped\":\r\n              break;\r\n            default:\r\n              if (siteEvent !== null) {\r\n                document.body.addEventListener(siteEvent, stopTranslation);\r\n              }\r\n              break;\r\n          }\r\n\r\n          const siteHostnames = [\r\n            \"twitch\",\r\n            \"vimeo\",\r\n            \"facebook\",\r\n            \"rutube\",\r\n            \"twitter\",\r\n            \"bilibili.com\",\r\n            \"mail.ru\",\r\n          ];\r\n          for (let i = 0; i < siteHostnames.length; i++) {\r\n            if (siteHostname === siteHostnames[i]) {\r\n              const mutationObserver = new MutationObserver(\r\n                async (mutations) => {\r\n                  mutations.forEach(async (mutation) => {\r\n                    if (\r\n                      mutation.type === \"attributes\" &&\r\n                      mutation.attributeName === \"src\" &&\r\n                      mutation.target === video &&\r\n                      mutation.target.src !== \"\"\r\n                    ) {\r\n                      stopTranslation();\r\n                      firstPlay = true;\r\n                    }\r\n                  });\r\n                }\r\n              );\r\n              mutationObserver.observe(videoContainer, {\r\n                attributes: true,\r\n                childList: false,\r\n                subtree: true,\r\n                attributeOldValue: true,\r\n              });\r\n              break;\r\n            }\r\n          }\r\n\r\n          if (video && !video.paused) lipSync(\"play\");\r\n          const videos = document.querySelectorAll(\"video\");\r\n          const events = [\r\n            \"playing\",\r\n            \"ratechange\",\r\n            \"play\",\r\n            \"abort\",\r\n            \"waiting\",\r\n            \"pause\",\r\n          ];\r\n          videos.forEach((v) =>\r\n            events.forEach((e) => v.addEventListener(e, handleVideoEvent))\r\n          );\r\n          (0,_menu_js__WEBPACK_IMPORTED_MODULE_8__.transformBtn)(\"success\", _config_constants_js__WEBPACK_IMPORTED_MODULE_6__.translations[_menu_js__WEBPACK_IMPORTED_MODULE_8__.lang].disableTranslate);\r\n          await addVideoSlider();\r\n          await addTranslationSlider();\r\n\r\n          const VOTVideoSlider = document.querySelector(\"#VOTVideoSlider\");\r\n          if (VOTVideoSlider) VOTVideoSlider.value = _config_config_js__WEBPACK_IMPORTED_MODULE_4__.autoVolume * 100;\r\n\r\n          const VOTOriginalVolume =\r\n            document.querySelector(\"#VOTOriginalVolume\");\r\n          if (VOTOriginalVolume) {\r\n            VOTOriginalVolume.innerText = `${_config_config_js__WEBPACK_IMPORTED_MODULE_4__.autoVolume * 100}%`;\r\n          }\r\n\r\n          const downloadBtn = document.querySelector(\".translationDownload\");\r\n          downloadBtn.href = urlOrError;\r\n          downloadBtn.style.display = \"initial\";\r\n        }\r\n      );\r\n    }\r\n\r\n    document.addEventListener(\"click\", async (event) => {\r\n      const block = document.querySelector(\".translationBlock\");\r\n      const menuContainer = document.querySelector(\".translationMenuContent\");\r\n      const isBlock =\r\n        block || event.target === block ? block.contains(event.target) : false;\r\n      const isContent =\r\n        menuContainer || event.target === menuContainer\r\n          ? menuContainer.contains(event.target)\r\n          : false;\r\n      const isVideo =\r\n        videoContainer || event.target === videoContainer\r\n          ? videoContainer.contains(event.target)\r\n          : false;\r\n\r\n      _utils_debug_js__WEBPACK_IMPORTED_MODULE_13__[\"default\"].log(`[document click] ${isBlock} ${isContent} ${isVideo}`);\r\n      if (!(!isBlock && !isContent)) return;\r\n      if (!isVideo) logout(0);\r\n\r\n      menuContainer.style.display = \"none\";\r\n      openedMenu = false;\r\n    });\r\n\r\n    const addEventListeners = (element, events, handler) => {\r\n      events.forEach((event) =>\r\n        element.addEventListener(event, async (event) => {\r\n          await handler(event);\r\n        })\r\n      );\r\n    };\r\n\r\n    if (siteHostname === \"pornhub\") {\r\n      if (window.location.pathname.includes(\"view_video.php\")) {\r\n        const videoElement = document.querySelector(\r\n          \".original.mainPlayerDiv > video-element > div\"\r\n        );\r\n        addEventListeners(videoElement, [\"mousemove\", \"mouseout\"], resetTimer);\r\n      } else if (window.location.pathname.includes(\"embed/\")) {\r\n        const playerElement = document.querySelector(\"#player\");\r\n        addEventListeners(playerElement, [\"mousemove\", \"mouseout\"], resetTimer);\r\n      }\r\n    } else if (siteHostname === \"twitter\") {\r\n      const videoPlayerElement = document.querySelector(\r\n        'div[data-testid=\"videoPlayer\"'\r\n      );\r\n      addEventListeners(\r\n        videoPlayerElement,\r\n        [\"mousemove\", \"mouseout\"],\r\n        resetTimer\r\n      );\r\n    } else {\r\n      addEventListeners(videoContainer, [\"mousemove\", \"mouseout\"], resetTimer);\r\n    }\r\n\r\n    document\r\n      .querySelector(\".translationBlock\")\r\n      .addEventListener(\"mousemove\", (event) =>\r\n        changeOpacityOnEvent(event, timer, opacityRatio)\r\n      );\r\n    document\r\n      .querySelector(\".translationMenuContent\")\r\n      .addEventListener(\"mousemove\", (event) =>\r\n        changeOpacityOnEvent(event, timer, opacityRatio)\r\n      );\r\n\r\n    document.addEventListener(\"touchstart\", (event) =>\r\n      changeOpacityOnEvent(event, timer, opacityRatio)\r\n    );\r\n    document.addEventListener(\"touchmove\", (event) =>\r\n      changeOpacityOnEvent(event, timer, opacityRatio)\r\n    );\r\n    document.addEventListener(\"touchend\", (event) =>\r\n      changeOpacityOnEvent(event, timer, opacityRatio)\r\n    );\r\n    document.querySelectorAll(\"video\").forEach(video => {\r\n      video.addEventListener(\"abort\", async () => {\r\n      _utils_debug_js__WEBPACK_IMPORTED_MODULE_13__[\"default\"].log(\"lipsync mode is abort\");\r\n      await stopTranslation();\r\n      videoData = \"\"\r\n      });\r\n    });\r\n\r\n    document\r\n      .querySelector(\".translationBtn\")\r\n      .addEventListener(\"click\", async (event) => {\r\n        _utils_debug_js__WEBPACK_IMPORTED_MODULE_13__[\"default\"].log(\"[click translationBtn] before all functions & methods\");\r\n        event.stopPropagation();\r\n        event.stopImmediatePropagation();\r\n\r\n        // check if the audio source is not empty\r\n        if (audio.src) {\r\n          _utils_debug_js__WEBPACK_IMPORTED_MODULE_13__[\"default\"].log(\"[click translationBtn] audio.src is not empty\");\r\n          await stopTraslate();\r\n          return;\r\n        }\r\n\r\n        try {\r\n          _utils_debug_js__WEBPACK_IMPORTED_MODULE_13__[\"default\"].log(\"[click translationBtn] trying execute translation\");\r\n          const VIDEO_ID = (0,_utils_utils_js__WEBPACK_IMPORTED_MODULE_3__.getVideoId)(siteHostname);\r\n\r\n          if (!VIDEO_ID) {\r\n            throw `[VOT] ${_config_constants_js__WEBPACK_IMPORTED_MODULE_6__.translations[_menu_js__WEBPACK_IMPORTED_MODULE_8__.lang].VOTNoVideoIDFound}`;\r\n          }\r\n\r\n          await translateExecutor(VIDEO_ID);\r\n        } catch (err) {\r\n          console.error(\"[VOT]\", err);\r\n          (0,_menu_js__WEBPACK_IMPORTED_MODULE_8__.transformBtn)(\"error\", String(err).substring(4, err.length));\r\n        }\r\n      });\r\n\r\n    video.addEventListener(\"progress\", async (event) => {\r\n      event.stopPropagation();\r\n\r\n      if (!(firstPlay && dbAutoTranslate === 1)) {\r\n        return;\r\n      }\r\n      const VIDEO_ID = (0,_utils_utils_js__WEBPACK_IMPORTED_MODULE_3__.getVideoId)(siteHostname);\r\n\r\n      if (!VIDEO_ID) {\r\n        throw `[VOT] ${_config_constants_js__WEBPACK_IMPORTED_MODULE_6__.translations[_menu_js__WEBPACK_IMPORTED_MODULE_8__.lang].VOTNoVideoIDFound}`;\r\n      }\r\n\r\n      try {\r\n        await translateExecutor(VIDEO_ID);\r\n        firstPlay = false;\r\n      } catch (err) {\r\n        console.error(\"[VOT]\", err);\r\n        (0,_menu_js__WEBPACK_IMPORTED_MODULE_8__.transformBtn)(\"error\", String(err).substring(4, err.length));\r\n        firstPlay = false;\r\n      }\r\n    });\r\n\r\n    document\r\n      .querySelector(\".translationMenu\")\r\n      .addEventListener(\"click\", async (event) => {\r\n        event.stopPropagation();\r\n\r\n        const select = document.querySelector(\".translationMenuOptions\")?.querySelector(\"#VOTSubtitlesLang\");\r\n\r\n        if (!openedMenu || !select) {\r\n          return;\r\n        }\r\n\r\n        const VIDEO_ID = (0,_utils_utils_js__WEBPACK_IMPORTED_MODULE_3__.getVideoId)(siteHostname);\r\n\r\n        if (!VIDEO_ID) {\r\n          console.error(`[VOT] ${_config_constants_js__WEBPACK_IMPORTED_MODULE_6__.translations[_menu_js__WEBPACK_IMPORTED_MODULE_8__.lang].VOTNoVideoIDFound}`);\r\n          subtitlesList = [];\r\n          subtitlesListVideoId = null;\r\n          await updateSubtitlesLangSelect();\r\n          return;\r\n        }\r\n\r\n        if (subtitlesListVideoId === VIDEO_ID) {\r\n          return;\r\n        }\r\n\r\n        if (!videoData.detectedLanguage) {\r\n          videoData = await getVideoData()\r\n          await setSelectMenuValues(videoData.detectedLanguage, videoData.responseLanguage);\r\n        }\r\n\r\n        subtitlesList = await (0,_subtitles_js__WEBPACK_IMPORTED_MODULE_15__.getSubtitles)(siteHostname, VIDEO_ID, videoData.detectedLanguage);\r\n        if (!subtitlesList) {\r\n          await changeSubtitlesLang(\"disabled\");\r\n        } else {\r\n          subtitlesListVideoId = VIDEO_ID;\r\n        }\r\n        await updateSubtitlesLangSelect();\r\n      });\r\n  }\r\n\r\n  async function initWebsite() {\r\n    _utils_debug_js__WEBPACK_IMPORTED_MODULE_13__[\"default\"].log(\"Runned initWebsite function\");\r\n    if (_config_regexes_js__WEBPACK_IMPORTED_MODULE_11__[\"default\"].youtubeRegex.test(window.location.hostname)) {\r\n      if (window.location.pathname.includes(\"embed\")) {\r\n        const videoContainer = document.querySelector(\".html5-video-container\");\r\n        await translateProccessor(videoContainer, \"youtube\", null);\r\n        return;\r\n      }\r\n\r\n      _utils_debug_js__WEBPACK_IMPORTED_MODULE_13__[\"default\"].log(\"[initWebsite] Found a match with youtube hostname\");\r\n      const ytPageEnter = () => {\r\n        const videoContainer = document.querySelector(\r\n          _config_selectors_js__WEBPACK_IMPORTED_MODULE_12__[\"default\"].youtubeSelector\r\n        );\r\n        if (videoContainer) {\r\n          _utils_debug_js__WEBPACK_IMPORTED_MODULE_13__[\"default\"].log(\"[exec] translateProccessor youtube on page enter\");\r\n          translateProccessor(videoContainer, \"youtube\", \"yt-translate-stop\");\r\n        } else {\r\n          if (!ytplayer || !ytplayer.config) {\r\n            _utils_debug_js__WEBPACK_IMPORTED_MODULE_13__[\"default\"].log(\"[exec] ytplayer is null\");\r\n            return;\r\n          }\r\n          ytplayer.config.args.jsapicallback = () => {\r\n            _utils_debug_js__WEBPACK_IMPORTED_MODULE_13__[\"default\"].log(\r\n              \"[exec] translateProccessor youtube on page enter (ytplayer.config.args.jsapicallback)\"\r\n            );\r\n            translateProccessor(videoContainer, \"youtube\", \"yt-translate-stop\");\r\n          };\r\n        }\r\n      };\r\n\r\n      document.addEventListener(\"spfdone\", ytPageEnter);\r\n      document.addEventListener(\"yt-navigate-finish\", ytPageEnter);\r\n\r\n      const ytPageLeave = () => {\r\n        document.body.dispatchEvent(new Event(\"yt-translate-stop\"));\r\n      };\r\n\r\n      document.addEventListener(\"spfrequest\", ytPageLeave);\r\n      document.addEventListener(\"yt-navigate-start\", ytPageLeave);\r\n\r\n      if (window.location.hostname.includes(\"m.youtube.com\")) {\r\n        let ytmobile = await (0,_utils_utils_js__WEBPACK_IMPORTED_MODULE_3__.waitForElm)(\"#player\");\r\n        if (ytmobile) {\r\n          await (0,_utils_utils_js__WEBPACK_IMPORTED_MODULE_3__.sleep)(1000);\r\n          await translateProccessor(ytmobile, \"youtube\", \"yt-translate-stop\");\r\n\r\n          const mutationObserver = new MutationObserver(async (mutations) => {\r\n            for (const mutation of mutations) {\r\n              if (\r\n                mutation.type === \"attributes\" &&\r\n                mutation.attributeName === \"src\"\r\n              ) {\r\n                ytmobile = await (0,_utils_utils_js__WEBPACK_IMPORTED_MODULE_3__.waitForElm)(\"#player\");\r\n                await (0,_utils_utils_js__WEBPACK_IMPORTED_MODULE_3__.sleep)(1000);\r\n                await translateProccessor(\r\n                  ytmobile,\r\n                  \"youtube\",\r\n                  \"yt-translate-stop\"\r\n                );\r\n              }\r\n            }\r\n          });\r\n\r\n          mutationObserver.observe(ytmobile, {\r\n            attributes: true,\r\n            childList: true,\r\n            subtree: true,\r\n            attributeOldValue: true,\r\n          });\r\n        }\r\n        const ytPageLeave = () => {\r\n          document.body.dispatchEvent(new Event(\"yt-translate-stop\"));\r\n        };\r\n        document.addEventListener(\"spfdone\", ytPageLeave);\r\n        document.addEventListener(\"yt-navigate-finish\", ytPageLeave);\r\n        document.addEventListener(\"spfrequest\", ytPageLeave);\r\n        document.addEventListener(\"yt-navigate-start\", ytPageLeave);\r\n      }\r\n      return;\r\n    }\r\n    if (window.location.hostname.includes(\"twitch.tv\")) {\r\n      _utils_debug_js__WEBPACK_IMPORTED_MODULE_13__[\"default\"].log(\"[initWebsite] Found a match with twitch.tv\");\r\n      if (\r\n        window.location.hostname.includes(\"m.twitch.tv\") &&\r\n        (window.location.pathname.includes(\"/videos/\") ||\r\n          window.location.pathname.includes(\"/clip/\"))\r\n      ) {\r\n        _utils_debug_js__WEBPACK_IMPORTED_MODULE_13__[\"default\"].log(\"[initWebsite] Matched Twitch Mobile\");\r\n        const el = await (0,_utils_utils_js__WEBPACK_IMPORTED_MODULE_3__.waitForElm)(_config_selectors_js__WEBPACK_IMPORTED_MODULE_12__[\"default\"].twitchMobileSelector);\r\n        if (el) {\r\n          await (0,_utils_utils_js__WEBPACK_IMPORTED_MODULE_3__.sleep)(200);\r\n          const twitchMobileSelector = document.querySelector(\r\n            _config_selectors_js__WEBPACK_IMPORTED_MODULE_12__[\"default\"].twitchMobileSelector\r\n          );\r\n          await translateProccessor(twitchMobileSelector, \"twitch\", null);\r\n\r\n          const mutationObserver = new MutationObserver(async (mutations) => {\r\n            for (const mutation of mutations) {\r\n              if (\r\n                mutation.type === \"attributes\" &&\r\n                mutation.attributeName === \"src\" &&\r\n                mutation.target === twitchMobileSelector?.querySelector(\"video\")\r\n              ) {\r\n                await (0,_utils_utils_js__WEBPACK_IMPORTED_MODULE_3__.sleep)(1000);\r\n                await translateProccessor(twitchMobileSelector, \"twitch\", null);\r\n              }\r\n            }\r\n          });\r\n\r\n          mutationObserver.observe(twitchMobileSelector, {\r\n            attributes: true,\r\n            childList: true,\r\n            subtree: true,\r\n            attributeOldValue: true,\r\n          });\r\n        }\r\n      } else if (\r\n        window.location.hostname.includes(\"player.twitch.tv\") ||\r\n        window.location.hostname.includes(\"clips.twitch.tv\") ||\r\n        window.location.pathname.includes(\"/videos/\") ||\r\n        window.location.pathname.includes(\"/clip/\")\r\n      ) {\r\n        _utils_debug_js__WEBPACK_IMPORTED_MODULE_13__[\"default\"].log(\"[initWebsite] Matched Twitch Desktop\");\r\n        const el = await (0,_utils_utils_js__WEBPACK_IMPORTED_MODULE_3__.waitForElm)(_config_selectors_js__WEBPACK_IMPORTED_MODULE_12__[\"default\"].twitchSelector);\r\n        if (el) {\r\n          await (0,_utils_utils_js__WEBPACK_IMPORTED_MODULE_3__.sleep)(200);\r\n          await translateProccessor(el, \"twitch\", null);\r\n        }\r\n      }\r\n      _utils_debug_js__WEBPACK_IMPORTED_MODULE_13__[\"default\"].log(\"[initWebsite] Exit function in the twitch section\");\r\n      return;\r\n    }\r\n    if (window.location.hostname.includes(\"xvideos.com\")) {\r\n      _utils_debug_js__WEBPACK_IMPORTED_MODULE_13__[\"default\"].log(\"[entered] xvideos\");\r\n      await (0,_utils_utils_js__WEBPACK_IMPORTED_MODULE_3__.sleep)(1000);\r\n      await translateProccessor(\r\n        document.querySelector(\".video-bg-pic\"),\r\n        \"xvideos\",\r\n        null\r\n      );\r\n      return;\r\n    }\r\n    if (window.location.hostname.includes(\"pornhub.com\")) {\r\n      _utils_debug_js__WEBPACK_IMPORTED_MODULE_13__[\"default\"].log(\"[entered] pornhub\");\r\n      await (0,_utils_utils_js__WEBPACK_IMPORTED_MODULE_3__.sleep)(1000);\r\n      await translateProccessor(\r\n        document.querySelector(\".mgp_videoWrapper\"),\r\n        \"pornhub\",\r\n        null\r\n      );\r\n      return;\r\n    }\r\n    if (_config_alternativeUrls_js__WEBPACK_IMPORTED_MODULE_5__.sitesInvidious.includes(window.location.hostname)) {\r\n      // Need an additional extension to work in chrome-like browsers\r\n      _utils_debug_js__WEBPACK_IMPORTED_MODULE_13__[\"default\"].log(\"[entered] invidious\");\r\n      await translateProccessor(\r\n        document.querySelector(\"#player\"),\r\n        \"youtube\",\r\n        null\r\n      );\r\n    } else if (_config_alternativeUrls_js__WEBPACK_IMPORTED_MODULE_5__.sitesPiped.includes(window.location.hostname)) {\r\n      // Need an additional extension to work in chrome-like browsers\r\n      _utils_debug_js__WEBPACK_IMPORTED_MODULE_13__[\"default\"].log(\"[entered] piped\");\r\n      const el = await (0,_utils_utils_js__WEBPACK_IMPORTED_MODULE_3__.waitForElm)(_config_selectors_js__WEBPACK_IMPORTED_MODULE_12__[\"default\"].pipedSelector);\r\n      if (el) {\r\n        let videoIDNew;\r\n        let videoID = (0,_utils_utils_js__WEBPACK_IMPORTED_MODULE_3__.getVideoId)(\"youtube\");\r\n        await translateProccessor(el, \"youtube\", \"piped\");\r\n        setInterval(async () => {\r\n          videoIDNew = (0,_utils_utils_js__WEBPACK_IMPORTED_MODULE_3__.getVideoId)(\"youtube\");\r\n          if (videoID !== videoIDNew) {\r\n            if (videoIDNew) {\r\n              await translateProccessor(\r\n                document.querySelector(_config_selectors_js__WEBPACK_IMPORTED_MODULE_12__[\"default\"].pipedSelector),\r\n                \"youtube\",\r\n                \"piped\"\r\n              );\r\n            }\r\n            videoID = videoIDNew;\r\n          }\r\n        }, 3000);\r\n      }\r\n    } else if (/^(www.|m.)?vk.(com|ru)$/.test(window.location.hostname)) {\r\n      _utils_debug_js__WEBPACK_IMPORTED_MODULE_13__[\"default\"].log(\"[entered] vk.com\");\r\n      const el = await (0,_utils_utils_js__WEBPACK_IMPORTED_MODULE_3__.waitForElm)(_config_selectors_js__WEBPACK_IMPORTED_MODULE_12__[\"default\"].vkSelector);\r\n      if (el) {\r\n        await translateProccessor(\r\n          document.querySelector(_config_selectors_js__WEBPACK_IMPORTED_MODULE_12__[\"default\"].vkSelector),\r\n          \"vk\",\r\n          null\r\n        );\r\n        let videoIDVKNew;\r\n        let videoIDVK = (0,_utils_utils_js__WEBPACK_IMPORTED_MODULE_3__.getVideoId)(\"vk\");\r\n        setInterval(async () => {\r\n          videoIDVKNew = (0,_utils_utils_js__WEBPACK_IMPORTED_MODULE_3__.getVideoId)(\"vk\");\r\n          if (videoIDVK !== videoIDVKNew) {\r\n            if (videoIDVKNew) {\r\n              const el = await (0,_utils_utils_js__WEBPACK_IMPORTED_MODULE_3__.waitForElm)(_config_selectors_js__WEBPACK_IMPORTED_MODULE_12__[\"default\"].vkSelector);\r\n              if (el) {\r\n                await translateProccessor(el, \"vk\", null);\r\n              }\r\n            }\r\n            videoIDVK = videoIDVKNew;\r\n          }\r\n        }, 3000);\r\n      }\r\n    } else if (window.location.hostname.includes(\"vimeo.com\")) {\r\n      _utils_debug_js__WEBPACK_IMPORTED_MODULE_13__[\"default\"].log(\"[entered] vimeo.com\");\r\n      const el = await (0,_utils_utils_js__WEBPACK_IMPORTED_MODULE_3__.waitForElm)(_config_selectors_js__WEBPACK_IMPORTED_MODULE_12__[\"default\"].vimeoSelector);\r\n      if (el) {\r\n        await (0,_utils_utils_js__WEBPACK_IMPORTED_MODULE_3__.sleep)(1000);\r\n        await translateProccessor(\r\n          document.querySelector(_config_selectors_js__WEBPACK_IMPORTED_MODULE_12__[\"default\"].vimeoSelector),\r\n          \"vimeo\",\r\n          null\r\n        );\r\n      }\r\n    } else if (window.location.hostname.includes(\"9gag.com\")) {\r\n      await (0,_utils_utils_js__WEBPACK_IMPORTED_MODULE_3__.sleep)(1000);\r\n      await translateProccessor(\r\n        document.querySelector(_config_selectors_js__WEBPACK_IMPORTED_MODULE_12__[\"default\"].gagSelector),\r\n        \"9gag\",\r\n        null\r\n      );\r\n    } else if (window.location.hostname.includes(\"coub.com\")) {\r\n      await (0,_utils_utils_js__WEBPACK_IMPORTED_MODULE_3__.sleep)(1000);\r\n      await translateProccessor(\r\n        document.querySelector(\".viewer__player\"),\r\n        \"coub\",\r\n        null\r\n      );\r\n    } else if (window.location.hostname.includes(\"rutube.ru\")) {\r\n      const elementSelector = window.location.pathname.includes(\"/play/embed\")\r\n        ? \"#app > div > div\"\r\n        : \".video-player > div > div > div:nth-child(2)\";\r\n\r\n      const el = await (0,_utils_utils_js__WEBPACK_IMPORTED_MODULE_3__.waitForElm)(elementSelector);\r\n      if (el) {\r\n        await translateProccessor(el, \"rutube\", null);\r\n      }\r\n    } else if (window.location.hostname.includes(\"bilibili.com\")) {\r\n      if (window.location.pathname.includes(\"/video/\")) {\r\n        const el = await (0,_utils_utils_js__WEBPACK_IMPORTED_MODULE_3__.waitForElm)(_config_selectors_js__WEBPACK_IMPORTED_MODULE_12__[\"default\"].bilibilicomSelector);\r\n        if (el) {\r\n          await translateProccessor(el, \"bilibili.com\", null);\r\n        }\r\n      } else if (\r\n        window.location.pathname.includes(\r\n          \"/blackboard/webplayer/embed-old.html\"\r\n        )\r\n      ) {\r\n        const el = await (0,_utils_utils_js__WEBPACK_IMPORTED_MODULE_3__.waitForElm)(\"video\");\r\n        if (el) {\r\n          await translateProccessor(el.parentElement, \"bilibili.com\", null);\r\n        }\r\n      }\r\n    } else if (window.location.hostname.includes(\"twitter.com\")) {\r\n      const el = await (0,_utils_utils_js__WEBPACK_IMPORTED_MODULE_3__.waitForElm)(_config_selectors_js__WEBPACK_IMPORTED_MODULE_12__[\"default\"].twitterSelector);\r\n      if (el) {\r\n        let videoIDNew;\r\n        let videoID = (0,_utils_utils_js__WEBPACK_IMPORTED_MODULE_3__.getVideoId)(\"twitter\");\r\n        await translateProccessor(el, \"twitter\", null);\r\n        setInterval(async () => {\r\n          videoIDNew = (0,_utils_utils_js__WEBPACK_IMPORTED_MODULE_3__.getVideoId)(\"twitter\");\r\n          if (videoID !== videoIDNew) {\r\n            if (videoIDNew) {\r\n              await translateProccessor(\r\n                document.querySelector(_config_selectors_js__WEBPACK_IMPORTED_MODULE_12__[\"default\"].twitterSelector),\r\n                \"twitter\",\r\n                null\r\n              );\r\n            }\r\n            videoID = videoIDNew;\r\n          }\r\n        }, 3000);\r\n      }\r\n    } else if (window.location.hostname.includes(\"my.mail.ru\")) {\r\n      const el = await (0,_utils_utils_js__WEBPACK_IMPORTED_MODULE_3__.waitForElm)(_config_selectors_js__WEBPACK_IMPORTED_MODULE_12__[\"default\"].mailSelector);\r\n      if (el) {\r\n        let videoIDNew;\r\n        let videoID = (0,_utils_utils_js__WEBPACK_IMPORTED_MODULE_3__.getVideoId)(\"mail.ru\");\r\n        await translateProccessor(el, \"mail.ru\", null);\r\n        setInterval(async () => {\r\n          videoIDNew = (0,_utils_utils_js__WEBPACK_IMPORTED_MODULE_3__.getVideoId)(\"mail.ru\");\r\n          if (videoID !== videoIDNew) {\r\n            if (videoIDNew) {\r\n              await translateProccessor(\r\n                document.querySelector(_config_selectors_js__WEBPACK_IMPORTED_MODULE_12__[\"default\"].mailSelector),\r\n                \"mail.ru\",\r\n                null\r\n              );\r\n            }\r\n            videoID = videoIDNew;\r\n          }\r\n        }, 3000);\r\n      }\r\n    }\r\n  }\r\n\r\n  await initWebsite();\r\n}\r\n\r\nmain().catch((e) => {\r\n  console.error(\"[VOT]\", e);\r\n});\n\n//# sourceURL=webpack://voice-over-translation/./src/index.js?");

/***/ }),

/***/ "./src/indexedDB.js":
/*!**************************!*\
  !*** ./src/indexedDB.js ***!
  \**************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"deleteDB\": () => (/* binding */ deleteDB),\n/* harmony export */   \"initDB\": () => (/* binding */ initDB),\n/* harmony export */   \"readDB\": () => (/* binding */ readDB),\n/* harmony export */   \"updateDB\": () => (/* binding */ updateDB)\n/* harmony export */ });\n/* harmony import */ var _menu_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./menu.js */ \"./src/menu.js\");\n/* harmony import */ var _config_constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./config/constants.js */ \"./src/config/constants.js\");\n\r\n\r\n\r\n// --- IndexedDB functions start:\r\nconst dbVersion = 2; // current db version\r\nconst settingsDefault = {\r\n  key: \"settings\",\r\n  autoTranslate: 0,\r\n  defaultVolume: 100,\r\n  showVideoSlider: 0,\r\n  syncVolume: 0,\r\n  autoSetVolumeYandexStyle: 1,\r\n  dontTranslateYourLang: 1,\r\n}; // default settings for db v1\r\n\r\nconst valuesV2 = {\r\n  audioProxy: 0,\r\n};\r\n\r\nfunction openDB(name) {\r\n  return indexedDB.open(name, dbVersion);\r\n}\r\n\r\nasync function initDB() {\r\n  return new Promise((resolve, reject) => {\r\n    function updateVersionProccessor(\r\n      transaction,\r\n      db,\r\n      indexes,\r\n      previousIndexes = {}\r\n    ) {\r\n      // openRequest is transaction object\r\n      // indexes is object of strings with default values (used for createIndex) ex. {\"name\": 0}\r\n      // previousIndexes is indexes for previous version\r\n      const objectStore = transaction.objectStore(\"settings\");\r\n\r\n      for (const key of Object.keys(indexes)) {\r\n        objectStore.createIndex(key, key, { unique: false });\r\n      }\r\n\r\n      console.log(\"[VOT] The database has been updated\");\r\n      objectStore.transaction.oncomplete = (event) => {\r\n        const objectStore = db\r\n          .transaction(\"settings\", \"readwrite\")\r\n          .objectStore(\"settings\");\r\n        const request = objectStore.get(\"settings\");\r\n\r\n        request.onerror = (event) => {\r\n          console.error(\r\n            \"[VOT] Data could not be retrieved from the Database: \",\r\n            event.error\r\n          );\r\n          reject(false);\r\n        };\r\n\r\n        request.onsuccess = () => {\r\n          const data =\r\n            request.result || Object.assign(settingsDefault, previousIndexes); // use data from db or reset all data\r\n          for (const key in indexes) {\r\n            data[key] = indexes[key];\r\n          }\r\n\r\n          const requestUpdate = objectStore.put(data);\r\n\r\n          requestUpdate.onerror = (event) => {\r\n            console.error(\r\n              \"[VOT] Failed to update the Database to new version\",\r\n              event.error\r\n            );\r\n            reject(false);\r\n          };\r\n\r\n          requestUpdate.onsuccess = () => {\r\n            console.log(\r\n              \"[VOT] Standard settings of the new version have been added to the Database.\"\r\n            );\r\n            resolve(true);\r\n          };\r\n        };\r\n      };\r\n    }\r\n\r\n    const openRequest = openDB(\"VOT\");\r\n\r\n    openRequest.onerror = () => {\r\n      console.error(\r\n        `[VOT] ${_config_constants_js__WEBPACK_IMPORTED_MODULE_1__.translations[_menu_js__WEBPACK_IMPORTED_MODULE_0__.lang].VOTFailedInitDB}: ${openRequest.error.message}`\r\n      );\r\n      reject(false);\r\n    };\r\n\r\n    openRequest.onupgradeneeded = (event) => {\r\n      const db = openRequest.result;\r\n\r\n      db.onerror = () => {\r\n        const errorMessage = `[VOT] ${_config_constants_js__WEBPACK_IMPORTED_MODULE_1__.translations[_menu_js__WEBPACK_IMPORTED_MODULE_0__.lang].VOTFailedInitDB}`;\r\n        console.error(errorMessage, openRequest.error);\r\n        alert(errorMessage);\r\n        reject(false);\r\n      };\r\n\r\n      if (event.oldVersion < 1) {\r\n        // db not found\r\n        const objectStore = db.createObjectStore(\"settings\", {\r\n          keyPath: \"key\",\r\n        });\r\n\r\n        // add indexes for 1 version (without key index)\r\n        for (const key of Object.keys(settingsDefault).filter(\r\n          (k) => k !== \"key\"\r\n        )) {\r\n          objectStore.createIndex(key, key, { unique: false });\r\n        }\r\n\r\n        console.log(\"[VOT] Database Created\");\r\n\r\n        objectStore.transaction.oncomplete = (event) => {\r\n          const objectStore = db\r\n            .transaction(\"settings\", \"readwrite\")\r\n            .objectStore(\"settings\");\r\n          const request = objectStore.add(settingsDefault);\r\n\r\n          request.onsuccess = () => {\r\n            console.log(\r\n              \"[VOT] Standard settings added to the Database: \",\r\n              request.result\r\n            );\r\n            resolve(true);\r\n          };\r\n\r\n          request.onerror = () => {\r\n            console.log(\r\n              \"[VOT] Error when adding standard settings to the Database: \",\r\n              request.error\r\n            );\r\n            reject(false);\r\n          };\r\n        };\r\n      }\r\n\r\n      if (event.oldVersion < 2) {\r\n        // db is outdated (db version is 1)\r\n        updateVersionProccessor(openRequest.transaction, db, valuesV2);\r\n      }\r\n    };\r\n\r\n    openRequest.onsuccess = () => {\r\n      const db = openRequest.result;\r\n      db.onversionchange = () => {\r\n        db.close();\r\n        const errorMessage = `[VOT] ${_config_constants_js__WEBPACK_IMPORTED_MODULE_1__.translations[_menu_js__WEBPACK_IMPORTED_MODULE_0__.lang].VOTDBNeedUpdate}`;\r\n        console.log(errorMessage);\r\n        alert(errorMessage);\r\n        window.location.reload();\r\n        reject(false);\r\n      };\r\n      resolve(true);\r\n    };\r\n\r\n    openRequest.onblocked = () => {\r\n      const db = openRequest.result;\r\n      const errorMessage = `[VOT] ${_config_constants_js__WEBPACK_IMPORTED_MODULE_1__.translations[_menu_js__WEBPACK_IMPORTED_MODULE_0__.lang].VOTDisabledForDBUpdating}`;\r\n      console.error(errorMessage, db);\r\n      alert(errorMessage);\r\n      reject(false);\r\n    };\r\n  });\r\n}\r\n\r\nasync function updateDB({\r\n  autoTranslate,\r\n  defaultVolume,\r\n  showVideoSlider,\r\n  syncVolume,\r\n  autoSetVolumeYandexStyle,\r\n  dontTranslateYourLang,\r\n  audioProxy,\r\n}) {\r\n  return new Promise((resolve, reject) => {\r\n    if (\r\n      typeof autoTranslate === \"number\" ||\r\n      typeof defaultVolume === \"number\" ||\r\n      typeof showVideoSlider === \"number\" ||\r\n      typeof syncVolume === \"number\" ||\r\n      typeof autoSetVolumeYandexStyle === \"number\" ||\r\n      typeof dontTranslateYourLang === \"number\" ||\r\n      typeof audioProxy === \"number\"\r\n    ) {\r\n      const openRequest = openDB(\"VOT\");\r\n\r\n      openRequest.onerror = () => {\r\n        const errorMessage = `[VOT] ${_config_constants_js__WEBPACK_IMPORTED_MODULE_1__.translations[_menu_js__WEBPACK_IMPORTED_MODULE_0__.lang].VOTFailedWriteToDB}`;\r\n        console.error(errorMessage, openRequest.error.message);\r\n        alert(errorMessage);\r\n        reject(false);\r\n      };\r\n\r\n      openRequest.onupgradeneeded = async () => {\r\n        const db = openRequest.result;\r\n        db.close();\r\n        await initDB();\r\n        resolve(true);\r\n      };\r\n\r\n      openRequest.onsuccess = () => {\r\n        const db = openRequest.result;\r\n        db.onversionchange = () => {\r\n          db.close();\r\n          console.log(\r\n            \"[VOT] The database needs an update, please reload the page if it didn't happen automatically\"\r\n          );\r\n          window.location.reload();\r\n          reject(false);\r\n        };\r\n\r\n        const objectStore = db\r\n          .transaction(\"settings\", \"readwrite\")\r\n          .objectStore(\"settings\");\r\n        const request = objectStore.get(\"settings\");\r\n\r\n        request.onerror = (event) => {\r\n          console.error(\r\n            \"[VOT] Data could not be retrieved from the Database: \",\r\n            event.error\r\n          );\r\n          reject(false);\r\n        };\r\n\r\n        request.onsuccess = () => {\r\n          const data = request.result;\r\n\r\n          if (typeof autoTranslate === \"number\") {\r\n            data.autoTranslate = autoTranslate;\r\n          }\r\n\r\n          if (typeof defaultVolume === \"number\") {\r\n            data.defaultVolume = defaultVolume;\r\n          }\r\n\r\n          if (typeof showVideoSlider === \"number\") {\r\n            data.showVideoSlider = showVideoSlider;\r\n          }\r\n\r\n          if (typeof syncVolume === \"number\") {\r\n            data.syncVolume = syncVolume;\r\n          }\r\n\r\n          if (typeof autoSetVolumeYandexStyle === \"number\") {\r\n            data.autoSetVolumeYandexStyle = autoSetVolumeYandexStyle;\r\n          }\r\n\r\n          if (typeof dontTranslateYourLang === \"number\") {\r\n            data.dontTranslateYourLang = dontTranslateYourLang;\r\n          }\r\n\r\n          if (typeof audioProxy === \"number\") {\r\n            data.audioProxy = audioProxy;\r\n          }\r\n\r\n          const requestUpdate = objectStore.put(data);\r\n\r\n          requestUpdate.onerror = (event) => {\r\n            console.error(\r\n              \"[VOT] Не удалось обновить данные в Базе Данных: \",\r\n              event.error\r\n            );\r\n            reject(false);\r\n          };\r\n\r\n          requestUpdate.onsuccess = () => {\r\n            resolve(true);\r\n          };\r\n        };\r\n      };\r\n\r\n      openRequest.onblocked = () => {\r\n        const db = openRequest.result;\r\n        const errorMessage = `[VOT] ${_config_constants_js__WEBPACK_IMPORTED_MODULE_1__.translations[_menu_js__WEBPACK_IMPORTED_MODULE_0__.lang].VOTDisabledForDBUpdating}`;\r\n        console.error(errorMessage, db);\r\n        alert(errorMessage);\r\n        reject(false);\r\n      };\r\n    }\r\n  });\r\n}\r\n\r\nasync function readDB() {\r\n  return new Promise((resolve, reject) => {\r\n    const openRequest = openDB(\"VOT\");\r\n\r\n    openRequest.onerror = () => {\r\n      const errorMessage = `[VOT] ${_config_constants_js__WEBPACK_IMPORTED_MODULE_1__.translations[_menu_js__WEBPACK_IMPORTED_MODULE_0__.lang].VOTFailedReadFromDB}`;\r\n      console.error(errorMessage, openRequest.error.message);\r\n      alert(errorMessage);\r\n      reject(false);\r\n    };\r\n\r\n    openRequest.onupgradeneeded = async () => {\r\n      const db = openRequest.result;\r\n      db.close();\r\n      await initDB();\r\n      resolve(true);\r\n    };\r\n\r\n    openRequest.onsuccess = () => {\r\n      const db = openRequest.result;\r\n      db.onversionchange = () => {\r\n        db.close();\r\n        const errorMessage = `[VOT] ${_config_constants_js__WEBPACK_IMPORTED_MODULE_1__.translations[_menu_js__WEBPACK_IMPORTED_MODULE_0__.lang].VOTDBNeedUpdate}`;\r\n        console.error(errorMessage);\r\n        alert(errorMessage);\r\n        reject(false);\r\n      };\r\n\r\n      const objectStore = db.transaction(\"settings\").objectStore(\"settings\");\r\n      const request = objectStore.get(\"settings\");\r\n\r\n      request.onerror = (event) => {\r\n        console.error(\"[VOT]\", _config_constants_js__WEBPACK_IMPORTED_MODULE_1__.translations[_menu_js__WEBPACK_IMPORTED_MODULE_0__.lang].VOTFailedReadFromDB, event.error);\r\n        console.error(\"[VOT]\", event);\r\n        reject(false);\r\n      };\r\n\r\n      request.onsuccess = () => {\r\n        if (request.result === undefined) {\r\n          db.close();\r\n          deleteDB();\r\n          reject(false);\r\n        }\r\n        const data = request.result;\r\n        resolve(data);\r\n      };\r\n    };\r\n\r\n    openRequest.onblocked = () => {\r\n      const db = openRequest.result;\r\n      const errorMessage = `[VOT] ${_config_constants_js__WEBPACK_IMPORTED_MODULE_1__.translations[_menu_js__WEBPACK_IMPORTED_MODULE_0__.lang].VOTDisabledForDBUpdating}`;\r\n      console.error(errorMessage, db);\r\n      alert(errorMessage);\r\n      reject(false);\r\n    };\r\n  });\r\n}\r\n\r\nfunction deleteDB() {\r\n  indexedDB.deleteDatabase(\"VOT\");\r\n}\r\n\r\n\r\n\n\n//# sourceURL=webpack://voice-over-translation/./src/indexedDB.js?");

/***/ }),

/***/ "./src/menu.js":
/*!*********************!*\
  !*** ./src/menu.js ***!
  \*********************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"addTranslationBlock\": () => (/* binding */ addTranslationBlock),\n/* harmony export */   \"createMenuCheckbox\": () => (/* binding */ createMenuCheckbox),\n/* harmony export */   \"createMenuSelect\": () => (/* binding */ createMenuSelect),\n/* harmony export */   \"createMenuSlider\": () => (/* binding */ createMenuSlider),\n/* harmony export */   \"createTranslationMenu\": () => (/* binding */ createTranslationMenu),\n/* harmony export */   \"lang\": () => (/* binding */ lang),\n/* harmony export */   \"transformBtn\": () => (/* binding */ transformBtn)\n/* harmony export */ });\n/* harmony import */ var _utils_debug_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/debug.js */ \"./src/utils/debug.js\");\n/* harmony import */ var _config_constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./config/constants.js */ \"./src/config/constants.js\");\n\r\n\r\n\r\nconst userlang = navigator.language || navigator.userLanguage;\r\nlet lang = userlang.substr(0, 2).toLowerCase();\r\nif (!(lang in _config_constants_js__WEBPACK_IMPORTED_MODULE_1__.translations)) {\r\n  lang = \"en\";\r\n}\r\n\r\nfunction changeBtnColor(n) {\r\n  document.querySelector(\".translationBtn\").style.color = n;\r\n}\r\n\r\nfunction changeBtnState(newState = \"none\") {\r\n  document.querySelector(\".translationBtn\").dataset.state = newState;\r\n}\r\n\r\nfunction changeIconBackground(type = \"none\") {\r\n  let iconBackgroundColor;\r\n  switch (type) {\r\n    case \"error\":\r\n      iconBackgroundColor = \"#7A7A7D\";\r\n      break;\r\n    case \"success\":\r\n      iconBackgroundColor = \"#A36EFF\";\r\n      break;\r\n    default:\r\n      iconBackgroundColor = \"#FFFFFF\";\r\n      break;\r\n  }\r\n\r\n  document.querySelector(\".translateIcon\").style.fill = iconBackgroundColor;\r\n}\r\n\r\nfunction transformBtn(type = \"none\", text) {\r\n  switch (type) {\r\n    case \"error\":\r\n      changeIconBackground(type);\r\n      changeBtnColor(\"#7A7A7D\");\r\n      changeBtnState(type);\r\n      break;\r\n    case \"success\":\r\n      changeIconBackground(type);\r\n      changeBtnColor(\"#A36EFF\");\r\n      changeBtnState(type);\r\n      break;\r\n    default:\r\n      changeIconBackground(\"none\");\r\n      changeBtnColor(\"#FFFFFF\");\r\n      changeBtnState(\"none\");\r\n      break;\r\n  }\r\n\r\n  document.querySelector(\".translationBtn\").innerText = text;\r\n}\r\n\r\n// Add translation buttton block\r\nfunction addTranslationBlock(element) {\r\n  if (!element || element.querySelector(\".translationBlock\")) return;\r\n\r\n  const block = document.createElement(\"div\");\r\n  block.classList.add(\"translationBlock\");\r\n  block.innerHTML = `\r\n    <span class = \"translationArea\" role = \"button\">\r\n      <span class = \"translationITranslate\" tabindex = \"-1\">\r\n        <svg class=\"translateIcon\" width=\"24\" height=\"24\" viewBox=\"0 0 32 32\" fill=\"#fff\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M17.605 19.703c.794-.13 1.647-.476 2.47-.983.695 1.013 1.255 1.546 1.306 1.593l1.166-1.207c-.011-.01-.504-.48-1.124-1.401.277-.25.547-.512.797-.798a12.1 12.1 0 0 0 2.268-3.826c.383.216.761.541.96 1.027.68 1.649-.301 3.557-1.215 4.385l1.152 1.22c1.52-1.378 2.571-3.959 1.638-6.227-.368-.892-1.077-1.59-2.064-2.037.162-.763.216-1.38.233-1.785h-1.698c-.017.307-.06.762-.173 1.323-1.325-.187-2.818-.006-4.248.508a25.994 25.994 0 0 1-.313-2.547c5.092-.287 8.098-1.488 8.237-1.546l-.654-1.533c-.03.013-2.875 1.14-7.65 1.418-.001-.405-.008-.666-.012-.85-.008-.339-.01-.423.03-.67L17.01 5.75c-.026.283-.024.573-.018 1.278l.002.318c-.026 0-.051 0-.077.002l-.08.001a39.286 39.286 0 0 1-3.27-.14L13.25 8.89c.5.043 2.023.122 3.397.122h.1a19.457 19.457 0 0 1 .208-.003l.106-.002c.067.948.196 2.034.421 3.22a8.05 8.05 0 0 0-2.267 1.963l.811 1.871c.327-.732.995-1.51 1.856-2.111a16.762 16.762 0 0 0 1.33 3.346c-.811.514-1.64.818-2.301.804l.694 1.603Zm2.953-3.488a8.18 8.18 0 0 0 .374-.389 10.465 10.465 0 0 0 1.927-3.224c-.198-.021-.4-.031-.606-.031-.907 0-1.885.199-2.834.574.31 1.209.718 2.23 1.14 3.07ZM9.769 11.688 4.25 24.438h2.259l1.357-3.407h5.582l1.357 3.407h2.258l-5.52-12.75H9.77Zm.887 2.624 2.056 5H8.6l2.056-5Z\"></path>\r\n        </svg>\r\n      </span>\r\n      <span class = \"translationBtn\" tabindex = \"0\">${_config_constants_js__WEBPACK_IMPORTED_MODULE_1__.translations[lang].translateVideo}</span>\r\n    </span>\r\n    <span class = \"translationMenu\" tabindex = \"0\" role = \"button\">\r\n      <svg class = \"translationMenuIcon\" height=\"15\" width=\"5\" fill=\"#fff\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M3.5 1.5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0ZM3.5 7.5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0ZM3.5 13.5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0Z\"></path>\r\n      </svg>\r\n    </span>\r\n  `;\r\n\r\n  element.appendChild(block);\r\n  _utils_debug_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].log(\"Added translation button to \", element);\r\n}\r\n\r\nfunction createTranslationMenu() {\r\n  const container = document.createElement(\"div\");\r\n  container.classList.add(\"translationMenuContent\");\r\n  container.innerHTML = `\r\n    <p class = \"translationMainHeader\">${_config_constants_js__WEBPACK_IMPORTED_MODULE_1__.translations[lang].translationSettings}</p>\r\n    <div class=\"translationMenuOptions\"></div>\r\n    <div class=\"translationMenuFunctional\">\r\n      <a class = \"translationDownload\">\r\n        <svg width=\"24px\" height=\"24px\" data-darkreader-inline-stroke=\"\" fill=\"none\" stroke=\"currentColor\" style=\"--darkreader-inline-stroke: currentColor;\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4\"></path>\r\n        </svg>\r\n      </a>\r\n      <button class = \"translationDropDB\">${_config_constants_js__WEBPACK_IMPORTED_MODULE_1__.translations[lang].resetSettings}</button>\r\n    </div>\r\n  `;\r\n\r\n  container.onclick = (event) => event.stopPropagation();\r\n  return container;\r\n}\r\n\r\n// Create checkbox for menu\r\nfunction createMenuCheckbox(id, valueToCheck, content) {\r\n  const checkboxContainer = document.createElement(\"div\");\r\n  const checkbox = document.createElement(\"input\");\r\n  const checkboxLabel = document.createElement(\"label\");\r\n\r\n  checkbox.type = \"checkbox\";\r\n  checkbox.id = id;\r\n  checkbox.checked = Boolean(valueToCheck);\r\n\r\n  checkboxLabel.htmlFor = id;\r\n  checkboxLabel.innerHTML = content;\r\n\r\n  checkboxContainer.classList.add(\"translationMenuContainer\");\r\n  checkboxContainer.appendChild(checkbox);\r\n  checkboxContainer.appendChild(checkboxLabel);\r\n\r\n  return checkboxContainer;\r\n}\r\n\r\n// Create slider for menu\r\nfunction createMenuSlider(id, sliderValue, content) {\r\n  const sliderContainer = document.createElement(\"div\");\r\n  const slider = document.createElement(\"input\");\r\n  const sliderLabel = document.createElement(\"label\");\r\n\r\n  slider.type = \"range\";\r\n  slider.id = id;\r\n  slider.classList.add(\"VOTMenuSlider\");\r\n  slider.min = 0;\r\n  slider.max = 100;\r\n  slider.value = sliderValue;\r\n\r\n  sliderLabel.htmlFor = id;\r\n  sliderLabel.classList.add(\"translationHeader\");\r\n  sliderLabel.innerHTML = content;\r\n\r\n  sliderContainer.classList.add(\"translationMenuContainer\");\r\n  sliderContainer.appendChild(sliderLabel);\r\n  sliderContainer.appendChild(slider);\r\n\r\n  return sliderContainer;\r\n}\r\n\r\n// Create select for menu\r\nfunction createMenuSelect(id, selectOptions) {\r\n  // selectOptions structure:\r\n  // [\r\n  //     {\r\n  //         label: string,\r\n  //         value: string,\r\n  //         selected: boolean,\r\n  //         disabled: boolean\r\n  //     }\r\n  // ]\r\n  const selectContainer = document.createElement(\"div\");\r\n  const select = document.createElement(\"select\");\r\n\r\n  select.id = id;\r\n  select.classList.add(\"VOTMenuSelect\");\r\n\r\n  for (const option of selectOptions) {\r\n    const optionElement = document.createElement(\"option\");\r\n    optionElement.innerText = option.label;\r\n    optionElement.value = option.value;\r\n    if (\r\n      Object.prototype.hasOwnProperty.call(option, \"selected\") &&\r\n      option.selected\r\n    ) {\r\n      optionElement.setAttribute(\"selected\", \"selected\");\r\n    }\r\n\r\n    if (Object.prototype.hasOwnProperty.call(option, \"disabled\")) {\r\n      optionElement.disabled = option.disabled;\r\n    }\r\n\r\n    select.appendChild(optionElement);\r\n  }\r\n\r\n  selectContainer.classList.add(\"translationMenuContainer\");\r\n  selectContainer.appendChild(select);\r\n\r\n  return selectContainer;\r\n}\r\n\r\n\r\n\n\n//# sourceURL=webpack://voice-over-translation/./src/menu.js?");

/***/ }),

/***/ "./src/rvs.js":
/*!********************!*\
  !*** ./src/rvs.js ***!
  \********************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _getUUID_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getUUID.js */ \"./src/getUUID.js\");\n/* harmony import */ var _getSignature_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./getSignature.js */ \"./src/getSignature.js\");\n/* harmony import */ var _yandexProtobuf_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./yandexProtobuf.js */ \"./src/yandexProtobuf.js\");\n/* harmony import */ var _utils_debug_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/debug.js */ \"./src/utils/debug.js\");\n\r\n\r\n\r\n\r\n\r\n// Request video subtitles from Yandex API\r\nasync function requestVideoSubtitles(\r\n  url,\r\n  requestLang,\r\n  callback\r\n) {\r\n  try {\r\n    _utils_debug_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].log(\"requestVideoSubtitles\");\r\n    const yar = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ./yandexRequest.js */ \"./src/yandexRequest.js\"));\r\n    const yandexRequest = yar.default;\r\n    _utils_debug_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].log(\"Inited yandexRequest...\");\r\n    // Initialize variables\r\n    const body = _yandexProtobuf_js__WEBPACK_IMPORTED_MODULE_2__.yandexProtobuf.encodeSubtitlesRequest(\r\n      url,\r\n      requestLang\r\n    );\r\n    // Send the request\r\n    await yandexRequest(\r\n      \"/video-subtitles/get-subtitles\",\r\n      body,\r\n      {\r\n        \"Vsubs-Signature\": await (0,_getSignature_js__WEBPACK_IMPORTED_MODULE_1__.getSignature)(body),\r\n        \"Sec-Vsubs-Token\": (0,_getUUID_js__WEBPACK_IMPORTED_MODULE_0__.getUUID)(false),\r\n      },\r\n      callback,\r\n    );\r\n  } catch (exception) {\r\n    console.error(\"[VOT]\", exception);\r\n    // Handle errors\r\n    callback(false);\r\n  }\r\n}\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (requestVideoSubtitles);\r\n\n\n//# sourceURL=webpack://voice-over-translation/./src/rvs.js?");

/***/ }),

/***/ "./src/rvt.js":
/*!********************!*\
  !*** ./src/rvt.js ***!
  \********************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _getUUID_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getUUID.js */ \"./src/getUUID.js\");\n/* harmony import */ var _getSignature_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./getSignature.js */ \"./src/getSignature.js\");\n/* harmony import */ var _yandexProtobuf_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./yandexProtobuf.js */ \"./src/yandexProtobuf.js\");\n/* harmony import */ var _utils_debug_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/debug.js */ \"./src/utils/debug.js\");\n\r\n\r\n\r\n\r\n\r\n// Request video translation from Yandex API\r\nasync function requestVideoTranslation(\r\n  url,\r\n  duration,\r\n  requestLang,\r\n  responseLang,\r\n  callback\r\n) {\r\n  try {\r\n    _utils_debug_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].log(\"requestVideoTranslation\");\r\n    const yar = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ./yandexRequest.js */ \"./src/yandexRequest.js\"));\r\n    const yandexRequest = yar.default;\r\n    _utils_debug_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].log(\"Inited yandexRequest...\");\r\n    // Initialize variables\r\n    const body = _yandexProtobuf_js__WEBPACK_IMPORTED_MODULE_2__.yandexProtobuf.encodeTranslationRequest(\r\n      url,\r\n      duration,\r\n      requestLang,\r\n      responseLang\r\n    );\r\n    // Send the request\r\n    await yandexRequest(\r\n      // \"/stream-translation/whitelist-stream\",\r\n      // \"/stream-translation/translate-stream\",\r\n      \"/video-translation/translate\",\r\n      body,\r\n      {\r\n        \"Vtrans-Signature\": await (0,_getSignature_js__WEBPACK_IMPORTED_MODULE_1__.getSignature)(body),\r\n        \"Sec-Vtrans-Token\": (0,_getUUID_js__WEBPACK_IMPORTED_MODULE_0__.getUUID)(false),\r\n      },\r\n      callback,\r\n    );\r\n  } catch (exception) {\r\n    console.error(\"[VOT]\", exception);\r\n    // Handle errors\r\n    callback(false);\r\n  }\r\n}\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (requestVideoTranslation);\r\n\n\n//# sourceURL=webpack://voice-over-translation/./src/rvt.js?");

/***/ }),

/***/ "./src/subtitles.js":
/*!**************************!*\
  !*** ./src/subtitles.js ***!
  \**************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"addSubtitlesWidget\": () => (/* binding */ addSubtitlesWidget),\n/* harmony export */   \"fetchSubtitles\": () => (/* binding */ fetchSubtitles),\n/* harmony export */   \"getSubtitles\": () => (/* binding */ getSubtitles),\n/* harmony export */   \"setSubtitlesWidgetContent\": () => (/* binding */ setSubtitlesWidgetContent)\n/* harmony export */ });\n/* harmony import */ var _utils_youtubeUtils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/youtubeUtils.js */ \"./src/utils/youtubeUtils.js\");\n/* harmony import */ var _utils_utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/utils.js */ \"./src/utils/utils.js\");\n/* harmony import */ var _yandexProtobuf_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./yandexProtobuf.js */ \"./src/yandexProtobuf.js\");\n/* harmony import */ var _config_constants_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./config/constants.js */ \"./src/config/constants.js\");\n/* harmony import */ var _menu_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./menu.js */ \"./src/menu.js\");\n/* harmony import */ var _rvs_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./rvs.js */ \"./src/rvs.js\");\n/* harmony import */ var _utils_debug_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./utils/debug.js */ \"./src/utils/debug.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction formatYandexSubtitlesTokens(line) {\r\n  const lineEndMs = line.startMs + line.durationMs;\r\n  return line.tokens.reduce((result, token, index) => {\r\n    const nextToken = line.tokens[index + 1];\r\n    const lastToken = result[result.length - 1];\r\n    const alignRangeEnd = lastToken?.alignRange?.end ?? 0;\r\n    const newAlignRangeEnd = alignRangeEnd + token.text.length;\r\n    result.push(Object.assign(Object.assign({}, token), {\r\n      alignRange: {\r\n        start: alignRangeEnd,\r\n        end: newAlignRangeEnd\r\n      }\r\n    }));\r\n    if (nextToken) {\r\n      const endMs = token.startMs + token.durationMs;\r\n      const durationMs = nextToken.startMs ? nextToken.startMs - endMs : lineEndMs - endMs;\r\n      result.push({\r\n        text: \" \",\r\n        startMs: endMs,\r\n        durationMs,\r\n        alignRange: {\r\n          start: newAlignRangeEnd,\r\n          end: newAlignRangeEnd + 1\r\n        }\r\n      });\r\n    }\r\n    return result;\r\n  }, []);\r\n}\r\n\r\nfunction createSubtitlesTokens(line, previousLineLastToken) {\r\n  const tokens = line.text.split(new RegExp(\"([\\n \\t])\")).reduce((result, tokenText) => {\r\n    if (tokenText.length) {\r\n      const lastToken = result[result.length - 1] ?? previousLineLastToken;\r\n      const alignRangeStart = lastToken?.alignRange?.end ?? 0;\r\n      const alignRangeEnd = alignRangeStart + tokenText.length;\r\n      result.push({\r\n        text: tokenText,\r\n        alignRange: {\r\n          start: alignRangeStart,\r\n          end: alignRangeEnd\r\n        }\r\n      });\r\n    }\r\n    return result;\r\n  }, []);\r\n  const tokenDurationMs = Math.floor(line.durationMs / tokens.length);\r\n  const lineEndMs = line.startMs + line.durationMs;\r\n  return tokens.map((token, index) => {\r\n    const isLastToken = index === tokens.length - 1;\r\n    const startMs = line.startMs + tokenDurationMs * index;\r\n    const durationMs = isLastToken ? lineEndMs - startMs : tokenDurationMs;\r\n    return Object.assign(Object.assign({}, token), {\r\n      startMs,\r\n      durationMs\r\n    });\r\n  });\r\n}\r\n\r\nfunction getSubtitlesTokens(subtitles, source) {\r\n  const result = [];\r\n  let lastToken;\r\n  for (const line of subtitles.subtitles) {\r\n    let tokens;\r\n    if (line?.tokens?.length) {\r\n      if (source === \"yandex\") {\r\n        tokens = formatYandexSubtitlesTokens(line);\r\n      } else {\r\n        console.warn(\"[VOT] Unsupported subtitles tokens type: \", source);\r\n        subtitles.containsTokens = false;\r\n        return null;\r\n      }\r\n    } else {\r\n      tokens = createSubtitlesTokens(line, lastToken);\r\n    }\r\n    lastToken = tokens[tokens.length - 1];\r\n    result.push(Object.assign(Object.assign({}, line), {\r\n      tokens\r\n    }));\r\n  }\r\n  subtitles.containsTokens = true;\r\n  return result;\r\n}\r\n\r\nfunction formatYoutubeSubtitles(subtitles) {\r\n  const result = {\r\n    containsTokens: false,\r\n    subtitles: []\r\n  };\r\n  if (typeof subtitles !== \"object\" || !(\"events\" in subtitles) || !Array.isArray(subtitles.events)) {\r\n    console.error(\"[VOT] Failed to format youtube subtitles\", subtitles);\r\n    return result;\r\n  }\r\n  for (const e of subtitles.events) {\r\n    if (!e.segs) continue;\r\n    const text = e.segs.map((e => e.utf8.replace(/^ +| +$/g, \"\"))).join(\" \");\r\n    if (text !== \"\\n\") {\r\n      result.subtitles.push({\r\n        text,\r\n        startMs: e.tStartMs,\r\n        durationMs: e.dDurationMs\r\n      });\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\nasync function fetchSubtitles(subtitlesObject) {\r\n  let resolved = false;\r\n  let subtitles = await Promise.race([\r\n    new Promise(async (resolve) => {\r\n      await (0,_utils_utils_js__WEBPACK_IMPORTED_MODULE_1__.sleep)(5000);\r\n      if (!resolved) {\r\n        console.error(\"[VOT] Failed to fetch subtitles. Reason: timeout\");\r\n      }\r\n      resolved = true;\r\n      resolve([]);\r\n    }),\r\n    new Promise(async (resolve) => {\r\n      _utils_debug_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"].log(\"Fetching subtitles:\", subtitlesObject);\r\n      await fetch(subtitlesObject.url)\r\n        .then((response) => response.json())\r\n        .then((json) => {\r\n          resolved = true;\r\n          resolve(json);\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"[VOT] Failed to fetch subtitles. Reason:\", error);\r\n          resolved = true;\r\n          resolve({\r\n            containsTokens: false,\r\n            subtitles: []\r\n          });\r\n        });\r\n    })\r\n  ]);\r\n  if (subtitlesObject.source === \"youtube\") {\r\n    subtitles = formatYoutubeSubtitles(subtitles);\r\n  }\r\n  subtitles.subtitles = getSubtitlesTokens(subtitles, subtitlesObject.source);\r\n  console.log(\"[VOT] subtitles:\", subtitles);\r\n  return subtitles;\r\n}\r\n\r\nasync function getSubtitles(siteHostname, videoId, requestLang) {\r\n  const ytSubtitles = siteHostname === \"youtube\" ? _utils_youtubeUtils_js__WEBPACK_IMPORTED_MODULE_0__.youtubeUtils.getSubtitles() : [];\r\n  let resolved = false;\r\n  const yaSubtitles = await Promise.race([\r\n    new Promise(async (resolve) => {\r\n      await (0,_utils_utils_js__WEBPACK_IMPORTED_MODULE_1__.sleep)(5000);\r\n      if (!resolved) {\r\n        console.error(\"[VOT] Failed get yandex subtitles. Reason: timeout\");\r\n      }\r\n      resolved = true;\r\n      resolve([]);\r\n    }),\r\n    new Promise((resolve) => {\r\n      (0,_rvs_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(\r\n        `${_config_constants_js__WEBPACK_IMPORTED_MODULE_3__.siteTranslates[siteHostname]}${videoId}`,\r\n        requestLang,\r\n        (success, response) => {\r\n          _utils_debug_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"].log(\"[exec callback] Requesting video subtitles\");\r\n\r\n          if (!success) {\r\n            console.error(\"[VOT] Failed get yandex subtitles\");\r\n            resolved = true;\r\n            resolve([]);\r\n          }\r\n\r\n          const subtitlesResponse = _yandexProtobuf_js__WEBPACK_IMPORTED_MODULE_2__.yandexProtobuf.decodeSubtitlesResponse(response);\r\n          console.log(\"[VOT] Subtitles response: \", subtitlesResponse);\r\n\r\n          let subtitles = subtitlesResponse.subtitles ?? [];\r\n          subtitles = subtitles.reduce((result, yaSubtitlesObject) => {\r\n            if (\r\n              yaSubtitlesObject.language &&\r\n              !result.find((e) => {\r\n                if (\r\n                  e.source === \"yandex\" &&\r\n                  e.language === yaSubtitlesObject.language &&\r\n                  !e.translatedFromLanguage\r\n                ) {\r\n                  return e;\r\n                }\r\n              })\r\n            ) {\r\n              result.push({\r\n                source: \"yandex\",\r\n                language: yaSubtitlesObject.language,\r\n                url: yaSubtitlesObject.url,\r\n              });\r\n            }\r\n            if (yaSubtitlesObject.translatedLanguage) {\r\n              result.push({\r\n                source: \"yandex\",\r\n                language: yaSubtitlesObject.translatedLanguage,\r\n                translatedFromLanguage: yaSubtitlesObject.language,\r\n                url: yaSubtitlesObject.translatedUrl,\r\n              });\r\n            }\r\n            return result;\r\n          }, []);\r\n          resolved = true;\r\n          resolve(subtitles);\r\n        }\r\n      );\r\n    })\r\n  ]);\r\n  const subtitles = [...yaSubtitles, ...ytSubtitles].sort((a, b) => {\r\n    if (a.source !== b.source) { // sort by source\r\n      return a.source === \"yandex\" ? -1 : 1;\r\n    }\r\n    if (a.language !== b.language && (a.language === _menu_js__WEBPACK_IMPORTED_MODULE_4__.lang || b.language === _menu_js__WEBPACK_IMPORTED_MODULE_4__.lang)) { // sort by user language\r\n      return a.language === _menu_js__WEBPACK_IMPORTED_MODULE_4__.lang ? -1 : 1;\r\n    }\r\n    if (a.source === \"yandex\") { // sort by translation\r\n      if (a.translatedFromLanguage !== b.translatedFromLanguage) { // sort by translatedFromLanguage\r\n        if (!a.translatedFromLanguage || !b.translatedFromLanguage) { // sort by isTranslated\r\n          if (a.language === b.language) {\r\n            return a.translatedFromLanguage ? 1 : -1;\r\n          }\r\n          return !a.translatedFromLanguage ? 1 : -1;\r\n        }\r\n        return a.translatedFromLanguage === requestLang ? -1 : 1;\r\n      }\r\n      if (!a.translatedFromLanguage) { // sort non translated by language\r\n        return a.language === requestLang ? -1 : 1;\r\n      }\r\n    }\r\n    if (a.source === \"youtube\" && a.isAutoGenerated !== b.isAutoGenerated) { // sort by isAutoGenerated\r\n      return a.isAutoGenerated ? 1 : -1;\r\n    }\r\n    return 0;\r\n  });\r\n  console.log(\"[VOT] subtitles list\", subtitles);\r\n  return subtitles;\r\n}\r\n\r\nvar subtitlesWidget = null;\r\n\r\nfunction addSubtitlesWidget(element) {\r\n  if (element.querySelector(\".VOTSubtitlesWidget\")) return;\r\n\r\n  const container = document.createElement(\"div\");\r\n  container.classList.add(\"VOTSubtitlesWidget\");\r\n  element.appendChild(container);\r\n  subtitlesWidget = container;\r\n\r\n  let dragging = false;\r\n  let containerRect, elementRect;\r\n  let offsetX, offsetY;\r\n\r\n  function onMouseDown(e) {\r\n    if (container.contains(e.target)) {\r\n      containerRect = container.getBoundingClientRect();\r\n      elementRect = element.getBoundingClientRect();\r\n      offsetX = e.clientX - containerRect.x;\r\n      offsetY = e.clientY - containerRect.y;\r\n      dragging = true;\r\n    }\r\n  }\r\n\r\n  function onMouseUp() {\r\n    dragging = false;\r\n  }\r\n\r\n  function onMouseMove(e) {\r\n    if (dragging) {\r\n      e.preventDefault();\r\n      const x = e.clientX - offsetX;\r\n      const y = e.clientY - offsetY;\r\n      const top = y >= elementRect.top;\r\n      const bottom = y + containerRect.height <= elementRect.bottom;\r\n      const left = x >= elementRect.left;\r\n      const right = x + containerRect.width <= elementRect.right;\r\n\r\n      if (top && bottom) {\r\n        container.style.top = `${y - elementRect.y}px`;\r\n      } else {\r\n        if (!top) {\r\n          container.style.top = `${0}px`;\r\n        } else {\r\n          container.style.top = `${elementRect.height - containerRect.height}px`;\r\n        }\r\n      }\r\n      if (left && right) {\r\n        container.style.left = `${x - elementRect.x}px`;\r\n      } else {\r\n        if (!left) {\r\n          container.style.left = `${0}px`;\r\n        } else {\r\n          container.style.left = `${elementRect.width - containerRect.width}px`;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  document.addEventListener('mousedown', onMouseDown);\r\n  document.addEventListener('mouseup', onMouseUp);\r\n  document.addEventListener('mousemove', onMouseMove);\r\n}\r\n\r\nvar subtitles = null;\r\nvar lastText = null;\r\n\r\nfunction onTimeUpdate(event) {\r\n  let text = \"\";\r\n  const time = event.target.currentTime * 1000;\r\n  const line = subtitles.subtitles.findLast((e) => {\r\n    if (e.startMs < time && time < e.startMs + e.durationMs) {\r\n      return e;\r\n    }\r\n  });\r\n  if (line) {\r\n    if (line.text.length > 300) {\r\n      let chunks = line.text.match(/.{1,300}(?:\\s|$)/g);\r\n      let chunkDurationMs = line.durationMs / chunks.length;\r\n      for (let i = 0; i < chunks.length; i++) {\r\n        if (line.startMs + chunkDurationMs * i < time && time < line.startMs + chunkDurationMs * (i + 1)) {\r\n          text = chunks[i].trim();\r\n          break;\r\n        }\r\n      }\r\n    } else {\r\n      text = line.text;\r\n    }\r\n  }\r\n  if (text !== lastText) {\r\n    lastText = text;\r\n    subtitlesWidget.innerHTML = text ? `<div>${text.replace(\"\\\\n\", \"<br>\")}</div>` : \"\";\r\n  }\r\n}\r\n\r\nfunction setSubtitlesWidgetContent(video, subs) {\r\n  if (subs) {\r\n    subtitles = subs;\r\n    video?.addEventListener(\"timeupdate\", onTimeUpdate);\r\n  } else {\r\n    subtitles = null;\r\n    video?.removeEventListener(\"timeupdate\", onTimeUpdate);\r\n    subtitlesWidget.innerHTML = \"\";\r\n  }\r\n}\r\n\n\n//# sourceURL=webpack://voice-over-translation/./src/subtitles.js?");

/***/ }),

/***/ "./src/utils/debug.js":
/*!****************************!*\
  !*** ./src/utils/debug.js ***!
  \****************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _config_constants_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../config/constants.js */ \"./src/config/constants.js\");\n\r\n\r\nconst debug = {};\r\ndebug.log = (...text) => {\r\n  if (false) {}\r\n  return console.log(\r\n    \"%c[VOT DEBUG]\",\r\n    \"background: #F2452D; color: #fff; padding: 5px;\",\r\n    ...text\r\n  );\r\n};\r\n\r\ndebug.translations = (testLang) => {\r\n  if (false) {}\r\n  // for add indexes\r\n  const testedTranslations = Object.entries(_config_constants_js__WEBPACK_IMPORTED_MODULE_0__.translations[testLang]).map(\r\n    ([key, value]) => ({\r\n      phrase: key,\r\n      translated: value,\r\n    })\r\n  );\r\n  testedTranslations.unshift({\r\n    phrase: \"language_code (debug only)\",\r\n    translated: testLang,\r\n  });\r\n  return console.table(testedTranslations);\r\n};\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (debug);\r\n\n\n//# sourceURL=webpack://voice-over-translation/./src/utils/debug.js?");

/***/ }),

/***/ "./src/utils/utils.js":
/*!****************************!*\
  !*** ./src/utils/utils.js ***!
  \****************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getVideoId\": () => (/* binding */ getVideoId),\n/* harmony export */   \"secsToStrTime\": () => (/* binding */ secsToStrTime),\n/* harmony export */   \"sleep\": () => (/* binding */ sleep),\n/* harmony export */   \"waitForElm\": () => (/* binding */ waitForElm)\n/* harmony export */ });\n/* harmony import */ var _config_constants_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../config/constants.js */ \"./src/config/constants.js\");\n/* harmony import */ var _menu_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../menu.js */ \"./src/menu.js\");\n\r\n\r\n\r\nif (!String.prototype.format) {\r\n  // https://stackoverflow.com/questions/610406/javascript-equivalent-to-printf-string-format\r\n  // syntax example: \"is {0} function\".format(\"format\")\r\n  String.prototype.format = function () {\r\n    // store arguments in an array\r\n    var args = arguments;\r\n    // use replace to iterate over the string\r\n    // select the match and check if the related argument is present\r\n    // if yes, replace the match with the argument\r\n    return this.replace(/{(\\d+)}/g, function (match, index) {\r\n      // check if the argument is present\r\n      return typeof args[index] != \"undefined\" ? args[index] : match;\r\n    });\r\n  };\r\n}\r\n\r\nfunction waitForElm(selector) {\r\n  // https://stackoverflow.com/questions/5525071/how-to-wait-until-an-element-exists\r\n  return new Promise((resolve) => {\r\n    const element = document.querySelector(selector);\r\n    if (element) {\r\n      return resolve(element);\r\n    }\r\n\r\n    const observer = new MutationObserver(() => {\r\n      const element = document.querySelector(selector);\r\n      if (element) {\r\n        resolve(element);\r\n        observer.disconnect();\r\n      }\r\n    });\r\n\r\n    observer.observe(document.body, {\r\n      childList: true,\r\n      subtree: true,\r\n      once: true,\r\n    });\r\n  });\r\n}\r\n\r\nconst sleep = (m) => new Promise((r) => setTimeout(r, m));\r\n\r\nconst getVideoId = (service) => {\r\n  const url = new URL(window.location.href);\r\n\r\n  switch (service) {\r\n    case \"youtube\":\r\n      return (\r\n        url.pathname.match(/(?:watch|embed)\\/([^/]+)/)?.[1] ||\r\n        url.searchParams.get(\"v\")\r\n      );\r\n    case \"vk\":\r\n      if (url.pathname.match(/^\\/video-?[0-9]{8,9}_[0-9]{9}$/)) {\r\n        return url.pathname.match(/^\\/video-?[0-9]{8,9}_[0-9]{9}$/)[0].slice(1);\r\n      } else if (url.searchParams.get(\"z\")) {\r\n        return url.searchParams.get(\"z\").split(\"/\")[0];\r\n      } else if (url.searchParams.get(\"oid\") && url.searchParams.get(\"id\")) {\r\n        return `video-${Math.abs(\r\n          url.searchParams.get(\"oid\")\r\n        )}_${url.searchParams.get(\"id\")}`;\r\n      } else {\r\n        return false;\r\n      }\r\n    case \"9gag\":\r\n    case \"gag\":\r\n      return url.pathname.match(/gag\\/([^/]+)/)?.[1];\r\n    case \"twitch\":\r\n      if (/^m\\.twitch\\.tv$/.test(window.location.hostname)) {\r\n        const linkUrl = document.head.querySelector('link[rel=\"canonical\"]');\r\n        return (\r\n          linkUrl?.href.match(/videos\\/([^/]+)/)?.[0] || url.pathname.slice(1)\r\n        );\r\n      } else if (/^player\\.twitch\\.tv$/.test(window.location.hostname)) {\r\n        return `videos/${url.searchParams.get(\"video\")}`;\r\n      } else if (/^clips\\.twitch\\.tv$/.test(window.location.hostname)) {\r\n        // get link to twitch channel (ex.: https://www.twitch.tv/xqc)\r\n        const channelLink = document.querySelector(\r\n          \".tw-link[data-test-selector='stream-info-card-component__stream-avatar-link']\"\r\n        );\r\n        if (!channelLink) {\r\n          return false;\r\n        }\r\n\r\n        const channelName = channelLink.href.replace(\r\n          \"https://www.twitch.tv/\",\r\n          \"\"\r\n        );\r\n        return `${channelName}/clip/${url.searchParams.get(\"clip\")}`;\r\n      } else if (url.pathname.match(/([^/]+)\\/(?:clip)\\/([^/]+)/)) {\r\n        return url.pathname.match(/([^/]+)\\/(?:clip)\\/([^/]+)/)[0];\r\n      } else {\r\n        return url.pathname.match(/(?:videos)\\/([^/]+)/)?.[0];\r\n      }\r\n    case \"tiktok\":\r\n      return url.pathname.match(/video\\/([^/]+)/)?.[1];\r\n    case \"vimeo\":\r\n      return (\r\n        url.pathname.match(/[^/]+\\/[^/]+$/)?.[0] ||\r\n        url.pathname.match(/[^/]+$/)?.[0]\r\n      );\r\n    case \"xvideos\":\r\n      return url.pathname.match(/[^/]+\\/[^/]+$/)?.[0];\r\n    case \"pornhub\":\r\n      return (\r\n        url.searchParams.get(\"viewkey\") ||\r\n        url.pathname.match(/embed\\/([^/]+)/)?.[1]\r\n      );\r\n    case \"twitter\":\r\n      return url.pathname.match(/status\\/([^/]+)/)?.[1];\r\n    case \"udemy\":\r\n      return url.pathname;\r\n    case \"facebook\":\r\n      return url.pathname;\r\n    case \"rutube\":\r\n      return url.pathname.match(/(?:video|embed)\\/([^/]+)/)?.[1];\r\n    case \"coub\":\r\n      return url.pathname.match(/view\\/([^/]+)/)?.[1];\r\n    case \"bilibili.com\":\r\n      const bvid = url.searchParams.get(\"bvid\");\r\n      if (bvid) {\r\n        return bvid;\r\n      } else {\r\n        let vid = url.pathname.match(/video\\/([^/]+)/)?.[1];\r\n        if (vid && url.search && url.searchParams.get(\"p\") !== null) {\r\n          vid += `/?p=${url.searchParams.get(\"p\")}`;\r\n        }\r\n        return vid;\r\n      }\r\n    case \"mail.ru\":\r\n      if (url.pathname.startsWith(\"/v/\") || url.pathname.startsWith(\"/mail/\")) {\r\n        return url.pathname;\r\n      } else if (url.pathname.match(/video\\/embed\\/([^/]+)/)) {\r\n        const referer = document.querySelector(\r\n          \".b-video-controls__mymail-link\"\r\n        );\r\n        if (!referer) {\r\n          return false;\r\n        }\r\n\r\n        return referer?.href.split(\"my.mail.ru\")?.[1];\r\n      }\r\n    default:\r\n      return false;\r\n  }\r\n};\r\n\r\nfunction secsToStrTime(secs) {\r\n  const minutes = Math.floor(secs / 60);\r\n  const seconds = Math.floor(secs % 60);\r\n  if (minutes >= 60) {\r\n    return _config_constants_js__WEBPACK_IMPORTED_MODULE_0__.translations[_menu_js__WEBPACK_IMPORTED_MODULE_1__.lang].translationTakeMoreThanHour;\r\n  } else if (minutes >= 10 && minutes % 10) {\r\n    return _config_constants_js__WEBPACK_IMPORTED_MODULE_0__.translations[_menu_js__WEBPACK_IMPORTED_MODULE_1__.lang].translationTakeApproximatelyMinutes.format(\r\n      minutes\r\n    );\r\n  } else if (minutes == 1 || (minutes == 0 && seconds > 0)) {\r\n    return _config_constants_js__WEBPACK_IMPORTED_MODULE_0__.translations[_menu_js__WEBPACK_IMPORTED_MODULE_1__.lang].translationTakeAboutMinute;\r\n  } else {\r\n    return _config_constants_js__WEBPACK_IMPORTED_MODULE_0__.translations[_menu_js__WEBPACK_IMPORTED_MODULE_1__.lang].translationTakeApproximatelyMinute.format(\r\n      minutes\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\n\n//# sourceURL=webpack://voice-over-translation/./src/utils/utils.js?");

/***/ }),

/***/ "./src/utils/volume.js":
/*!*****************************!*\
  !*** ./src/utils/volume.js ***!
  \*****************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"syncVolume\": () => (/* binding */ syncVolume)\n/* harmony export */ });\n// element - audio / video element\r\nfunction syncVolume(element, sliderVolume, otherSliderVolume, tempVolume) {\r\n  let finalValue;\r\n  if (sliderVolume > tempVolume) {\r\n    // sliderVolume = 100\r\n    // tempVolume = 69\r\n    // volume = 15\r\n    // 100 - 69 = 31\r\n    // 15 + 31 = 46 - final video volume\r\n    finalValue = otherSliderVolume + (sliderVolume - tempVolume);\r\n    finalValue = finalValue > 100 ? 100 : Math.max(finalValue, 0);\r\n\r\n    element.volume = finalValue / 100;\r\n  } else if (sliderVolume < tempVolume) {\r\n    // sliderVolume = 69\r\n    // tempVolume = 100\r\n    // volume = 15\r\n    // 100 - 69 = 31\r\n    // 15 - 31 = 0 - final video volume\r\n    finalValue = otherSliderVolume - (tempVolume - sliderVolume);\r\n    finalValue = finalValue > 100 ? 100 : Math.max(finalValue, 0);\r\n\r\n    element.volume = finalValue / 100;\r\n  }\r\n\r\n  return finalValue;\r\n}\r\n\r\n\r\n\n\n//# sourceURL=webpack://voice-over-translation/./src/utils/volume.js?");

/***/ }),

/***/ "./src/utils/youtubeUtils.js":
/*!***********************************!*\
  !*** ./src/utils/youtubeUtils.js ***!
  \***********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"youtubeUtils\": () => (/* binding */ youtubeUtils)\n/* harmony export */ });\n/* harmony import */ var _debug_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./debug.js */ \"./src/utils/debug.js\");\n\r\n\r\nasync function detect(cleanText) {\r\n  const response = await fetch(\"https://rust-server-531j.onrender.com/detect\", {\r\n    method: \"POST\",\r\n    body: cleanText,\r\n  });\r\n  return await response.text();\r\n}\r\n\r\n// Get the language code from the response or the text\r\nasync function getLanguage(player, response, title, description, author) {\r\n  if (!window.location.hostname.includes(\"m.youtube.com\")) {\r\n    // ! Experimental ! get lang from selected audio track if availabled\r\n    const audioTracks = player.getAudioTrack();\r\n    const trackInfo = audioTracks?.getLanguageInfo(); // get selected track info (id === \"und\" if tracks are not available)\r\n    if (trackInfo?.id !== \"und\") {\r\n      return trackInfo.id.split(\".\")[0];\r\n    }\r\n  }\r\n\r\n  // TODO: If the audio tracks will work fine, transfer the receipt of captions to the audioTracks variable\r\n  // Check if there is an automatic caption track in the response\r\n  const captionTracks =\r\n    response?.captions?.playerCaptionsTracklistRenderer?.captionTracks;\r\n  if (captionTracks?.length) {\r\n    const autoCaption = captionTracks.find((caption) => caption.kind === \"asr\");\r\n    if (autoCaption) {\r\n      return autoCaption.languageCode;\r\n    }\r\n  }\r\n  // If there is no caption track, use detect to get the language code from the text\r\n  const text = [title, description, author].join(\" \");\r\n  // Remove anything that is not a letter or a space in any language\r\n  const cleanText = text\r\n    .replace(/\\s+/g, \" \").trim()\r\n    .replace(/https?:\\/\\/\\S+/g, \"\")\r\n    .replace(/[^\\p{L}\\s]/gu, \"\")\r\n    .slice(0, 250);\r\n  return await detect(cleanText);\r\n}\r\n\r\nfunction isMobile() {\r\n  return /^m\\.youtube\\.com$/.test(window.location.hostname);\r\n}\r\n\r\nfunction getPlayer() {\r\n  return isMobile() ? document.querySelector(\"#app\") : document.querySelector(\"#movie_player\");\r\n}\r\n\r\nfunction getPlayerResponse() {\r\n  const player = getPlayer();\r\n  if (isMobile())\r\n    return player?.data?.playerResponse ?? null;\r\n  return player?.getPlayerResponse?.call() ?? null;\r\n}\r\n\r\nfunction getSubtitles() {\r\n  const response = getPlayerResponse();\r\n  let captionTracks =\r\n    response?.captions?.playerCaptionsTracklistRenderer?.captionTracks ?? [];\r\n  captionTracks = captionTracks.reduce((result, captionTrack) => {\r\n    if (\"languageCode\" in captionTrack) {\r\n      const language =\r\n        captionTrack?.languageCode?.toLowerCase().split(\";\")[0].trim().split(\"-\")[0];\r\n      const url = captionTrack?.url || captionTrack?.baseUrl;\r\n      language && url && result.push({\r\n        source: \"youtube\",\r\n        language,\r\n        isAutoGenerated: captionTrack?.kind === \"asr\",\r\n        url: `${url.startsWith(\"http\") ? url : `${window.location.origin}/${url}`}&fmt=json3`,\r\n      });\r\n    }\r\n    return result;\r\n  }, []);\r\n  _debug_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].log(\"youtube subtitles:\", captionTracks);\r\n  return captionTracks;\r\n}\r\n\r\n// Get the video data from the player\r\nasync function getVideoData() {\r\n  const player = getPlayer();\r\n  const response = getPlayerResponse();\r\n  const { author, title, shortDescription: description, isLive, isLiveContent, isUpcoming } = response?.videoDetails ?? {};\r\n  const isPremiere = (!!isLive || !!isUpcoming) && !isLiveContent;\r\n  const videoData = {\r\n    isLive: !!isLive,\r\n    isPremiere,\r\n    title,\r\n    description,\r\n    author,\r\n    detectedLanguage: await getLanguage(\r\n      player,\r\n      response,\r\n      title,\r\n      description,\r\n      author\r\n    ),\r\n  };\r\n  _debug_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].log(\"youtube video data:\", videoData);\r\n  console.log(\"[VOT] Detected language: \", videoData.detectedLanguage);\r\n  return videoData;\r\n}\r\n\r\nconst youtubeUtils = {\r\n  isMobile,\r\n  getPlayer,\r\n  getPlayerResponse,\r\n  getSubtitles,\r\n  getVideoData\r\n}\r\n\n\n//# sourceURL=webpack://voice-over-translation/./src/utils/youtubeUtils.js?");

/***/ }),

/***/ "./src/yandexProtobuf.js":
/*!*******************************!*\
  !*** ./src/yandexProtobuf.js ***!
  \*******************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"yandexProtobuf\": () => (/* binding */ yandexProtobuf)\n/* harmony export */ });\nconst VideoTranslationRequest = new protobuf.Type(\"VideoTranslationRequest\")\r\n  .add(new protobuf.Field(\"url\", 3, \"string\"))\r\n  .add(new protobuf.Field(\"deviceId\", 4, \"string\")) // removed?\r\n  .add(new protobuf.Field(\"firstRequest\", 5, \"bool\")) // true for the first request, false for subsequent ones\r\n  .add(new protobuf.Field(\"duration\", 6, \"double\"))\r\n  .add(new protobuf.Field(\"unknown2\", 7, \"int32\")) // 1 1\r\n  .add(new protobuf.Field(\"language\", 8, \"string\")) // source language code\r\n  .add(new protobuf.Field(\"unknown3\", 9, \"int32\")) // 0 0\r\n  .add(new protobuf.Field(\"unknown4\", 10, \"int32\")) // 0 0\r\n  .add(new protobuf.Field(\"translationHelp\", 11, \"int32\")) // array for translation assistance ([0] -> {2: link to video, 1: \"video_file_url\"}, [1] -> {2: link to subtitles, 1: \"subtitles_file_url\"})\r\n  .add(new protobuf.Field(\"responseLanguage\", 14, \"string\")); // target language code\r\n\r\nconst VideoSubtitlesRequest = new protobuf.Type(\"VideoSubtitlesRequest\")\r\n  .add(new protobuf.Field(\"url\", 1, \"string\"))\r\n  .add(new protobuf.Field(\"language\", 2, \"string\")); // source language code\r\n\r\n// const VideoWhitelistStreamRequest = new protobuf.Type(\"VideoWhitelistStreamRequest\")\r\n//   .add(new protobuf.Field(\"url\", 1, \"string\"))\r\n//   .add(new protobuf.Field(\"deviceId\", 4, \"string\"))\r\n\r\n// const VideoTranslationStreamRequest = new protobuf.Type(\"VideoTranslationStreamRequest\")\r\n//   .add(new protobuf.Field(\"url\", 1, \"string\"))\r\n//   .add(new protobuf.Field(\"language\", 2, \"string\"))\r\n//   .add(new protobuf.Field(\"responseLanguage\", 3, \"string\"))\r\n\r\nconst VideoTranslationResponse = new protobuf.Type(\"VideoTranslationResponse\")\r\n  .add(new protobuf.Field(\"url\", 1, \"string\"))\r\n  .add(new protobuf.Field(\"duration\", 2, \"double\"))\r\n  .add(new protobuf.Field(\"status\", 4, \"int32\")) // status\r\n  .add(new protobuf.Field(\"remainingTime\", 5, \"int32\")) // secs before translation\r\n  .add(new protobuf.Field(\"unknown0\", 6, \"int32\")) // unknown 0 (1st request) -> 10 (2nd, 3th and etc requests)\r\n  .add(new protobuf.Field(\"unknown1\", 7, \"string\"))\r\n  .add(new protobuf.Field(\"language\", 8, \"string\")) // detected language (if the wrong one is set)\r\n  .add(new protobuf.Field(\"message\", 9, \"string\"));\r\n\r\nconst VideoSubtitlesObject = new protobuf.Type(\"VideoSubtitlesObject\")\r\n  .add(new protobuf.Field(\"language\", 1, \"string\"))\r\n  .add(new protobuf.Field(\"url\", 2, \"string\"))\r\n  .add(new protobuf.Field(\"unknown2\", 3, \"int32\"))\r\n  .add(new protobuf.Field(\"translatedLanguage\", 4, \"string\"))\r\n  .add(new protobuf.Field(\"translatedUrl\", 5, \"string\"))\r\n  .add(new protobuf.Field(\"unknown5\", 6, \"int32\"))\r\n  .add(new protobuf.Field(\"unknown6\", 7, \"int32\"));\r\n\r\nconst VideoSubtitlesResponse = new protobuf.Type(\"VideoSubtitlesResponse\")\r\n  .add(new protobuf.Field(\"unknown0\", 1, \"int32\"))\r\n  .add(new protobuf.Field(\"subtitles\", 2, \"VideoSubtitlesObject\", \"repeated\"));\r\n\r\n// const VideoWhitelistStreamResponse = new protobuf.Type(\"VideoWhitelistStreamResponse\")\r\n//   .add(new protobuf.Field(\"inWhitelist\", 1, \"bool\"))\r\n\r\n// const VideoTranslationStreamResponse = new protobuf.Type(\"VideoTranslationStreamResponse\")\r\n//   .add(new protobuf.Field(\"unknown1\", 1, \"int32\"))\r\n//   .add(new protobuf.Field(\"array\", 2, \"string\"))\r\n//   .add(new protobuf.Field(\"ping\", 3, \"int32\"))\r\n\r\n// Create a root namespace and add the types\r\n// const root = new protobuf.Root().define(\"yandex\").add(VideoWhitelistStreamRequest).add(VideoWhitelistStreamResponse);\r\n\r\n// // Export the encoding and decoding functions\r\n// export const yandexProtobuf = {\r\n//   encodeTranslationRequest(url, deviceId, unknown1, requestLang, responseLang) {\r\n//     return root.VideoWhitelistStreamRequest.encode({\r\n//       url,\r\n//       deviceId: 'UCLA_DiR1FfKNvjuUpBHmylQ'\r\n//     }).finish();\r\n//   },\r\n//   decodeTranslationResponse(response) {\r\n//     return root.VideoWhitelistStreamResponse.decode(new Uint8Array(response));\r\n//   }\r\n// };\r\n\r\n// // Create a root namespace and add the types\r\n// const root = new protobuf.Root().define(\"yandex\").add(VideoTranslationStreamRequest).add(VideoTranslationStreamResponse);\r\n\r\n// // Export the encoding and decoding functions\r\n// export const yandexProtobuf = {\r\n//   encodeTranslationRequest(url, deviceId, unknown1, requestLang, responseLang) {\r\n//     return root.VideoTranslationStreamRequest.encode({\r\n//       url,\r\n//       language: requestLang,\r\n//       responseLanguage: responseLang\r\n//     }).finish();\r\n//   },\r\n//   decodeTranslationResponse(response) {\r\n//     return root.VideoTranslationStreamResponse.decode(new Uint8Array(response));\r\n//   }\r\n// };\r\n\r\n// Create a root namespace and add the types\r\nconst root = new protobuf.Root()\r\n  .define(\"yandex\")\r\n  .add(VideoTranslationRequest)\r\n  .add(VideoTranslationResponse)\r\n  .add(VideoSubtitlesRequest)\r\n  .add(VideoSubtitlesObject)\r\n  .add(VideoSubtitlesResponse);\r\n\r\n// Export the encoding and decoding functions\r\nconst yandexProtobuf = {\r\n  encodeTranslationRequest(url, duration, requestLang, responseLang) {\r\n    return root.VideoTranslationRequest.encode({\r\n      url,\r\n      firstRequest: true,\r\n      duration,\r\n      unknown2: 1,\r\n      language: requestLang,\r\n      unknown3: 0,\r\n      unknown4: 0,\r\n      responseLanguage: responseLang,\r\n    }).finish();\r\n  },\r\n  decodeTranslationResponse(response) {\r\n    return root.VideoTranslationResponse.decode(new Uint8Array(response));\r\n  },\r\n  encodeSubtitlesRequest(url, requestLang) {\r\n    return root.VideoSubtitlesRequest.encode({\r\n      url,\r\n      language: requestLang,\r\n    }).finish();\r\n  },\r\n  decodeSubtitlesResponse(response) {\r\n    return root.VideoSubtitlesResponse.decode(new Uint8Array(response));\r\n  },\r\n};\r\n\n\n//# sourceURL=webpack://voice-over-translation/./src/yandexProtobuf.js?");

/***/ }),

/***/ "./src/yandexRequest.js":
/*!******************************!*\
  !*** ./src/yandexRequest.js ***!
  \******************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _config_config_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./config/config.js */ \"./src/config/config.js\");\n/* harmony import */ var _utils_debug_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/debug.js */ \"./src/utils/debug.js\");\n\r\n\r\n\r\nasync function yandexRequest(\r\n  path,\r\n  body,\r\n  headers,\r\n  callback\r\n) {\r\n  try {\r\n    _utils_debug_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].log(\"yandexRequest:\", path);\r\n    // Create a fetch options object with headers and body\r\n    const options = {\r\n      url: `https://${_config_config_js__WEBPACK_IMPORTED_MODULE_0__.workerHost}${path}`,\r\n      method: \"POST\",\r\n      headers: {\r\n        ...{\r\n          \"Accept\": \"application/x-protobuf\",\r\n          \"Accept-Language\": \"en\",\r\n          \"Content-Type\": \"application/x-protobuf\",\r\n          \"User-Agent\": _config_config_js__WEBPACK_IMPORTED_MODULE_0__.yandexUserAgent,\r\n          \"Pragma\": \"no-cache\",\r\n          \"Cache-Control\": \"no-cache\",\r\n          \"Sec-Fetch-Mode\": \"no-cors\",\r\n          \"sec-ch-ua\": null,\r\n          \"sec-ch-ua-mobile\": null,\r\n          \"sec-ch-ua-platform\": null,\r\n        },\r\n        ...headers\r\n      },\r\n      binary: true,\r\n      data: new Blob([body]),\r\n      responseType: \"arraybuffer\"\r\n    };\r\n    // Send the request using GM_xmlhttpRequest\r\n    GM_xmlhttpRequest({\r\n      ...options,\r\n      onload: (http) => {\r\n        _utils_debug_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].log(\"yandexRequest:\", http.status, http);\r\n        callback(http.status === 200, http.response);\r\n      },\r\n      onerror: (error) => {\r\n        console.error(\"[VOT]\", error);\r\n        callback(false);\r\n      },\r\n    });\r\n  } catch (exception) {\r\n    console.error(\"[VOT]\", exception);\r\n    // Handle errors\r\n    callback(false);\r\n  }\r\n}\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (yandexRequest);\r\n\n\n//# sourceURL=webpack://voice-over-translation/./src/yandexRequest.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/nonce */
/******/ 	(() => {
/******/ 		__webpack_require__.nc = undefined;
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;